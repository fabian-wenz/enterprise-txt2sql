[
    {
        "adjusted": false,
        "annotation": "Which unique facility building keys, building street addresses, cities, states, and postal codes are associated with the department of History for street addresses?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "Which unique facility building keys, building street addresses, cities, states, and postal codes are associated with the department of History for street addresses?\n",
            "Show the distinct facility building keys, building street addresses, cities, states, and postal codes for buildings where the department name is 'History' and the address purpose is 'STREET'.\n",
            "List the unique facility building keys, street addresses, cities, states, and postal codes for buildings related to the History department with a street address purpose.\n",
            "Retrieve the distinct facility building keys, building street addresses, cities, states, and postal codes for buildings linked to the History department with a street address purpose."
        ],
        "question": "What is the current building key, building street address, city, state, and postal code of the history department?",
        "sql": "SELECT DISTINCT d.FCLT_BUILDING_KEY, e.BUILDING_STREET_ADDRESS, d.CITY, d.STATE, d.POSTAL_CODE FROM FCLT_BUILDING_ADDRESS d JOIN FCLT_ROOMS a ON a.FCLT_BUILDING_KEY = d.FCLT_BUILDING_KEY JOIN FCLT_ORG_DLC_KEY b ON a.FCLT_ORGANIZATION_KEY = b.FCLT_ORGANIZATION_KEY JOIN MASTER_DEPT_HIERARCHY c ON b.DLC_KEY = c.DLC_KEY JOIN BUILDINGS e ON e.BUILDING_KEY = d.FCLT_BUILDING_KEY WHERE lower(c.DLC_NAME) = lower('History') AND d.ADDRESS_PURPOSE = 'STREET';"
    },
    {
        "adjusted": false,
        "annotation": "List the distinct activity titles, session locations, term start dates, and leader names for those with the role of 'Activity leader' ordered by the start date of the academic term in an ascending manner.\r\n\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "Which activity titles, session locations, term start dates, and names of leaders are associated with the role of 'Activity leader' in ascending order of term start date?\n   \n",
            "Show the unique activity titles, session locations, term start dates, and names of leaders who hold the role of 'Activity leader' sorted by the start date of the academic term in ascending order.\n\n",
            "List the distinct activity titles, session locations, term start dates, and leader names for those with the role of 'Activity leader' ordered by the start date of the academic term in an ascending manner.\n\n",
            "What are the activity titles, session locations, term start dates, and names of leaders for individuals designated as 'Activity leader', sorted by the start date of the academic term in ascending order?"
        ],
        "question": "Show the unique activity titles, locations, term start date, and supervisor name for all independent activities, sorted by the ascending order of start date.",
        "sql": "SELECT DISTINCT a.activity_title, d.session_location, c.term_start_date, b.person_name AS Leader FROM iap_subject_detail a JOIN iap_subject_person b ON a.iap_subject_person_key = b.iap_subject_person_key JOIN academic_terms_all c ON c.term_code = a.term_code JOIN iap_subject_session d ON a.iap_subject_session_key = d.iap_subject_session_key WHERE b.person_role = 'Activity leader' ORDER BY term_start_date ASC;"
    },
    {
        "adjusted": true,
        "annotation": "What are the names of instructors, titles of subjects, and the count of reserved ISBNs for each unique combination of course instructor key and the key of subject offered",
        "comment": "maybe window function not complete",
        "db_id": "dw",
        "options": [
            "How many unique ISBNs are reserved for each combination of instructor, subject, and material in the library system?\n",
            "What is the count of distinct ISBNs reserved for each instructor, subject, and material in the library system?\n",
            "Which instructors, subjects, and how many unique ISBNs are reserved for each combination in the library's reserve catalog?\n",
            "What are the names of instructors, titles of subjects, and the count of reserved ISBNs for each unique combination in the library's reserve catalog?"
        ],
        "question": "List the unique course instructor names, course titles, and the amount of material for each course instructor key and the key of subject offered.",
        "sql": "SELECT DISTINCT LIBRARY_COURSE_INSTRUCTOR.instructor_name, LIBRARY_SUBJECT_OFFERED.subject_title, COUNT(LIBRARY_RESERVE_CATALOG.catalog_isbn) OVER (PARTITION BY LIBRARY_COURSE_INSTRUCTOR.LIBRARY_COURSE_INSTRUCTOR_KEY, LIBRARY_SUBJECT_OFFERED.LIBRARY_SUBJECT_OFFERED_KEY) FROM LIBRARY_COURSE_INSTRUCTOR JOIN LIBRARY_RESERVE_MATRL_DETAIL ON LIBRARY_COURSE_INSTRUCTOR.LIBRARY_COURSE_INSTRUCTOR_KEY = LIBRARY_RESERVE_MATRL_DETAIL.LIBRARY_COURSE_INSTRUCTOR_KEY JOIN LIBRARY_SUBJECT_OFFERED ON LIBRARY_SUBJECT_OFFERED.LIBRARY_SUBJECT_OFFERED_KEY = LIBRARY_RESERVE_MATRL_DETAIL.LIBRARY_SUBJECT_OFFERED_KEY JOIN LIBRARY_RESERVE_CATALOG ON LIBRARY_RESERVE_CATALOG.LIBRARY_RESERVE_CATALOG_KEY = LIBRARY_RESERVE_MATRL_DETAIL.LIBRARY_RESERVE_CATALOG_KEY;"
    },
    {
        "adjusted": false,
        "annotation": "Show the room number, floor, building key, street address, city, state, and postal code of the building where Lily-Mae Knapp's office is located.\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What is the room number, floor, building key, street address, city, state, and postal code of the office location for employee Lily-Mae Knapp?\n",
            "Show the room number, floor, building key, street address, city, state, and postal code of the building where Lily-Mae Knapp's office is located.\n",
            "Retrieve the room details, building key, street address, city, state, and postal code for the office of Lily-Mae Knapp.\n",
            "Provide the room number, floor, building key, street address, city, state, and postal code for the building where Lily-Mae Knapp's office is situated."
        ],
        "question": "What is the room, floor, building key, building street address, city, state, and postal code of Professor Lily Knapp's office?",
        "sql": "SELECT fac_rooms.Room, fac_rooms.floor, fac_building_address.BUILDING_KEY, BUILDINGS.BUILDING_STREET_ADDRESS, fac_building_address.CITY, fac_building_address.STATE, fac_building_address.POSTAL_CODE FROM (SELECT office_location FROM employee_directory WHERE full_name = 'Knapp, Lily-Mae') JOIN fac_rooms on office_location = fac_room_key JOIN fac_building_address on fac_rooms.building_key = fac_building_address.BUILDING_KEY JOIN BUILDINGS ON BUILDINGS.BUILDING_KEY = fac_building_address.BUILDING_KEY where fac_building_address.ADDRESS_PURPOSE = 'STREET';"
    },
    {
        "adjusted": false,
        "annotation": "Which unique room names, building names, street addresses, cities, states, and postal codes are associated with courses offered in the 'Electrical Eng & Computer Sci' department at facilities with a street address purpose?\r\n",
        "comment": "full name is not being used",
        "db_id": "dw",
        "options": [
            "Which unique room names, building names, street addresses, cities, states, and postal codes are associated with courses offered in the 'Electrical Eng & Computer Sci' department at facilities with a street address purpose?\n",
            "Show the distinct room names, building names, street addresses, cities, states, and postal codes where courses in the 'Electrical Eng & Computer Sci' department are offered at facilities with a street address purpose.\n",
            "What are the unique room names, building names, street addresses, cities, states, and postal codes for courses offered in the 'Electrical Eng & Computer Sci' department at facilities designated for street addresses?\n",
            "List the distinct room names, building names, street addresses, cities, states, and postal codes associated with courses offered in the 'Electrical Eng & Computer Sci' department at facilities with a street address purpose."
        ],
        "question": "Show the unique full room names, building names, the street address, the city, the state and postal code of subjects that are enrollable for Computer Science students.",
        "sql": "SELECT DISTINCT fr.ROOM_FULL_NAME, b.BUILDING_NAME, b.BUILDING_STREET_ADDRESS, fba.CITY, fba.STATE, fba.POSTAL_CODE FROM COURSE_CATALOG_SUBJECT_OFFERED JOIN FCLT_ROOMS fr ON MEET_PLACE = FCLT_ROOM_KEY JOIN FCLT_BUILDING_ADDRESS fba ON fba.FCLT_BUILDING_KEY = fr.FCLT_BUILDING_KEY JOIN FCLT_BUILDING fb ON fb.FCLT_BUILDING_KEY = fr.FCLT_BUILDING_KEY JOIN BUILDINGS b ON b.BUILDING_KEY = fr.FCLT_BUILDING_KEY WHERE DEPARTMENT_NAME = 'Electrical Eng & Computer Sci' AND fba.ADDRESS_PURPOSE = 'STREET';"
    },
    {
        "adjusted": false,
        "annotation": "List the unique term codes, subject titles, rooms, floors, building keys, building street addresses, cities, states, postal codes, form types, and number of enrolled students for classes with more than 300 students enrolled in buildings with street addresses.\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "Which term, subject title, room, floor, building key, building address, city, state, postal code, form type, and number of enrolled students are associated with classes with more than 300 students enrolled in buildings with a street address?\n",
            "Show the term code, subject title, room, floor, building key, building street address, city, state, postal code, form type, and number of enrolled students for classes with over 300 enrolled students held in buildings with street addresses.\n",
            "List the unique term codes, subject titles, rooms, floors, building keys, building street addresses, cities, states, postal codes, form types, and number of enrolled students for classes with more than 300 students enrolled in buildings with street addresses.\n",
            "What are the term codes, subject titles, rooms, floors, building keys, building street addresses, cities, states, postal codes, form types, and number of enrolled students for classes with over 300 students enrolled in buildings with street addresses?"
        ],
        "question": "List the unique term code, subject title, room, floor, building key, building street address, city, state, and postal code, formats, and number of enrolled students for all courses with more than 300 attendees.",
        "sql": "SELECT DISTINCT s.TERM_CODE, s.subject_title, fr.room, fr.floor, b.BUILDING_KEY, b.BUILDING_STREET_ADDRESS, fba.CITY, fba.STATE, fba.POSTAL_CODE, s.form_type, s.num_enrolled_students FROM subject_offered s JOIN FCLT_ROOMS fr ON MEET_PLACE = FCLT_ROOM_KEY JOIN FCLT_BUILDING_ADDRESS fba ON fba.FCLT_BUILDING_KEY = fr.FCLT_BUILDING_KEY JOIN BUILDINGS b ON fr.FCLT_BUILDING_KEY = b.BUILDING_KEY WHERE s.num_enrolled_students > 300 AND fba.ADDRESS_PURPOSE = 'STREET';"
    },
    {
        "adjusted": false,
        "annotation": "How can I retrieve the subject titles, titles of materials, ISBNs, new shelf prices, and the total new shelf prices per subject title for TIP materials, with the results sorted by the new shelf price in ascending order?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the unique subject titles, book titles, ISBNs, new shelf prices, and total new shelf prices per subject title for all materials offered in the TIP program, sorted by new shelf price in ascending order?\n",
            "Can you list the subject titles, book titles, ISBNs, new shelf prices, and the sum of new shelf prices per subject title for materials in the TIP program, ordered by the new shelf price in an ascending manner?\n",
            "How can I retrieve the subject titles, titles of materials, ISBNs, new shelf prices, and the total new shelf prices per subject title for TIP materials, with the results sorted by the new shelf price in ascending order?\n",
            "Which subject titles, material titles, ISBNs, new shelf prices, and the sum of new shelf prices per subject title can be displayed for TIP materials, with the data sorted by the new shelf price in ascending order?"
        ],
        "question": "What are the subject titles, their material titles, ISBN numbers, new shelf prices, and total costs of new materials for each subject title, sorted by individual item prices in ascending order?",
        "sql": "SELECT DISTINCT tso.SUBJECT_TITLE, tm.title, tm.isbn, tm.new_shelf_price, SUM(tm.new_shelf_price) OVER(PARTITION BY tso.SUBJECT_TITLE) FROM tip_material tm JOIN TIP_DETAIL td ON tm.TIP_MATERIAL_KEY = td.TIP_MATERIAL_KEY JOIN TIP_SUBJECT_OFFERED tso ON tso.SUBJECT_ID = td.SUBJECT_ID ORDER BY tm.new_shelf_price ASC;"
    },
    {
        "adjusted": false,
        "annotation": "Which buildings constructed before 1950 have more than 100 employees, and what are their respective building names, years built, and total number of employees?\r\n",
        "comment": "not unique and not long name",
        "db_id": "dw",
        "options": [
            "What are the building names, years built, and number of employees for buildings constructed before 1950 with over 100 employees in each building?\n",
            "Which buildings constructed before 1950 have more than 100 employees, and what are their respective building names, years built, and total number of employees?\n",
            "Show the building names, years built, and count of employees for buildings built before 1950 that have over 100 employees in each building.\n",
            "List the names of buildings, their construction years, and the total number of employees for buildings constructed before 1950 with more than 100 employees in each building."
        ],
        "question": "List the long building names constructed before 1950 that have more than 100 employees and the built year and number of employees.",
        "sql": "SELECT * FROM (SELECT DISTINCT a.BUILDING_NAME_LONG, a.year_built, COUNT(distinct employee_directory.MIT_ID) OVER (PARTITION BY a.BUILDING_NAME_LONG, a.year_built) as num_employees FROM (SELECT * FROM (SELECT DISTINCT FCLT_BUILDING_KEY, BUILDING_NAME_LONG, extract(year FROM TO_DATE(date_built, 'MM/DD/YYYY')) as year_built FROM fclt_building_hist) WHERE year_built < 1950) a JOIN fclt_rooms ON fclt_rooms.FCLT_BUILDING_KEY = a.FCLT_BUILDING_KEY JOIN employee_directory ON employee_directory.OFFICE_LOCATION = fclt_rooms.BUILDING_ROOM ) WHERE num_employees > 100;"
    },
    {
        "adjusted": false,
        "annotation": "Can you provide a list of building names and the number of distinct subject IDs offered in each building?",
        "comment": "cis is missing",
        "db_id": "dw",
        "options": [
            "How many unique subject IDs are offered in each building, along with the building names?\n",
            "What is the count of distinct subject IDs offered in each building, and what are the corresponding building names?\n",
            "Which building names are associated with the count of unique subject IDs offered in each building?\n",
            "Can you provide a list of building names and the number of distinct subject IDs offered in each building?"
        ],
        "question": "For each building key, what is the building name and the number of courses offered by the Center for International Studies.",
        "sql": "SELECT fb.BUILDING_NAME, COUNT(DISTINCT ccc.subject_id) FROM cis_course_catalog ccc JOIN COURSE_CATALOG_SUBJECT_OFFERED ccso ON ccc.SUBJECT_ID = ccso.SUBJECT_ID JOIN FCLT_ROOMS fr ON ccso.MEET_PLACE = fr.FCLT_ROOM_KEY JOIN FCLT_BUILDING fb ON fb.FCLT_BUILDING_KEY = fr.FCLT_BUILDING_KEY GROUP BY fb.FCLT_BUILDING_KEY, fb.BUILDING_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "What are the names of the buildings and the number of students in each building with the highest number of students?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the names of the buildings and the number of students in each building with the highest number of students?\n",
            "Which building has the most students and how many students are there in that building?\n",
            "Show the building names and the count of students in each building that has the maximum number of students.\n",
            "List the unique building names and the corresponding number of students in each building that has the highest student count."
        ],
        "question": "What is the name of the building that accomodates the most students and the number of students this building accomodates?",
        "sql": "SELECT DISTINCT building_name, num_students FROM (SELECT fclt_building_key, COUNT(distinct full_name) as num_students FROM fclt_rooms JOIN mit_student_directory ON office_location=BUILDING_ROOM GROUP BY fclt_building_key) a JOIN fclt_building ON a.fclt_building_key = fclt_building.fclt_building_key JOIN (SELECT MAX(num_students) as max_num_students FROM (SELECT fclt_building_key, COUNT(distinct full_name) as num_students FROM fclt_rooms JOIN mit_student_directory ON office_location=BUILDING_ROOM GROUP BY fclt_building_key)) b ON a.num_students = b.max_num_students;"
    },
    {
        "adjusted": false,
        "annotation": "What are the unique building names and floors of the highest floor in the facility?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the unique building names and floors of the highest floor in the facility?\n",
            "Which building names and corresponding floors belong to the highest floor in the facility?\n",
            "Can you list the distinct building names and floors that are on the highest floor in the facility?\n",
            "Show me the building names and floors that are on the highest floor in the facility, ensuring no duplicates are included."
        ],
        "question": "List name and floor of the building with the largest floor number?",
        "sql": "SELECT DISTINCT B.BUILDING_NAME, A.FLOOR FROM FAC_FLOOR A JOIN FAC_BUILDING B ON A.BUILDING_KEY = B.FAC_BUILDING_KEY JOIN (SELECT max(f) as highest_floor FROM (SELECT CASE WHEN REGEXP_LIKE(FLOOR, '^\\d+$') THEN TO_NUMBER(FLOOR) ELSE NULL END AS f FROM fac_floor)) ON (CASE WHEN REGEXP_LIKE(A.FLOOR, '^\\d+$') THEN TO_NUMBER(FLOOR) ELSE NULL END) = highest_floor;"
    },
    {
        "adjusted": false,
        "annotation": "Can you show the IAP category name, academic year, total fee, total number of subjects, minimum attendance, and maximum attendance for each category and year?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the total fees, total number of subjects, minimum attendance, and maximum attendance for each IAP category in each academic year?\n",
            "Can you show the IAP category name, academic year, total fee, total number of subjects, minimum attendance, and maximum attendance for each category and year?\n",
            "How many subjects are offered in each IAP category for each academic year, along with the total fee, minimum attendance, and maximum attendance?\n",
            "Show the IAP category name, academic year, total fee, total number of subjects, minimum attendance, and maximum attendance for each category and academic year."
        ],
        "question": "For each IAP category and academic year, list the category name, academic year, total fee collected, total number of IAP subjects, and the minimum and maximum enrollment.",
        "sql": "SELECT isc.IAP_CATEGORY_NAME, td.ACADEMIC_YEAR, SUM(isd.FEE) AS Total_Fee, COUNT(distinct isd.ACTIVITY_TITLE) AS Total_Subjects, MIN(isd.MAX_ENROLLMENT) AS Min_Attendance, MAX(isd.MAX_ENROLLMENT) AS Max_Attendance FROM IAP_SUBJECT_DETAIL isd JOIN IAP_SUBJECT_CATEGORY isc ON isd.IAP_SUBJECT_CATEGORY_KEY = isc.IAP_SUBJECT_CATEGORY_KEY JOIN TIME_DAY td ON isd.TERM_CODE = td.ACADEMIC_TERM_CODE GROUP BY isc.IAP_CATEGORY_NAME, td.ACADEMIC_YEAR;"
    },
    {
        "adjusted": false,
        "annotation": "Which sponsors are associated with the total number of subject sessions, maximum enrollment, minimum fee, and maximum fee?\r\n",
        "comment": "sponsor name is not specifically named",
        "db_id": "dw",
        "options": [
            "How many total sessions, maximum enrollment, minimum fee, and maximum fee are associated with each sponsor?\n",
            "What is the count of unique subject sessions, total maximum enrollment, minimum fee, and maximum fee for each sponsor?\n",
            "Which sponsors are associated with the total number of subject sessions, maximum enrollment, minimum fee, and maximum fee?\n",
            "For each sponsor, what are the total sessions, maximum enrollment, minimum fee, and maximum fee values?"
        ],
        "question": "For each sponsor of the independent activity periods, list the sponsor name, number of sessions held, the total number of enrollment, and the minimum and maximum fee.",
        "sql": "SELECT issr.SPONSOR_NAME, COUNT(distinct iss.IAP_SUBJECT_SESSION_KEY) AS Total_Sessions, SUM(isd.MAX_ENROLLMENT), MIN(isd.FEE) AS Min_Fee, MAX(isd.FEE) AS Max_Fee FROM IAP_SUBJECT_SESSION iss JOIN IAP_SUBJECT_DETAIL isd ON iss.IAP_SUBJECT_SESSION_KEY = isd.IAP_SUBJECT_SESSION_KEY JOIN IAP_SUBJECT_SPONSOR issr ON isd.IAP_SUBJECT_SPONSOR_KEY = issr.IAP_SUBJECT_SPONSOR_KEY GROUP BY issr.SPONSOR_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "What are the email addresses, names, academic years, total number of distinct subjects, minimum fee, maximum fee, and total maximum enrollment of subjects for each person in each academic year?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the email addresses, names, academic years, total number of distinct subjects, minimum fee, maximum fee, and total maximum enrollment of subjects for each person in each academic year?\n",
            "Which individuals have registered for subjects, and what are their email addresses, names, academic years, total number of distinct subjects, minimum fee, maximum fee, and total maximum enrollment of subjects for each academic year?\n",
            "Can you provide a list of people along with their email addresses, names, academic years, total number of distinct subjects, minimum fee, maximum fee, and total maximum enrollment of subjects for each academic year?\n",
            "How many subjects have each person enrolled in, and what are their email addresses, names, academic years, total number of distinct subjects, minimum fee, maximum fee, and total maximum enrollment of subjects for each academic year?"
        ],
        "question": "What is the person's email and name, academic year, total number of IAP subjects, the minimum and maximum fees, and the total course enrollment for each person involved and academic year?",
        "sql": "SELECT isp.PERSON_EMAIL, isp.PERSON_NAME, td.ACADEMIC_YEAR, COUNT(distinct isd.ACTIVITY_TITLE) AS Total_Subjects, MIN(isd.FEE) AS Min_Fee, MAX(isd.FEE) AS Max_Fee, SUM(isd.MAX_ENROLLMENT) FROM IAP_SUBJECT_PERSON isp JOIN IAP_SUBJECT_DETAIL isd ON isp.IAP_SUBJECT_PERSON_KEY = isd.IAP_SUBJECT_PERSON_KEY JOIN TIME_DAY td ON isd.TERM_CODE = td.ACADEMIC_TERM_CODE GROUP BY isp.PERSON_EMAIL, isp.PERSON_NAME, td.ACADEMIC_YEAR;"
    },
    {
        "adjusted": false,
        "annotation": "Can you provide the term code, term description, total number of sessions, total fee, minimum enrollment, and maximum enrollment for each term in the IAP_SUBJECT_SESSION table?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "How many total sessions, total fee, minimum enrollment, and maximum enrollment are there for each term in the IAP_SUBJECT_SESSION table?\n",
            "What is the count of distinct IAP_SUBJECT_SESSION_KEY, total fee, minimum enrollment, and maximum enrollment for each term and its description in the ACADEMIC_TERMS_ALL table?\n",
            "Can you provide the term code, term description, total number of sessions, total fee, minimum enrollment, and maximum enrollment for each term in the IAP_SUBJECT_SESSION table?\n",
            "Which term codes and descriptions in the ACADEMIC_TERMS_ALL table have corresponding total sessions, total fee, minimum enrollment, and maximum enrollment in the IAP_SUBJECT_SESSION table?"
        ],
        "question": "What is the term code, term description, total number of IAP sessions, total fee collected, and minimum and maximum enrollment for each term code?",
        "sql": "SELECT isd.TERM_CODE, ata.TERM_DESCRIPTION, COUNT(distinct iss.IAP_SUBJECT_SESSION_KEY) AS Total_Sessions, SUM(isd.FEE) AS Total_Fee, MIN(isd.MAX_ENROLLMENT) AS Min_Enrollment, MAX(isd.MAX_ENROLLMENT) AS Max_Enrollment FROM IAP_SUBJECT_SESSION iss JOIN IAP_SUBJECT_DETAIL isd ON iss.IAP_SUBJECT_SESSION_KEY = isd.IAP_SUBJECT_SESSION_KEY JOIN ACADEMIC_TERMS_ALL ata ON isd.TERM_CODE = ata.TERM_CODE GROUP BY isd.TERM_CODE, ata.TERM_DESCRIPTION;"
    },
    {
        "adjusted": false,
        "annotation": "For each building, what are the total number of unique subjects, total fee, minimum session duration, and maximum session duration?",
        "comment": "not name only building",
        "db_id": "dw",
        "options": [
            "How many unique subjects are offered in each building, along with the total fee, minimum session duration, and maximum session duration?\n",
            "What is the count of distinct activity titles, total fee, minimum session duration, and maximum session duration for each building?\n",
            "Which building has the highest and lowest number of unique subjects, along with the total fee, minimum session duration, and maximum session duration?\n",
            "For each building, what are the total number of unique subjects, total fee, minimum session duration, and maximum session duration?"
        ],
        "question": "What is the name of the building, total number of subjects, total fee, and shortest and longest sessions for each physical IAP session location?",
        "sql": "SELECT b.BUILDING_NAME, COUNT(Distinct isd.ACTIVITY_TITLE) AS Total_Subjects, SUM(isd.FEE) AS Total_Fee, MIN((CASE WHEN TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') > TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM') THEN TO_DATE('12:00PM', 'HH12:MIAM') ELSE TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM')END) - TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') ) * 24 * 60 AS Min_Sessions, MAX((CASE WHEN TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') > TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM') THEN TO_DATE('12:00PM', 'HH12:MIAM') ELSE TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM')END) - TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') ) * 24 * 60 AS Max_Sessions FROM IAP_SUBJECT_SESSION iss JOIN IAP_SUBJECT_DETAIL isd ON iss.IAP_SUBJECT_SESSION_KEY = isd.IAP_SUBJECT_SESSION_KEY JOIN BUILDINGS b on b.BUILDING_NUMBER = iss.SESSION_LOCATION GROUP BY b.BUILDING_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "How many unique activity titles are there, what is the total fee, and what are the minimum and maximum session durations in minutes for subject sessions that are not held in buildings with different numbers than their locations?\r\n   \r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "How many unique activity titles are there, what is the total fee, and what are the minimum and maximum session durations in minutes for subject sessions that are not held in buildings with different numbers than their locations?\n   \n",
            "What is the count of distinct activity titles, the total fee, and the range of session durations in minutes for subject sessions that do not take place in buildings with non-matching numbers to their locations?\n   \n",
            "Can you provide the total number of unique activity titles, the cumulative fee, and the shortest and longest session durations in minutes for subject sessions that are not conducted in buildings with different numbers than their locations?\n   \n",
            "How many different activity titles exist, what is the total fee, and what are the shortest and longest session durations in minutes for subject sessions that do not occur in buildings with mismatched numbers compared to their locations?"
        ],
        "question": "What is total number of subjects, the total fee, and the shortest and longest sessions, for all virtual IAP sessions?",
        "sql": "SELECT COUNT(DISTINCT isd.ACTIVITY_TITLE) AS Total_Subjects, SUM(isd.FEE) AS Total_Fee, MIN((CASE WHEN TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') > TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM') THEN TO_DATE('12:00PM', 'HH12:MIAM') ELSE TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM')END) - TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') ) * 24 * 60 AS Min_Sessions, MAX((CASE WHEN TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') > TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM') THEN TO_DATE('12:00PM', 'HH12:MIAM') ELSE TO_DATE(iss.SESSION_END_TIME, 'HH12:MIAM')END) - TO_DATE(iss.SESSION_START_TIME, 'HH12:MIAM') ) * 24 * 60 AS Max_Sessions FROM IAP_SUBJECT_SESSION iss JOIN IAP_SUBJECT_DETAIL isd ON iss.IAP_SUBJECT_SESSION_KEY = isd.IAP_SUBJECT_SESSION_KEY JOIN BUILDINGS b on b.BUILDING_NUMBER != iss.SESSION_LOCATION;"
    },
    {
        "adjusted": false,
        "annotation": "What are the school codes, names, department full names, course levels, total courses, and total degree-granting courses for each school?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "How many total courses and degree-granting courses are offered by each school, along with their respective department and course levels?\n",
            "What are the school codes, names, department full names, course levels, total courses, and total degree-granting courses for each school?\n",
            "Which schools offer courses at different levels and how many of these courses are degree-granting?\n",
            "Can you provide a breakdown of the total number of courses and degree-granting courses offered by each school, including department details and course levels?"
        ],
        "question": "What is the school code, school name, full name of the department, course level, total number of courses, and total number of degree-granting courses for each school code, department, and course level?",
        "sql": "SELECT ssc.SCHOOL_CODE, ssc.SCHOOL_NAME, sd.DEPARTMENT_FULL_NAME, scd.COURSE_LEVEL, COUNT(DISTINCT scd.COURSE) AS Total_Courses, SUM(CASE WHEN scd.IS_DEGREE_GRANTING = 'Y' THEN 1 ELSE 0 END) AS Total_Degree_Granting_Courses FROM SIS_COURSE_DESCRIPTION scd JOIN SIS_DEPARTMENT sd ON scd.DEPARTMENT = sd.DEPARTMENT_CODE JOIN SIS_SUBJECT_CODE ssc ON scd.COURSE = ssc.SUBJECT_CODE GROUP BY ssc.SCHOOL_CODE, ssc.SCHOOL_NAME, scd.DEPARTMENT, sd.DEPARTMENT_FULL_NAME, scd.COURSE_LEVEL;"
    },
    {
        "adjusted": true,
        "annotation": "What are the different schools and departments that offer SIS courses? List their school code, school name, department code, department name, and the total number of phone numbers.",
        "comment": "order and number of columns wrong",
        "db_id": "dw",
        "options": [
            "How many unique phone numbers are associated with each school, department, and administrative department in the SIS system?\n",
            "What is the total count of distinct phone numbers for each school, department, and administrative department in the SIS system?\n",
            "Can you provide a breakdown of the total phone numbers by school, department, and administrative department in the SIS system?\n",
            "Which schools, departments, and administrative departments in the SIS system have unique phone numbers, and how many unique phone numbers are associated with each?"
        ],
        "question": "What are the different schools and departments that offer SIS courses? List their school code, school name, department code, department name, and the total number of phone numbers.",
        "sql": "SELECT ssc.SCHOOL_CODE, ssc.SCHOOL_NAME, sd.DEPARTMENT_CODE, sad.SIS_ADMIN_DEPARTMENT_NAME, COUNT(distinct sad.DEPARTMENT_PHONE_NUMBER) AS Total_Phone_Numbers FROM SIS_ADMIN_DEPARTMENT sad JOIN SIS_DEPARTMENT sd ON sad.SIS_ADMIN_DEPARTMENT_CODE = sd.DEPARTMENT_CODE JOIN SIS_COURSE_DESCRIPTION scd ON sd.DEPARTMENT_CODE = scd.DEPARTMENT JOIN SIS_SUBJECT_CODE ssc ON scd.COURSE = ssc.SUBJECT_CODE  GROUP BY ssc.SCHOOL_CODE, ssc.SCHOOL_NAME, sd.DEPARTMENT_CODE, sad.SIS_ADMIN_DEPARTMENT_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "Can you provide a list of school codes, school names, DLC keys, graduate levels, total subjects, minimum course numbers, maximum course numbers, and total departments for schools based on their subject codes, course descriptions, and departments?\r\n",
        "comment": "sis noit named",
        "db_id": "dw",
        "options": [
            "What are the total number of subjects, minimum and maximum course numbers, and total departments for each school, along with their corresponding school code, school name, DLC key, and graduate level?\n",
            "Can you provide a list of school codes, school names, DLC keys, graduate levels, total subjects, minimum course numbers, maximum course numbers, and total departments for schools based on their subject codes, course descriptions, and departments?\n",
            "How many unique subjects, minimum and maximum course numbers, and distinct departments are associated with each school, identified by their school code, school name, DLC key, and graduate level?\n",
            "Which schools have the highest and lowest course numbers, along with the total number of subjects and departments, based on their school code, school name, DLC key, and graduate level?"
        ],
        "question": "What is the school code, school name, DLC key, the graduate level, total number of SIS subjects, the minimum and maximum course numbers, and the total number of departments offering subjects for each school?",
        "sql": "SELECT ssc.SCHOOL_CODE, ssc.SCHOOL_NAME, sd.DLC_KEY, GRADUATE_LEVEL, COUNT(DISTINCT ssc.SUBJECT_CODE) AS Total_Subjects, MIN(ssc.COURSE_NUMBER) AS Min_Course_Number, MAX(ssc.COURSE_NUMBER) AS Max_Course_Number, COUNT(DISTINCT sd.DEPARTMENT_CODE) AS Total_Departments FROM SIS_SUBJECT_CODE ssc JOIN SIS_COURSE_DESCRIPTION scd ON ssc.SUBJECT_CODE = scd.COURSE JOIN SIS_DEPARTMENT sd ON scd.DEPARTMENT = sd.DEPARTMENT_CODE GROUP BY ssc.SCHOOL_CODE, ssc.SCHOOL_NAME, sd.DLC_KEY,GRADUATE_LEVEL;"
    },
    {
        "adjusted": false,
        "annotation": "What are the building components, building names, total square footage, total number of floors, total rooms, total number of facilities, total supervisors, and total supervisees for each building component and building name?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the building components, building names, total square footage, total number of floors, total rooms, total number of facilities, total supervisors, and total supervisees for each building component and building name?\n",
            "Can you provide a breakdown of the total square footage, number of floors, rooms, facilities, supervisors, and supervisees for each building component and its corresponding building name?\n",
            "How many floors, rooms, facilities, supervisors, and supervisees are associated with each building component and its respective building name based on the total square footage?\n",
            "What is the total square footage, number of floors, rooms, facilities, supervisors, and supervisees for each building component and its corresponding building name in the dataset?"
        ],
        "question": "What is the building component, name of the building, square footage for all rooms, total number of floors, total number of rooms, total number of facility organizations, total number of supervisors, and total number of supervisees for each building component?",
        "sql": "SELECT sd.BUILDING_COMPONENT, b.BUILDING_NAME, sd.Total_Square_Footage, COUNT(DISTINCT SF.FLOOR) AS Total_Number_Of_Floors, COUNT(DISTINCT sd.BUILDING_ROOM) AS Total_Rooms, COUNT(DISTINCT su.FCLT_ORGANIZATION_KEY) as Total_Number_FCLT, COUNT(DISTINCT ssu.MIT_ID) AS Total_Supervisors, SUM(ssu.NUM_OF_SUPERVISEES) AS Total_Supervisees FROM (SELECT SPACE_DETAIL.*, SUM(ROOM_SQUARE_FOOTAGE) OVER (PARTITION BY BUILDING_COMPONENT) AS Total_Square_Footage FROM SPACE_DETAIL) sd JOIN BUILDINGS b ON b.BUILDING_KEY = sd.BUILDING_KEY JOIN SPACE_FLOOR sf ON sd.FLOOR_KEY = sf.FLOOR_KEY JOIN SPACE_UNIT su ON sd.SPACE_UNIT_KEY = su.SPACE_UNIT_KEY JOIN SPACE_SUPERVISOR_USAGE ssu ON su.DLC_KEY = ssu.DEPT_NAMES GROUP BY sd.BUILDING_COMPONENT, b.BUILDING_NAME, sd.Total_Square_Footage;"
    },
    {
        "adjusted": true,
        "annotation": "\r\nWhat is the DLC key, name of the DLC, total number of floors, total square footage, total number of facility organizations, total number of supervisors, and total number of supervisees for each DLC?",
        "comment": "number and order of columns not matching",
        "db_id": "dw",
        "options": [
            "How many floors, total square footage, facilities, supervisors, and supervisees are associated with each department in the building?\n",
            "What is the count of unique floors, total square footage, number of facilities, number of supervisors, and total supervisees for each department in the building?\n",
            "Which departments in the building have a breakdown of the total number of floors, total square footage, total facilities, total supervisors, and total supervisees?\n",
            "Can you provide a summary of the number of floors, total square footage, facilities, supervisors, and supervisees for each department within the building?"
        ],
        "question": "What is the DLC key, name of the DLC, total number of floors, total square footage, total number of facility organizations, total number of supervisors, and total number of supervisees for each DLC?",
        "sql": "SELECT su.DLC_KEY, fo.DLC_NAME, COUNT(DISTINCT SF.FLOOR) AS Total_Number_Of_Floors, sd.Total_Square_Footage, COUNT(DISTINCT su.FCLT_ORGANIZATION_KEY) as Total_Number_Facility, COUNT(DISTINCT ssu.MIT_ID) AS Total_Supervisors, SUM(ssu.NUM_OF_SUPERVISEES) AS Total_Supervisees FROM (SELECT SPACE_DETAIL.*, SUM(ROOM_SQUARE_FOOTAGE) OVER (PARTITION BY BUILDING_COMPONENT) AS Total_Square_Footage FROM SPACE_DETAIL) sd JOIN BUILDINGS b ON b.BUILDING_KEY = sd.BUILDING_KEY JOIN SPACE_FLOOR sf ON sd.FLOOR_KEY = sf.FLOOR_KEY JOIN SPACE_UNIT su ON sd.SPACE_UNIT_KEY = su.SPACE_UNIT_KEY JOIN SPACE_SUPERVISOR_USAGE ssu ON su.DLC_KEY = ssu.DEPT_NAMES JOIN (SELECT DISTINCT DLC_KEY, DLC_NAME FROM FCLT_ORGANIZATION)fo ON fo.DLC_KEY = su.DLC_KEY GROUP BY su.DLC_KEY, fo.DLC_NAME, sd.Total_Square_Footage;"
    },
    {
        "adjusted": false,
        "annotation": "Which department offers subjects, and what are the counts of unique subjects, total enrolled students, minimum rental price, and maximum rental price for each department?\r\n",
        "comment": "name is missing",
        "db_id": "dw",
        "options": [
            "How many unique subjects are offered, total enrolled students, minimum rental price, and maximum rental price for each department that offers subjects?\n",
            "What is the total number of subjects offered, the sum of enrolled students, the minimum rental price, and the maximum rental price for each department offering subjects?\n",
            "Which department offers subjects, and what are the counts of unique subjects, total enrolled students, minimum rental price, and maximum rental price for each department?\n",
            "For each department offering subjects, what are the unique subjects count, total enrolled students sum, minimum rental price, and maximum rental price?"
        ],
        "question": "What is the department name, total number of types of TIP subjects, total number of enrolled students, the minimum and maximum rental new price for each department?",
        "sql": "SELECT tso.OFFER_DEPT_NAME, COUNT(distinct tso.SUBJECT_ID) AS Total_Subjects, SUM(tso.NUM_ENROLLED_STUDENTS) AS Total_Enrolled_Students, MIN(tm.RENTAL_NEW_PRICE) AS Min_Rental_New_Price, MAX(tm.RENTAL_NEW_PRICE) AS Max_Rental_New_Price FROM TIP_SUBJECT_OFFERED tso JOIN TIP_DETAIL td ON tso.TIP_SUBJECT_OFFERED_KEY = td.TIP_SUBJECT_OFFERED_KEY JOIN TIP_MATERIAL tm ON td.TIP_MATERIAL_KEY = tm.TIP_MATERIAL_KEY GROUP BY tso.OFFER_DEPT_NAME;"
    },
    {
        "adjusted": true,
        "annotation": "What are the details of courses offered in the current academic term, including the academic year, term code, hgn code, the total number of types of courses, the average number of units, the department name, the name and email address of the person in charge?",
        "comment": "hgn code is not reflected",
        "db_id": "dw",
        "options": [
            "What are the academic year, term code, course subject code, total number of courses, average units, department name, responsible faculty name, and responsible faculty email for courses offered in the current academic term?\n",
            "Which academic year, term code, course subject code, total number of courses, average units, department name, responsible faculty name, and responsible faculty email are associated with courses offered in the current academic term?\n",
            "Provide the academic year, term code, course subject code, total number of courses, average units, department name, responsible faculty name, and responsible faculty email for courses offered in the current academic term.\n",
            "Retrieve the academic year, term code, course subject code, total number of courses, average units, department name, responsible faculty name, and responsible faculty email for courses offered in the current academic term."
        ],
        "question": "What are the details of courses offered in the current academic term, including the academic year, term code, hgn code, the total number of types of courses, the average number of units, the department name, the name and email address of the person in charge?",
        "sql": "SELECT CC.ACADEMIC_YEAR, CC.TERM_CODE, SO.HGN_CODE, COUNT(DISTINCT CC.SUBJECT_ID) AS TOTAL_COURSES, AVG(CC.TOTAL_UNITS) AS AVERAGE_UNITS, CC.DEPARTMENT_NAME, ED.FULL_NAME AS RESPONSIBLE_FACULTY_NAME, ED.EMAIL_ADDRESS AS RESPONSIBLE_FACULTY_EMAIL FROM COURSE_CATALOG_SUBJECT_OFFERED CC JOIN SUBJECT_OFFERED SO ON CC.SUBJECT_ID = SO.SUBJECT_ID JOIN ACADEMIC_TERMS AT ON CC.TERM_CODE = AT.TERM_CODE JOIN  EMPLOYEE_DIRECTORY ED ON SO.RESPONSIBLE_FACULTY_MIT_ID = ED.MIT_ID WHERE  AT.IS_CURRENT_TERM = 'Y' GROUP BY CC.ACADEMIC_YEAR,  CC.TERM_CODE, SO.HGN_CODE, CC.DEPARTMENT_NAME, ED.FULL_NAME,  ED.EMAIL_ADDRESS;"
    },
    {
        "adjusted": false,
        "annotation": "Can you provide a list of activity titles, category names, session titles, start times, end times, sponsor names, and the total number of unique sessions for each combination?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the total sessions, along with their activity title, category name, session title, start time, end time, and sponsor name?\n",
            "Can you provide a list of activity titles, category names, session titles, start times, end times, sponsor names, and the total number of unique sessions for each combination?\n",
            "Which activity titles, category names, session titles, start times, end times, and sponsor names have multiple unique sessions, and what is the count of those sessions?\n",
            "How many total sessions are there for each unique combination of activity title, category name, session title, start time, end time, and sponsor name in the database?"
        ],
        "question": "Retrieve information about the IAP subjects, including their titles, categories, session titles, session start and end time, sponsors, and total number of sessions.",
        "sql": "SELECT isd.ACTIVITY_TITLE, isc.IAP_CATEGORY_NAME, iss.SESSION_TITLE, iss.SESSION_START_TIME, iss.SESSION_END_TIME, isp.SPONSOR_NAME, COUNT(distinct iss.IAP_SUBJECT_SESSION_KEY) AS Total_Sessions FROM IAP_SUBJECT_DETAIL isd JOIN IAP_SUBJECT_CATEGORY isc ON isd.IAP_SUBJECT_CATEGORY_KEY = isc.IAP_SUBJECT_CATEGORY_KEY JOIN IAP_SUBJECT_SESSION iss ON isd.IAP_SUBJECT_SESSION_KEY = iss.IAP_SUBJECT_SESSION_KEY JOIN IAP_SUBJECT_SPONSOR isp ON isd.IAP_SUBJECT_SPONSOR_KEY = isp.IAP_SUBJECT_SPONSOR_KEY GROUP BY isd.ACTIVITY_TITLE, isc.IAP_CATEGORY_NAME, iss.SESSION_TITLE, iss.SESSION_START_TIME, iss.SESSION_END_TIME, isp.SPONSOR_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "What are the department names, subject codes, subject descriptions, graduate levels, and total number of distinct course numbers within each department?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the department names, subject codes, subject descriptions, graduate levels, and total number of distinct course numbers within each department?\n",
            "Which department names, subject codes, subject descriptions, and graduate levels are associated with the total count of distinct course numbers in each department?\n",
            "Can you provide a list of department names, subject codes, subject descriptions, graduate levels, and the total count of distinct course numbers within each department?\n",
            "How many total courses, with their respective subject codes, descriptions, and graduate levels, are there in each department based on the distinct course numbers?"
        ],
        "question": "Show the department names, the corresponding SIS subject code, subject code descriptions, graduate level, and the total number of courses per department.",
        "sql": "SELECT sd.DEPARTMENT_NAME, sc.SUBJECT_CODE, sc.SUBJECT_CODE_DESC, scd.GRADUATE_LEVEL, COUNT(DISTINCT sc.COURSE_NUMBER) OVER (PARTITION BY sd.DEPARTMENT_NAME) AS Total_Courses FROM SIS_DEPARTMENT sd JOIN SIS_COURSE_DESCRIPTION scd ON sd.DEPARTMENT_CODE = scd.DEPARTMENT JOIN SIS_SUBJECT_CODE sc ON scd.COURSE = sc.COURSE_NUMBER;"
    },
    {
        "adjusted": true,
        "annotation": "For each term, list the term code, the term description, whether the term is current or not, and the total number of types of CIS courses.",
        "comment": "order of columns",
        "db_id": "dw",
        "options": [
            "How many unique subjects are offered in each academic term, along with the term code, description, and current term status?\n",
            "What is the total count of distinct subjects offered in academic terms that are currently active, including details such as term code, description, and current term status?\n",
            "Which academic terms have the highest number of unique subjects, and what are their respective term codes, descriptions, and current term statuses?\n",
            "Can you provide a breakdown of the total number of unique subjects offered in each academic term, including information on the term code, description, and whether it is the current term or not?"
        ],
        "question": "For each term, list the term code, the term description, whether the term is current or not, and the total number of types of CIS courses.",
        "sql": "SELECT at.TERM_CODE, at.TERM_DESCRIPTION, at.IS_CURRENT_TERM2, COUNT(distinct at.SUBJECT_ID) AS Total_SUBJECTS FROM (SELECT at.*, SUBJECT_ID, CASE WHEN at.ACADEMIC_YEAR = EXTRACT(YEAR FROM SYSDATE) AND atp.IS_CURRENT_TERM = 'Y' THEN 'Y' ELSE 'N' END as IS_CURRENT_TERM2 FROM (SELECT ACADEMIC_TERMS_ALL.*, CASE WHEN TERM_CODE LIKE '%FA' THEN 'Y' END AS A ,CASE WHEN TERM_CODE LIKE '%JA' THEN 'Y' END AS B,CASE WHEN TERM_CODE LIKE '%SP' THEN 'Y' END AS C,CASE WHEN TERM_CODE LIKE '%SU' THEN 'Y' END AS D FROM ACADEMIC_TERMS_ALL) at LEFT OUTER JOIN ACADEMIC_TERM_PARAMETER atp ON at.TERM_CODE = atp.TERM_CODE LEFT OUTER JOIN CIS_COURSE_CATALOG ccc ON ccc.ACADEMIC_YEAR = at.ACADEMIC_YEAR AND (IS_OFFERED_FALL_TERM = at.A OR IS_OFFERED_IAP = at.B OR IS_OFFERED_SPRING_TERM = at.C OR IS_OFFERED_SPRING_TERM = at.C OR IS_OFFERED_SUMMER_TERM = at.D)) at GROUP BY at.TERM_CODE, at.TERM_DESCRIPTION, at.IS_CURRENT_TERM2;"
    },
    {
        "adjusted": false,
        "annotation": "Which authors, school names, and material statuses have the highest total record count and number of distinct subjects in the TIP_DETAIL table?",
        "comment": "either order or logic is wrong",
        "db_id": "dw",
        "options": [
            "What are the total record count and total number of distinct subjects for each author, school name, and material status in the TIP_DETAIL table?\n",
            "How many records and unique subjects are associated with each author, school name, and material status in the TIP_DETAIL table?\n",
            "Can you provide the sum of record counts and count of distinct subjects for authors, school names, and material statuses in the TIP_DETAIL table?\n",
            "Which authors, school names, and material statuses have the highest total record count and number of distinct subjects in the TIP_DETAIL table?"
        ],
        "question": "What is the author, school name, material status, total record counts, and total number of types of courses for each author and school?",
        "sql": "SELECT tm.AUTHOR, sd.SCHOOL_NAME, tms.TIP_MATERIAL_STATUS, SUM(td.RECORD_COUNT) AS Total_Record_Count , COUNT(distinct td.SUBJECT_ID) AS Total_Subject FROM TIP_DETAIL td JOIN (select TIP_MATERIAL_KEY,  CASE  WHEN INSTR(AUTHOR, ';') > 0 THEN SUBSTR(AUTHOR, 1, INSTR(AUTHOR, ';') - 1)  ELSE AUTHOR END AS AUTHOR FROM TIP_MATERIAL) tm ON td.TIP_MATERIAL_KEY = tm.TIP_MATERIAL_KEY JOIN TIP_MATERIAL_STATUS tms ON td.TIP_MATERIAL_STATUS_KEY = tms.TIP_MATERIAL_STATUS_KEY JOIN TIP_SUBJECT_OFFERED tso ON td.TIP_SUBJECT_OFFERED_KEY = tso.TIP_SUBJECT_OFFERED_KEY JOIN STUDENT_DEPARTMENT sd ON tso.OFFER_DEPT_CODE = sd.DEPARTMENT_CODE GROUP BY tm.AUTHOR, tms.TIP_MATERIAL_STATUS, sd.SCHOOL_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "What are the course numbers, subject titles, material statuses, total new prices, minimum new prices, maximum new prices, total used prices, minimum used prices, maximum used prices, total number of schools, and total number of materials for each unique combination of course number, subject title, and material status?\r\n\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the course numbers, subject titles, material statuses, total new prices, minimum new prices, maximum new prices, total used prices, minimum used prices, maximum used prices, total number of schools, and total number of materials for each unique combination of course number, subject title, and material status?\n\n",
            "Can you provide a breakdown of the course numbers, subject titles, material statuses, total new prices, minimum new prices, maximum new prices, total used prices, minimum used prices, maximum used prices, total number of schools, and total number of materials based on the subject offered and material status?\n\n",
            "How many unique combinations of course numbers, subject titles, and material statuses are there, and what are the corresponding total new prices, minimum new prices, maximum new prices, total used prices, minimum used prices, maximum used prices, total number of schools, and total number of materials for each combination?\n\n",
            "Which course numbers, subject titles, and material statuses have associated total new prices, minimum new prices, maximum new prices, total used prices, minimum used prices, maximum used prices, total number of schools, and total number of materials based on the material details and subject offered?"
        ],
        "question": "What is the course number, subject title, material status, the total, min, and max new shelf price, the total, min, and max used shelf price, total number of schools and the total number of materials for each TIP subject and material status?",
        "sql": "SELECT tso.COURSE_NUMBER, tso.SUBJECT_TITLE, tms.TIP_MATERIAL_STATUS, SUM(tm.NEW_SHELF_PRICE) as Total_New_Price, Min(tm.NEW_SHELF_PRICE) as Min_New_Price, Max(tm.NEW_SHELF_PRICE) as Max_New_Price, SUM(tm.USED_SHELF_PRICE) as Total_Used_Price, Min(tm.USED_SHELF_PRICE) as Min_Used_Price, Max(tm.USED_SHELF_PRICE) as Max_Used_Price, COUNT(DISTINCT OFFER_SCHOOL_NAME) AS Total_Num_Schools, COUNT(distinct td.TIP_MATERIAL_KEY) AS Total_Num_Materials FROM TIP_DETAIL td JOIN TIP_MATERIAL tm ON td.TIP_MATERIAL_KEY = tm.TIP_MATERIAL_KEY JOIN TIP_MATERIAL_STATUS tms ON td.TIP_MATERIAL_STATUS_KEY = tms.TIP_MATERIAL_STATUS_KEY JOIN TIP_SUBJECT_OFFERED tso ON td.TIP_SUBJECT_OFFERED_KEY = tso.TIP_SUBJECT_OFFERED_KEY GROUP BY tso.COURSE_NUMBER, tso.SUBJECT_TITLE, tms.TIP_MATERIAL_STATUS;"
    },
    {
        "adjusted": false,
        "annotation": "For each material status in the TIP system, what are the counts of distinct materials, subjects, and schools?",
        "comment": "",
        "db_id": "dw",
        "options": [
            "How many unique materials, subjects, and schools are associated with each material status in the TIP system?\n",
            "What is the count of distinct materials, subjects, and schools grouped by material status in the TIP system?\n",
            "Can you provide the total number of unique materials, subjects, and schools for each material status in the TIP system?\n",
            "For each material status in the TIP system, what are the counts of distinct materials, subjects, and schools?"
        ],
        "question": "What is material status, the total number of materials, the total number of subjects, and the total number of schools for each material status?",
        "sql": "SELECT tms.TIP_MATERIAL_STATUS, COUNT(DISTINCT td.TIP_MATERIAL_KEY) AS Total_Materials, COUNT(distinct td.SUBJECT_ID) AS Total_Subjects, COUNT(DISTINCT SCHOOL_NAME) AS Total_Num_Schools FROM TIP_DETAIL td JOIN TIP_MATERIAL tm ON td.TIP_MATERIAL_KEY = tm.TIP_MATERIAL_KEY JOIN TIP_MATERIAL_STATUS tms ON td.TIP_MATERIAL_STATUS_KEY = tms.TIP_MATERIAL_STATUS_KEY JOIN TIP_SUBJECT_OFFERED tso ON td.TIP_SUBJECT_OFFERED_KEY = tso.TIP_SUBJECT_OFFERED_KEY JOIN STUDENT_DEPARTMENT sd ON tso.OFFER_DEPT_CODE = sd.DEPARTMENT_CODE GROUP BY tms.TIP_MATERIAL_STATUS;"
    },
    {
        "adjusted": false,
        "annotation": "For each academic term, what is the total number of courses, materials, and schools, along with the minimum and maximum number of students enrolled in those courses?\r\n",
        "comment": "the order of columns is wrong",
        "db_id": "dw",
        "options": [
            "How many total courses, materials, and schools are associated with each academic term, along with the minimum and maximum number of enrolled students in those courses?\n",
            "What is the count of distinct course numbers, materials, and schools for each academic term, as well as the range of enrolled students in those courses?\n",
            "For each academic term, what is the total number of courses, materials, and schools, along with the minimum and maximum number of students enrolled in those courses?\n",
            "Which academic terms have the highest and lowest number of enrolled students in their courses, along with the total count of courses, materials, and schools offered in each term?"
        ],
        "question": "What is the term description, whether the term is current or not, total number of types of TIP subjects offered and materials needed, the minimum and maximum number of enrolled students, and the total number of schools offering subjects for each term code?",
        "sql": "SELECT at.TERM_DESCRIPTION, at.IS_CURRENT_TERM, COUNT(distinct tso.COURSE_NUMBER) AS Total_Courses, COUNT(DISTINCT tm.isbn) AS Total_materials, MIN(tso.NUM_ENROLLED_STUDENTS) AS Min_Enrolled_Students, MAX(tso.NUM_ENROLLED_STUDENTS) AS Max_Enrolled_Students, COUNT(DISTINCT OFFER_SCHOOL_NAME) AS Total_Num_Schools FROM ACADEMIC_TERMS_ALL at LEFT OUTER JOIN TIP_SUBJECT_OFFERED tso ON at.TERM_CODE = tso.TERM_CODE JOIN TIP_DETAIL td ON td.TIP_SUBJECT_OFFERED_KEY = tso.TIP_SUBJECT_OFFERED_KEY JOIN TIP_MATERIAL tm ON td.TIP_MATERIAL_KEY = tm.TIP_MATERIAL_KEY JOIN TIP_MATERIAL_STATUS tms ON td.TIP_MATERIAL_STATUS_KEY = tms.TIP_MATERIAL_STATUS_KEY GROUP BY at.TERM_CODE, at.TERM_DESCRIPTION, at.IS_CURRENT_TERM;"
    },
    {
        "adjusted": false,
        "annotation": "What are the unique building names, numbers, street addresses, HR department names, assignable square footages, total square footages, and average square footages per room along with the city and state of the buildings, sorted by assignable square footage, total square footage, and average square footage per room in descending order?\r\n\r\n",
        "comment": "order of city and state",
        "db_id": "dw",
        "options": [
            "What are the unique building names, numbers, street addresses, HR department names, assignable square footages, total square footages, and average square footages per room along with the city and state of the buildings, sorted by assignable square footage, total square footage, and average square footage per room in descending order?\n\n",
            "Which building names, numbers, street addresses, HR department names, assignable square footages, total square footages, and average square footages per room are there, in addition to the city and state of the buildings, when considering the highest assignable square footage, total square footage, and average square footage per room first?\n\n",
            "Provide a list of building names, numbers, street addresses, HR department names, assignable square footages, total square footages, and average square footages per room, including the city and state of the buildings, ordered by the highest assignable square footage, total square footage, and average square footage per room.\n\n",
            "Show the distinct building names, numbers, street addresses, HR department names, assignable square footages, total square footages, and average square footages per room, as well as the city and state of the buildings, sorted by the highest assignable square footage, total square footage, and average square footage per room."
        ],
        "question": "List all buildings with their names, building numbers, street address, city, state, department name, assignable square footage, total and average square footage, ordered in descending order of assignable, total, and average square footage.",
        "sql": "SELECT DISTINCT new.BUILDING_NAME, new.BUILDING_NUMBER, new.BUILDING_STREET_ADDRESS, fba.CITY, fba.STATE, new.HR_DEPARTMENT_NAME, new.BLDG_ASSIGNABLE_SQUARE_FOOTAGE, new.Total_Square_Footage, new.Avg_Square_Footage_Per_Room FROM (SELECT b.BUILDING_NAME, b.BUILDING_NUMBER, b.BUILDING_STREET_ADDRESS,fb.FAC_BUILDING_KEY, fo.HR_DEPARTMENT_NAME, b.BLDG_ASSIGNABLE_SQUARE_FOOTAGE,SUM(fr.AREA) AS Total_Square_Footage, AVG(fr.AREA) AS Avg_Square_Footage_Per_Room FROM BUILDINGS b JOIN FAC_BUILDING fb ON b.BUILDING_KEY = fb.FAC_BUILDING_KEY JOIN FAC_ROOMS fr ON fb.FAC_BUILDING_KEY = fr.BUILDING_KEY JOIN FAC_ORGANIZATION fo ON fr.ORGANIZATION_KEY = fo.ORGANIZATION_KEY GROUP BY b.BUILDING_NAME, b.BUILDING_NUMBER, b.BUILDING_STREET_ADDRESS,fb.FAC_BUILDING_KEY, fo.HR_DEPARTMENT_NAME, b.BLDG_ASSIGNABLE_SQUARE_FOOTAGE ) new JOIN FAC_BUILDING_ADDRESS fba ON new.FAC_BUILDING_KEY = fba.BUILDING_KEY ORDER BY new.BLDG_ASSIGNABLE_SQUARE_FOOTAGE DESC, new.Total_Square_Footage DESC, new.Avg_Square_Footage_Per_Room DESC;"
    },
    {
        "adjusted": true,
        "annotation": "For the 2023 Fall term, what are the unique term descriptions, subject titles along with their prerequisites, total number of types of subjects per term code, instructor of this course, and the number of types of courses ever taught by the instructor?",
        "comment": "experience is never explained",
        "db_id": "dw",
        "options": [
            "What are the unique term descriptions, subject titles, prerequisites, total subjects, fall instructors, and experience for courses offered in the Fall term of 2023?\n",
            "Which term descriptions, subject titles, prerequisites, total subjects, fall instructors, and experience are associated with courses offered in the Fall term of 2023?\n",
            "Can you list the distinct term descriptions, subject titles, prerequisites, total subjects, fall instructors, and experience for courses offered in the Fall term of 2023?\n",
            "How many unique term descriptions, subject titles, prerequisites, total subjects, fall instructors, and experience are there for courses offered in the Fall term of 2023?"
        ],
        "question": "For the 2023 Fall term, what are the unique term descriptions, subject titles along with their prerequisites, total number of types of subjects per term code, instructor of this course, and the number of types of courses ever taught by the instructor?",
        "sql": "SELECT DISTINCT at.TERM_DESCRIPTION, ccso.SUBJECT_TITLE, ccso.PREREQUISITES, COUNT(distinct ccso.SUBJECT_ID) OVER (PARTITION BY at.TERM_CODE) AS Total_Subjects, ccso.FALL_INSTRUCTORS, COUNT(distinct ccso.SUBJECT_ID) OVER (PARTITION BY ccso.FALL_INSTRUCTORS) AS Experience FROM COURSE_CATALOG_SUBJECT_OFFERED ccso JOIN ACADEMIC_TERMS at ON ccso.TERM_CODE = at.TERM_CODE WHERE ccso.TERM_CODE = '2023FA';"
    },
    {
        "adjusted": false,
        "annotation": "Which rooms in the facility have their full names, building names, floor numbers, organization names, HR department names, and the percentage of assignable area on the floor and building calculated based on the total assignable area of the floor and building?\r\n\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the full names of rooms, building names, floor numbers, organization names, HR department names, and the percentage of assignable area on the floor and building for each room in the facility?\n   \n",
            "Which rooms in the facility have their full names, building names, floor numbers, organization names, HR department names, and the percentage of assignable area on the floor and building calculated based on the total assignable area of the floor and building?\n\n",
            "Can you provide a list of room full names, building names, floor numbers, organization names, HR department names, and the percentage of assignable area on the floor and building for each room in the facility?\n\n",
            "How can I retrieve the full names of rooms, building names, floor numbers, organization names, HR department names, and the percentage of assignable area on the floor and building for each room in the facility?"
        ],
        "question": "Show the details of rooms including the full name of the rooms, the building names, floor numbers, the organizations occupying them, name of the departments occupying them, and the percentage of the room area over the assignable floor area and building.",
        "sql": "SELECT fr.ROOM_FULL_NAME, fb.BUILDING_NAME, ff.FLOOR, fo.ORGANIZATION_NAME, fo.HR_DEPARTMENT_NAME, CASE WHEN ff.ASSIGNABLE_AREA = 0 THEN 0 ELSE fr.AREA/ff.ASSIGNABLE_AREA END AS PERC_OF_ASG_FLOOR, CASE WHEN fb.ASSIGNABLE_AREA = 0 THEN 0 ELSE fr.AREA/fb.ASSIGNABLE_AREA END AS PERC_OF_ASG_BUILDING FROM FAC_ROOMS fr JOIN FAC_BUILDING fb ON fr.BUILDING_KEY = fb.FAC_BUILDING_KEY JOIN FAC_FLOOR ff ON fr.FLOOR_KEY = ff.FLOOR_KEY JOIN FAC_ORGANIZATION fo ON fr.ORGANIZATION_KEY = fo.ORGANIZATION_KEY;"
    },
    {
        "adjusted": false,
        "annotation": "What are the full names of rooms, building names, floor numbers, organization names, HR department names, percentage of floor area occupied by each room, and percentage of building area occupied by each room?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the full names of rooms, building names, floor numbers, organization names, HR department names, percentage of floor area occupied by each room, and percentage of building area occupied by each room?\n",
            "Which rooms are located in buildings, on floors, and under organizations, and what percentage of the floor and building area do they occupy?\n",
            "Show the full names of rooms, building names, floor numbers, organization names, HR department names, and the percentage of floor and building area occupied by each room.\n",
            "Provide the names of rooms, buildings, floors, organizations, HR departments, and the respective percentages of floor and building area occupied by each room."
        ],
        "question": "Show the details of rooms including the full name of the rooms, the building names, floor numbers, the organizations occupying them, name of the departments occupying them, and the percentage of the room area over the floor area and building.",
        "sql": "SELECT fr.ROOM_FULL_NAME, fb.BUILDING_NAME, ff.FLOOR, fo.ORGANIZATION_NAME, fo.HR_DEPARTMENT_NAME, CASE WHEN FLOOR_AREA = 0 THEN 0 ELSE fr.AREA/FLOOR_AREA END AS PERC_OF_FLOOR, CASE WHEN BUILDING_AREA = 0 THEN 0 ELSE fr.AREA/BUILDING_AREA END AS PERC_OF_BUILDING FROM (SELECT ROOM_FULL_NAME, BUILDING_KEY, FLOOR_KEY,ORGANIZATION_KEY, AREA, SUM(AREA) OVER (PARTITION BY FLOOR_KEY) AS FLOOR_AREA, SUM(AREA) OVER (PARTITION BY BUILDING_KEY) AS BUILDING_AREA FROM FAC_ROOMS) fr JOIN FAC_BUILDING fb ON fr.BUILDING_KEY = fb.FAC_BUILDING_KEY JOIN FAC_FLOOR ff ON fr.FLOOR_KEY = ff.FLOOR_KEY JOIN FAC_ORGANIZATION fo ON fr.ORGANIZATION_KEY = fo.ORGANIZATION_KEY;"
    },
    {
        "adjusted": false,
        "annotation": "For the academic year 2022, what is the total number of courses taught by each faculty member?",
        "comment": "order and number is mismatching",
        "db_id": "dw",
        "options": [
            "How many total courses are being offered by each faculty member for the academic year 2022?\n",
            "What is the count of distinct course numbers taught by each faculty member in the academic year 2022?\n",
            "Which faculty members are responsible for teaching how many distinct courses in the academic year 2022?\n",
            "For the academic year 2022, what is the total number of courses taught by each faculty member?"
        ],
        "question": "What are the academic year, and instructors names for courses offered in the academic year 2022, along with the total number of types of courses per instructor?",
        "sql": "SELECT ata.ACADEMIC_YEAR, ed.FULL_NAME, COUNT(distinct so.COURSE_NUMBER) AS Total_Courses FROM SUBJECT_OFFERED so JOIN ACADEMIC_TERMS_ALL ata ON so.TERM_CODE = ata.TERM_CODE JOIN EMPLOYEE_DIRECTORY ed ON so.RESPONSIBLE_FACULTY_MIT_ID = ed.MIT_ID WHERE ata.ACADEMIC_YEAR = 2022 GROUP BY ata.ACADEMIC_YEAR, ed.FULL_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "Can you provide the building name, HR department name, organization, maximum floor level, minimum floor level, and total number of rooms for each unique combination of building, HR department, and organization?\r\n",
        "comment": "building and building key not specified",
        "db_id": "dw",
        "options": [
            "What are the maximum and minimum floor levels, along with the total number of rooms, for each building, HR department, and organization?\n",
            "Can you provide the building name, HR department name, organization, maximum floor level, minimum floor level, and total number of rooms for each unique combination of building, HR department, and organization?\n",
            "How many rooms are there in total, and what are the maximum and minimum floor levels for each building, HR department, and organization?\n",
            "Which building, HR department, and organization have the highest and lowest floor levels, along with the total number of rooms in each?"
        ],
        "question": "What are the building names, department names, organizations, their highest and lowest floor number, along with the total number of rooms per each building key?",
        "sql": "SELECT fb.BUILDING_NAME, fo.HR_DEPARTMENT_NAME, fo.ORGANIZATION, MAX(ff.LEVEL_ID) as MAX_FLOOR, MIN(ff.LEVEL_ID) as MIN_FLOOR, COUNT(distinct fr.FAC_ROOM_KEY) AS Total_Rooms FROM FAC_BUILDING fb JOIN FAC_ROOMS fr ON fb.FAC_BUILDING_KEY = fr.BUILDING_KEY JOIN FAC_FLOOR ff ON fr.FLOOR_KEY = ff.FLOOR_KEY JOIN FAC_ORGANIZATION fo ON fr.ORGANIZATION_KEY = fo.ORGANIZATION_KEY GROUP BY fb.FAC_BUILDING_KEY, fb.BUILDING_NAME, fo.HR_DEPARTMENT_NAME, fo.ORGANIZATION;"
    },
    {
        "adjusted": false,
        "annotation": "What are the unique full names, email addresses, department names, and department phone numbers of MIT students, along with the total number of students in each department and school?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the unique full names, email addresses, department names, and department phone numbers of MIT students, along with the total number of students in each department and school?\n",
            "Can you provide a list of MIT students' full names, email addresses, department names, and department phone numbers, along with the total count of students in each department and school?\n",
            "Which MIT students have distinct full names and email addresses, and what are their corresponding department names, department phone numbers, and school names, along with the total number of students in each department and school?\n",
            "How many MIT students are there in each department and school, and what are their unique full names, email addresses, department names, and department phone numbers?"
        ],
        "question": "What are the details of the students including their full names, emails, department names, department phone numbers, school names, and the total number of students per department and school?",
        "sql": "SELECT DISTINCT msd.FULL_NAME, msd.EMAIL_ADDRESS, sd.DEPARTMENT_NAME, sad.DEPARTMENT_PHONE_NUMBER, sd.SCHOOL_NAME, COUNT(distinct msd.EMAIL_ADDRESS) OVER (PARTITION BY sd.DEPARTMENT_CODE)AS Total_Students_DEPT, COUNT(distinct msd.EMAIL_ADDRESS) OVER (PARTITION BY sd.SCHOOL_CODE) AS Total_Students_SCHOOLS FROM MIT_STUDENT_DIRECTORY msd JOIN SIS_DEPARTMENT sd ON msd.DEPARTMENT = sd.DEPARTMENT_CODE JOIN SIS_ADMIN_DEPARTMENT sad ON sd.DEPARTMENT_CODE = sad.SIS_ADMIN_DEPARTMENT_CODE;"
    },
    {
        "adjusted": false,
        "annotation": "How many unique subject titles, instructors' full names, email addresses, and total distinct subjects are there for each fall instructor in the current academic term?",
        "comment": "current term is not asked for",
        "db_id": "dw",
        "options": [
            "What are the unique subject titles, full names of instructors, email addresses, and total number of distinct subjects offered by each fall instructor in the current academic term?\n",
            "Which subject titles, instructors' full names, email addresses, and total number of distinct subjects are associated with fall instructors in the current academic term?\n",
            "Can you provide a list of subject titles, instructors' full names, email addresses, and the total count of distinct subjects offered by each fall instructor for the current fall term?\n",
            "How many unique subject titles, instructors' full names, email addresses, and total distinct subjects are there for each fall instructor in the current academic term?"
        ],
        "question": "What are the unique titles of subjects offered in the fall term along with their instructor names, instructor emails, and the total number of types of subjects per instructor?",
        "sql": "SELECT DISTINCT ccso.SUBJECT_TITLE, e.FULL_NAME AS INSTRUCTOR, e.EMAIL_ADDRESS, COUNT(distinct ccso.SUBJECT_ID) OVER (PARTITION BY ccso.FALL_INSTRUCTORS) AS Total_Subjects FROM EMPLOYEE_DIRECTORY e JOIN COURSE_CATALOG_SUBJECT_OFFERED ccso ON ccso.RESPONSIBLE_FACULTY_MIT_ID = e.MIT_ID JOIN ACADEMIC_TERMS_ALL at ON ccso.TERM_CODE = at.TERM_CODE WHERE at.TERM_CODE LIKE '%FA';"
    },
    {
        "adjusted": false,
        "annotation": "What are the building names, HR department names, total gross square footage, total assignable square footage, and average assignable square footage for each building and HR department?\r\n",
        "comment": "building and building key is missing in the group by",
        "db_id": "dw",
        "options": [
            "What are the building names, HR department names, total gross square footage, total assignable square footage, and average assignable square footage for each building and HR department?\n",
            "Can you provide a list of building names, HR department names, total gross square footage, total assignable square footage, and average assignable square footage for each building and HR department?\n",
            "How can I retrieve the building names, HR department names, total gross square footage, total assignable square footage, and average assignable square footage for each building and HR department?\n",
            "Which buildings and HR departments have the total gross square footage, total assignable square footage, and average assignable square footage calculated and grouped by building and HR department?"
        ],
        "question": "List the building names, names of departments occupying them, the total gross square footage, and the total and average assignable square footage per building key.",
        "sql": "SELECT b.BUILDING_NAME, fo.HR_DEPARTMENT_NAME, SUM(b.BLDG_GROSS_SQUARE_FOOTAGE), SUM(b.BLDG_ASSIGNABLE_SQUARE_FOOTAGE), AVG(b.BLDG_ASSIGNABLE_SQUARE_FOOTAGE) AS Avg_Square_Footage FROM BUILDINGS b JOIN FAC_BUILDING fb ON b.BUILDING_KEY = fb.FAC_BUILDING_KEY JOIN FAC_ROOMS fr ON fb.FAC_BUILDING_KEY = fr.BUILDING_KEY JOIN FAC_ORGANIZATION fo ON fr.ORGANIZATION_KEY = fo.ORGANIZATION_KEY GROUP BY b.BUILDING_KEY, b.BUILDING_NAME, fo.HR_DEPARTMENT_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "Show the subject titles, descriptions, responsible faculty names, email addresses, building names, room names, levels, and building addresses for courses offered in the Summer term, along with the total count of distinct courses per department.\r\n",
        "comment": "full room name",
        "db_id": "dw",
        "options": [
            "How many courses are offered in the Summer term, and what are their details including subject title, description, responsible faculty, email address, building name, room name, level, and building address?\n",
            "Which courses are being offered in the Summer term, and who is the responsible faculty member for each course along with their contact email, building location, room details, and level?\n",
            "Show the subject titles, descriptions, responsible faculty names, email addresses, building names, room names, levels, and building addresses for courses offered in the Summer term, along with the total count of distinct courses per department.\n",
            "What are the subject titles, descriptions, responsible faculty names, email addresses, building names, room names, levels, and building addresses for courses offered in the Summer term, and how many total courses are offered per department?"
        ],
        "question": "Retrieve the titles of subjects offered in the summer term along with their descriptions, responsible faculty names, email address, building name, room name, floor level, building street address, and the total number of types of courses per departmnet.",
        "sql": "SELECT ccso.SUBJECT_TITLE, ccso.SUBJECT_DESCRIPTION, ccso.RESPONSIBLE_FACULTY_NAME, ed.EMAIL_ADDRESS, b.BUILDING_NAME, fr.ROOM_FULL_NAME, ff.LEVEL_ID, b.BUILDING_STREET_ADDRESS, COUNT(distinct ccso.SUBJECT_ID) OVER (PARTITION BY ccso.DEPARTMENT_CODE) AS Total_Courses FROM COURSE_CATALOG_SUBJECT_OFFERED ccso JOIN EMPLOYEE_DIRECTORY ed ON ccso.RESPONSIBLE_FACULTY_MIT_ID = ed.MIT_ID JOIN ACADEMIC_TERMS at ON ccso.TERM_CODE = at.TERM_CODE JOIN FAC_ROOMS fr ON ccso.MEET_PLACE = fr.FAC_ROOM_KEY JOIN FAC_FLOOR ff ON ff.FLOOR_KEY = fr.FLOOR_KEY JOIN BUILDINGS b ON fr.BUILDING_KEY = b.BUILDING_KEY WHERE at.TERM_CODE LIKE '%SU';"
    },
    {
        "adjusted": false,
        "annotation": "What are the term descriptions, HASS attribute descriptions, department names, and school names for courses with CIS attribute group 'H', along with the total number of distinct subjects offered in each term and attribute group?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the term descriptions, HASS attribute descriptions, department names, and school names for courses with CIS attribute group 'H', along with the total number of distinct subjects offered in each term and attribute group?\n",
            "Which term descriptions, HASS attribute descriptions, department names, and school names correspond to courses with CIS attribute group 'H', and how many distinct subjects are offered in each term and attribute group?\n",
            "Provide the term descriptions, HASS attribute descriptions, department names, and school names for courses with CIS attribute group 'H', as well as the total count of distinct subjects offered within each term and attribute group.\n",
            "How many distinct subjects are offered in each term and CIS attribute group 'H', along with the corresponding term descriptions, HASS attribute descriptions, department names, and school names?"
        ],
        "question": "For each term code, list the term description, attribute desciption, department name, school name, and the number of subjects in the area of humanities, arts and social sciences.",
        "sql": "SELECT ata.TERM_DESCRIPTION, ccso.HASS_ATTRIBUTE_DESC, sd.DEPARTMENT_NAME, sd.SCHOOL_NAME, COUNT(distinct ccso.SUBJECT_ID) OVER (PARTITION BY  ata.TERM_CODE, cha.CIS_ATTRIBUTE_GROUP) AS Total_Subjects FROM COURSE_CATALOG_SUBJECT_OFFERED ccso JOIN CIS_HASS_ATTRIBUTE cha ON ccso.HASS_ATTRIBUTE = cha.HASS_ATTRIBUTE JOIN SIS_DEPARTMENT sd ON ccso.DEPARTMENT_CODE = sd.DEPARTMENT_CODE JOIN ACADEMIC_TERMS_ALL ata ON ccso.TERM_CODE = ata.TERM_CODE WHERE cha.CIS_ATTRIBUTE_GROUP = 'H';"
    },
    {
        "adjusted": false,
        "annotation": "What are the building name, height, street address, city, state, postal code, gross area, assignable area, smallest floor level, highest floor level, and total room area for buildings with a street address?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the building name, height, street address, city, state, postal code, gross area, assignable area, smallest floor level, highest floor level, and total room area for buildings with a street address?\n",
            "Which buildings have a street address, and what are their corresponding building name, height, street address, city, state, postal code, gross area, assignable area, smallest floor level, highest floor level, and total room area?\n",
            "Provide the details of buildings with a street address, including the building name, height, street address, city, state, postal code, gross area, assignable area, smallest floor level, highest floor level, and total room area.\n",
            "Show the building name, height, street address, city, state, postal code, gross area, assignable area, smallest floor level, highest floor level, and total room area for buildings with a street address."
        ],
        "question": "List building names, their height, street address, city, state, postal code, their gross and assignable square footage, the smallest and largest floor level and the total area of all rooms for each building key.",
        "sql": "SELECT fb.BUILDING_NAME, fb.BUILDING_HEIGHT, b.BUILDING_STREET_ADDRESS, fba.CITY, fba.STATE, fba.POSTAL_CODE, fb.EXT_GROSS_AREA, fb.ASSIGNABLE_AREA, MIN(ff.LEVEL_ID) as SMALLEST_FLOOR, MAX(LEVEL_ID) AS HIGHEST_FLOOR, SUM(fr.AREA) AS Total_Room_Area FROM FAC_BUILDING fb JOIN FAC_BUILDING_ADDRESS fba ON fb.FAC_BUILDING_KEY = fba.BUILDING_KEY JOIN FAC_FLOOR ff ON fb.FAC_BUILDING_KEY = ff.BUILDING_KEY JOIN FAC_ROOMS fr ON ff.FLOOR_KEY = fr.FLOOR_KEY JOIN BUILDINGS b ON b.BUILDING_KEY = fb.FAC_BUILDING_KEY WHERE fba.ADDRESS_PURPOSE = 'STREET' GROUP BY fb.FAC_BUILDING_KEY, fb.BUILDING_NAME, fb.BUILDING_HEIGHT, fba.CITY, fba.POSTAL_CODE, fba.STATE, b.BUILDING_STREET_ADDRESS, fb.EXT_GROSS_AREA, fb.ASSIGNABLE_AREA;"
    },
    {
        "adjusted": false,
        "annotation": "What are the category titles, versions, department names, and school names along with the total number of undergraduate courses, graduate courses, and degree-granting courses for each category?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the category titles, versions, department names, and school names along with the total number of undergraduate courses, graduate courses, and degree-granting courses for each category?\n",
            "Which categories, along with their versions, departments, and schools, have the total count of undergraduate, graduate, and degree-granting courses?\n",
            "Show the category titles, versions, department names, and school names, and the total count of undergraduate, graduate, and degree-granting courses for each category.\n",
            "Provide a list of category titles, versions, department names, and school names, along with the total number of undergraduate, graduate, and degree-granting courses offered in each category."
        ],
        "question": "What is the category title, version, department name, school name, total number of courses for each course level, and the total number of degree-granting courses for each CIP category code?",
        "sql": "SELECT c.CATEGORY_TITLE, c.VERSION, sd.DEPARTMENT_NAME, sd.SCHOOL_NAME, SUM(CASE WHEN scd.COURSE_LEVEL = 'U' THEN 1 ELSE 0 END) AS Total_U_Courses, SUM(CASE WHEN scd.COURSE_LEVEL = 'G' THEN 1 ELSE 0 END) AS Total_G_Courses, SUM(CASE WHEN scd.IS_DEGREE_GRANTING = 'Y' THEN 1 ELSE 0 END) AS Total_Degree_Granting_Courses FROM CIP c JOIN SIS_COURSE_DESCRIPTION scd ON c.PROGRAM_CODE = scd.CIP_PROGRAM_CODE JOIN SIS_DEPARTMENT sd ON scd.DEPARTMENT = sd.DEPARTMENT_CODE GROUP BY c.CATEGORY_CODE, c.CATEGORY_TITLE, c.VERSION, sd.DEPARTMENT_NAME, sd.SCHOOL_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "How many unique materials are there, what is the earliest publication year, the latest publication year, and how many different statuses are associated with each course name in the library reserve system?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "How many unique materials are there, what is the earliest publication year, the latest publication year, and how many different statuses are associated with each course name in the library reserve system?\n",
            "What is the total count of distinct materials, the minimum publication year, the maximum publication year, and the count of unique statuses for each course name in the library reserve system?\n",
            "For each course name in the library reserve system, what is the total number of unique materials, the earliest publication year, the latest publication year, and the count of different statuses?\n",
            "How many distinct materials, the earliest publication year, the latest publication year, and the count of unique statuses are associated with each course name in the library reserve system?"
        ],
        "question": "What is the total number of library materials, the minimum and maximum publication years, and the total number of materials status for each course name?",
        "sql": "SELECT COUNT(distinct lrc.CATALOG_SYSTEM_NUMBER) AS Total_Materials, MIN(lrc.CATALOG_YEAR) AS Min_Publication_Year, MAX(lrc.CATALOG_YEAR) AS Max_Publication_Year, COUNT(DISTINCT lms.LIBRARY_MATERIAL_STATUS) AS Total_Statuses FROM LIBRARY_COURSE_INSTRUCTOR lci JOIN LIBRARY_RESERVE_MATRL_DETAIL lrmd ON lci.LIBRARY_COURSE_INSTRUCTOR_KEY = lrmd.LIBRARY_COURSE_INSTRUCTOR_KEY JOIN LIBRARY_RESERVE_CATALOG lrc ON lrmd.LIBRARY_RESERVE_CATALOG_KEY = lrc.LIBRARY_RESERVE_CATALOG_KEY JOIN LIBRARY_MATERIAL_STATUS lms ON lrmd.LIBRARY_MATERIAL_STATUS_KEY = lms.LIBRARY_MATERIAL_STATUS_KEY GROUP BY lci.COURSE_NAME;"
    },
    {
        "adjusted": false,
        "annotation": "How many unique materials are there, what is the earliest publication year, the latest publication year, and the total number of enrolled students for each instructor?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "How many unique materials are there, what is the earliest publication year, the latest publication year, and the total number of enrolled students for each instructor?\n",
            "What is the total count of distinct materials, the minimum publication year, the maximum publication year, and the sum of enrolled students for each instructor?\n",
            "For each instructor, what is the total count of unique materials, the earliest publication year, the latest publication year, and the total number of enrolled students?\n",
            "Can you provide the total count of different materials, the earliest publication year, the latest publication year, and the sum of enrolled students for each instructor?"
        ],
        "question": "What is the total number of library reserve materials, the minimum and maximum publication years, and the total number of enrolled students for each course instructor?",
        "sql": "SELECT COUNT(distinct lrc.CATALOG_SYSTEM_NUMBER) AS Total_Materials, MIN(lrc.CATALOG_YEAR) AS Min_Publication_Year, MAX(lrc.CATALOG_YEAR) AS Max_Publication_Year, SUM(lso.NUM_ENROLLED_STUDENTS) AS Total_Enrolled_Students FROM LIBRARY_COURSE_INSTRUCTOR lci JOIN LIBRARY_RESERVE_MATRL_DETAIL lrmd ON lci.LIBRARY_COURSE_INSTRUCTOR_KEY = lrmd.LIBRARY_COURSE_INSTRUCTOR_KEY JOIN LIBRARY_RESERVE_CATALOG lrc ON lrmd.LIBRARY_RESERVE_CATALOG_KEY = lrc.LIBRARY_RESERVE_CATALOG_KEY JOIN LIBRARY_SUBJECT_OFFERED lso ON lrmd.LIBRARY_SUBJECT_OFFERED_KEY = lso.LIBRARY_SUBJECT_OFFERED_KEY GROUP BY lci.INSTRUCTOR_NAME;"
    },
    {
        "adjusted": true,
        "annotation": "What is the material status, term description, total number of courses and materials, occurences in departments and school, and the total number of instructors for each library material status code and term code?",
        "comment": "order is never correct, library material status",
        "db_id": "dw",
        "options": [
            "How many courses, materials, departments, schools, and instructors are associated with each library material status and academic term description?\n",
            "What is the total count of courses, materials, departments, schools, and instructors grouped by library material status and academic term description?\n",
            "Can you provide the count of courses, materials, departments, schools, and instructors for each library material status and academic term description?\n",
            "How many unique courses, materials, departments, schools, and instructors are there for each combination of library material status and academic term description?"
        ],
        "question": "What is the material status, term description, total number of courses and materials, occurences in departments and school, and the total number of instructors for each library material status code and term code?",
        "sql": "SELECT lms.LIBRARY_MATERIAL_STATUS, ata.TERM_DESCRIPTION, COUNT(DISTINCT lso.COURSE_NUMBER) AS Total_Courses, COUNT(DISTINCT lrc.CATALOG_SYSTEM_NUMBER) AS Total_Materials, COUNT(DISTINCT lso.OFFER_DEPT_CODE), COUNT(DISTINCT lso.OFFER_SCHOOL_NAME), COUNT(DISTINCT lci.INSTRUCTOR_NAME) AS Total_Instructors FROM LIBRARY_MATERIAL_STATUS lms JOIN LIBRARY_RESERVE_MATRL_DETAIL lrmd ON lms.LIBRARY_MATERIAL_STATUS_KEY = lrmd.LIBRARY_MATERIAL_STATUS_KEY JOIN LIBRARY_SUBJECT_OFFERED lso ON lrmd.LIBRARY_SUBJECT_OFFERED_KEY = lso.LIBRARY_SUBJECT_OFFERED_KEY JOIN LIBRARY_COURSE_INSTRUCTOR lci ON lrmd.LIBRARY_COURSE_INSTRUCTOR_KEY = lci.LIBRARY_COURSE_INSTRUCTOR_KEY JOIN LIBRARY_RESERVE_CATALOG lrc ON lrmd.LIBRARY_RESERVE_CATALOG_KEY = lrc.LIBRARY_RESERVE_CATALOG_KEY JOIN ACADEMIC_TERMS_ALL ata ON ata.TERM_CODE = lso.TERM_CODE GROUP BY lms.LIBRARY_MATERIAL_STATUS_CODE, lms.LIBRARY_MATERIAL_STATUS, lso.TERM_CODE, ata.TERM_DESCRIPTION;"
    },
    {
        "adjusted": false,
        "annotation": "What are the unique space units, floors, building names, building street addresses, space usages, and count of space units within each floor and building?\r\n",
        "comment": "",
        "db_id": "dw",
        "options": [
            "What are the unique space units, floors, building names, building street addresses, space usages, and count of space units within each floor and building?\n",
            "Which space units, floors, building names, building street addresses, space usages, and count of distinct space units are associated with each floor and building?\n",
            "Can you provide a list of space units, floors, building names, building street addresses, space usages, and the count of unique space units grouped by floor and building?\n",
            "How many distinct space units, along with their corresponding floors, building names, building street addresses, and space usages, are there for each floor and building?"
        ],
        "question": "List all space units, their floor and building name, building street address, as well as their space usage and list how many space units are on the same building and floor.",
        "sql": "SELECT DISTINCT su.SPACE_UNIT, sf.FLOOR, b.BUILDING_NAME, b.BUILDING_STREET_ADDRESS, su2.SPACE_USAGE, COUNT(distinct su.SPACE_UNIT) OVER (PARTITION BY sd.FLOOR_KEY,sd.BUILDING_KEY) FROM SPACE_UNIT su JOIN SPACE_DETAIL sd ON su.SPACE_UNIT_KEY = sd.SPACE_UNIT_KEY JOIN SPACE_USAGE su2 ON su2.SPACE_USAGE_KEY = sd.SPACE_USAGE_KEY JOIN SPACE_FLOOR sf ON sd.FLOOR_KEY = sf.FLOOR_KEY JOIN BUILDINGS b ON b.BUILDING_KEY = sd.BUILDING_KEY JOIN FCLT_ORGANIZATION fo ON fo.FCLT_ORGANIZATION_KEY = su.FCLT_ORGANIZATION_KEY;"
    }
]