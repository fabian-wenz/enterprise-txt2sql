[
    {
        "adjusted": true,
        "adjustment": "Show the network details (tenant_id, id, name, status, admin_state_up, mtu, vlan_transparent, availability_zone_hints, standard_attr_id) along with the network security bindings (network_id, port_security_enabled) for networks that are owned by the tenant '8333a6a4e59343eda8957cd61da9f0e6' and do not have any networkrbacs with action 'access_as_shared' targeting either '*' or '9f13bf11e06e4d81b44c8c3e62d4362b'?",
        "comment": "note in this deployment '9f13bf11e06e4d81b44c8c3e62d4362b' is a special administrative tenant.  Also generally \"tenant\" and \"project\" are synonymous with \"project\" being the newer term used by people and found in current documentations where as \"tenant\" remains in the database because refactoring that is a lot of work for what is basically aesthetics...",
        "db_id": "csail_stata_neutron",
        "options": [
            "What are the details of the networks (tenant_id, id, name, status, admin_state_up, mtu, vlan_transparent, availability_zone_hints, standard_attr_id) along with the details of the agents (id, agent_type, binary, topic, host, availability_zone, admin_state_up, created_at, started_at, heartbeat_timestamp, description, configurations, resource_versions, load) associated with each network where the tenant_id is '8333a6a4e59343eda8957cd61da9f0e6' and the network id is not associated with any networkrbacs with action 'access_as_shared' targeting either '*' or '9f13bf11e06e4d81b44c8c3e62d4362b'?\n\n",
            "Provide the network details (tenant_id, id, name, status, admin_state_up, mtu, vlan_transparent, availability_zone_hints, standard_attr_id) and external network details (network_id, is_default) for networks that belong to the tenant with the ID '8333a6a4e59343eda8957cd61da9f0e6' and are not shared with tenants '*' or '9f13bf11e06e4d81b44c8c3e62d4362b'?\n\n",
            "Can you list the networks that have networkdhcpagentbindings with associated agents (id, agent_type, binary, topic, host, availability_zone, admin_state_up, created_at, started_at, heartbeat_timestamp, description, configurations, resource_versions, load) and are not shared with tenants '*' or '9f13bf11e06e4d81b44c8c3e62d4362b'? Include the standard attributes (created_at, updated_at, id, resource_type, description) and tags (standard_attr_id, tag) associated with these networks.\n\n",
            "Show the network details (tenant_id, id, name, status, admin_state_up, mtu, vlan_transparent, availability_zone_hints, standard_attr_id) along with the network security bindings (network_id, port_security_enabled) for networks that are owned by the tenant '8333a6a4e59343eda8957cd61da9f0e6' and do not have any networkrbacs with action 'access_as_shared' targeting either '*' or '9f13bf11e06e4d81b44c8c3e62d4362b'?"
        ],
        "question": "Show the network details (tenant_id, id, name, status, admin_state_up, mtu, vlan_transparent, availability_zone_hints, standard_attr_id) along with the network security bindings (network_id, port_security_enabled) for networks that are owned by the tenant '8333a6a4e59343eda8957cd61da9f0e6' and do not have any networkrbacs with action 'access_as_shared' targeting either '*' or '9f13bf11e06e4d81b44c8c3e62d4362b'?",
        "sql": "SELECT networks.tenant_id AS networks_tenant_id, networks.id AS networks_id, networks.name AS networks_name, networks.status AS networks_status, networks.admin_state_up AS networks_admin_state_up, networks.mtu AS networks_mtu, networks.vlan_transparent AS networks_vlan_transparent, networks.availability_zone_hints AS networks_availability_zone_hints, networks.standard_attr_id AS networks_standard_attr_id, agents_1.id AS agents_1_id, agents_1.agent_type AS agents_1_agent_type, agents_1.`binary` AS agents_1_binary, agents_1.topic AS agents_1_topic, agents_1.host AS agents_1_host, agents_1.availability_zone AS agents_1_availability_zone, agents_1.admin_state_up AS agents_1_admin_state_up, agents_1.created_at AS agents_1_created_at, agents_1.started_at AS agents_1_started_at, agents_1.heartbeat_timestamp AS agents_1_heartbeat_timestamp, agents_1.description AS agents_1_description, agents_1.configurations AS agents_1_configurations, agents_1.resource_versions AS agents_1_resource_versions, agents_1.`load` AS agents_1_load, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, externalnetworks_1.network_id AS externalnetworks_1_network_id, externalnetworks_1.is_default AS externalnetworks_1_is_default, qos_network_policy_bindings_1.policy_id AS qos_network_policy_bindings_1_policy_id, qos_network_policy_bindings_1.network_id AS qos_network_policy_bindings_1_network_id, networksecuritybindings_1.network_id AS networksecuritybindings_1_network_id, networksecuritybindings_1.port_security_enabled AS networksecuritybindings_1_port_security_enabled, networkdnsdomains_1.network_id AS networkdnsdomains_1_network_id, networkdnsdomains_1.dns_domain AS networkdnsdomains_1_dns_domain FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id LEFT OUTER JOIN (networkdhcpagentbindings AS networkdhcpagentbindings_1 INNER JOIN agents AS agents_1 ON agents_1.id = networkdhcpagentbindings_1.dhcp_agent_id) ON networks.id = networkdhcpagentbindings_1.network_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = networks.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN externalnetworks AS externalnetworks_1 ON networks.id = externalnetworks_1.network_id LEFT OUTER JOIN qos_network_policy_bindings AS qos_network_policy_bindings_1 ON networks.id = qos_network_policy_bindings_1.network_id LEFT OUTER JOIN networksecuritybindings AS networksecuritybindings_1 ON networks.id = networksecuritybindings_1.network_id LEFT OUTER JOIN networkdnsdomains AS networkdnsdomains_1 ON networks.id = networkdnsdomains_1.network_id WHERE networks.tenant_id IN ('8333a6a4e59343eda8957cd61da9f0e6') AND networks.id NOT IN (SELECT networkrbacs.object_id AS networkrbacs_object_id FROM networkrbacs WHERE networkrbacs.action = 'access_as_shared' AND (networkrbacs.target_tenant = '*' OR networkrbacs.target_tenant = '9f13bf11e06e4d81b44c8c3e62d4362b'))"
    },
    {
        "adjusted": false,
        "adjustment": "Retrieve the volumes that are active (not deleted), belong to the project with the project_id '8083447923734c679b261219b815d3bc', and have no migration status or a migration status that does not match 'target:', displaying their consistency group details, metadata, attachments, admin metadata, and types, sorted by creation date and volume ID in descending order.",
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the volumes that were created, updated, and not deleted, with their associated consistency groups, metadata, attachments, admin metadata, and types, for a specific project with the project_id '8083447923734c679b261219b815d3bc' in descending order of creation date and volume ID?\n\n",
            "Can you provide information on the volumes that have not been deleted, do not have a migration status like 'target:%', and belong to the project with the project_id '8083447923734c679b261219b815d3bc', including details about their consistency groups, metadata, attachments, admin metadata, and types, sorted by creation date and volume ID in descending order?\n\n",
            "Show me the volumes that have not been deleted, have a project_id of '8083447923734c679b261219b815d3bc', and either have no migration status or a migration status that does not start with 'target:', along with their consistency group information, metadata, attachments, admin metadata, and types, ordered by creation date and volume ID in descending order.\n\n",
            "Retrieve the volumes that are active (not deleted), belong to the project with the project_id '8083447923734c679b261219b815d3bc', and have no migration status or a migration status that does not match 'target:', displaying their consistency group details, metadata, attachments, admin metadata, and types, sorted by creation date and volume ID in descending order."
        ],
        "question": "Retrieve the volumes that are active (not deleted), belong to the project with the project_id '8083447923734c679b261219b815d3bc', and have no migration status or a migration status that does not match 'target:', displaying their consistency group details, metadata, attachments, admin metadata, and types, sorted by creation date and volume ID in descending order.",
        "sql": "SELECT anon_1.volumes_created_at AS anon_1_volumes_created_at, anon_1.volumes_updated_at AS anon_1_volumes_updated_at, anon_1.volumes_deleted_at AS anon_1_volumes_deleted_at, anon_1.volumes_deleted AS anon_1_volumes_deleted, anon_1.volumes_id AS anon_1_volumes_id, anon_1.volumes__name_id AS anon_1_volumes__name_id, anon_1.volumes_ec2_id AS anon_1_volumes_ec2_id, anon_1.volumes_user_id AS anon_1_volumes_user_id, anon_1.volumes_project_id AS anon_1_volumes_project_id, anon_1.volumes_snapshot_id AS anon_1_volumes_snapshot_id, anon_1.volumes_host AS anon_1_volumes_host, anon_1.volumes_size AS anon_1_volumes_size, anon_1.volumes_availability_zone AS anon_1_volumes_availability_zone, anon_1.volumes_status AS anon_1_volumes_status, anon_1.volumes_attach_status AS anon_1_volumes_attach_status, anon_1.volumes_migration_status AS anon_1_volumes_migration_status, anon_1.volumes_scheduled_at AS anon_1_volumes_scheduled_at, anon_1.volumes_launched_at AS anon_1_volumes_launched_at, anon_1.volumes_terminated_at AS anon_1_volumes_terminated_at, anon_1.volumes_display_name AS anon_1_volumes_display_name, anon_1.volumes_display_description AS anon_1_volumes_display_description, anon_1.volumes_provider_location AS anon_1_volumes_provider_location, anon_1.volumes_provider_auth AS anon_1_volumes_provider_auth, anon_1.volumes_provider_geometry AS anon_1_volumes_provider_geometry, anon_1.volumes_provider_id AS anon_1_volumes_provider_id, anon_1.volumes_volume_type_id AS anon_1_volumes_volume_type_id, anon_1.volumes_source_volid AS anon_1_volumes_source_volid, anon_1.volumes_encryption_key_id AS anon_1_volumes_encryption_key_id, anon_1.volumes_consistencygroup_id AS anon_1_volumes_consistencygroup_id, anon_1.volumes_bootable AS anon_1_volumes_bootable, anon_1.volumes_multiattach AS anon_1_volumes_multiattach, anon_1.volumes_replication_status AS anon_1_volumes_replication_status, anon_1.volumes_replication_extended_status AS anon_1_volumes_replication_extended_status, anon_1.volumes_replication_driver_data AS anon_1_volumes_replication_driver_data, anon_1.volumes_previous_status AS anon_1_volumes_previous_status, consistencygroups_1.created_at AS consistencygroups_1_created_at, consistencygroups_1.updated_at AS consistencygroups_1_updated_at, consistencygroups_1.deleted_at AS consistencygroups_1_deleted_at, consistencygroups_1.deleted AS consistencygroups_1_deleted, consistencygroups_1.id AS consistencygroups_1_id, consistencygroups_1.user_id AS consistencygroups_1_user_id, consistencygroups_1.project_id AS consistencygroups_1_project_id, consistencygroups_1.host AS consistencygroups_1_host, consistencygroups_1.availability_zone AS consistencygroups_1_availability_zone, consistencygroups_1.name AS consistencygroups_1_name, consistencygroups_1.description AS consistencygroups_1_description, consistencygroups_1.volume_type_id AS consistencygroups_1_volume_type_id, consistencygroups_1.status AS consistencygroups_1_status, consistencygroups_1.cgsnapshot_id AS consistencygroups_1_cgsnapshot_id, consistencygroups_1.source_cgid AS consistencygroups_1_source_cgid, volume_metadata_1.created_at AS volume_metadata_1_created_at, volume_metadata_1.updated_at AS volume_metadata_1_updated_at, volume_metadata_1.deleted_at AS volume_metadata_1_deleted_at, volume_metadata_1.deleted AS volume_metadata_1_deleted, volume_metadata_1.id AS volume_metadata_1_id, volume_metadata_1.`key` AS volume_metadata_1_key, volume_metadata_1.value AS volume_metadata_1_value, volume_metadata_1.volume_id AS volume_metadata_1_volume_id, volume_attachment_1.created_at AS volume_attachment_1_created_at, volume_attachment_1.updated_at AS volume_attachment_1_updated_at, volume_attachment_1.deleted_at AS volume_attachment_1_deleted_at, volume_attachment_1.deleted AS volume_attachment_1_deleted, volume_attachment_1.id AS volume_attachment_1_id, volume_attachment_1.volume_id AS volume_attachment_1_volume_id, volume_attachment_1.instance_uuid AS volume_attachment_1_instance_uuid, volume_attachment_1.attached_host AS volume_attachment_1_attached_host, volume_attachment_1.mountpoint AS volume_attachment_1_mountpoint, volume_attachment_1.attach_time AS volume_attachment_1_attach_time, volume_attachment_1.detach_time AS volume_attachment_1_detach_time, volume_attachment_1.attach_status AS volume_attachment_1_attach_status, volume_attachment_1.attach_mode AS volume_attachment_1_attach_mode, volume_admin_metadata_1.created_at AS volume_admin_metadata_1_created_at, volume_admin_metadata_1.updated_at AS volume_admin_metadata_1_updated_at, volume_admin_metadata_1.deleted_at AS volume_admin_metadata_1_deleted_at, volume_admin_metadata_1.deleted AS volume_admin_metadata_1_deleted, volume_admin_metadata_1.id AS volume_admin_metadata_1_id, volume_admin_metadata_1.`key` AS volume_admin_metadata_1_key, volume_admin_metadata_1.value AS volume_admin_metadata_1_value, volume_admin_metadata_1.volume_id AS volume_admin_metadata_1_volume_id, volume_types_1.created_at AS volume_types_1_created_at, volume_types_1.updated_at AS volume_types_1_updated_at, volume_types_1.deleted_at AS volume_types_1_deleted_at, volume_types_1.deleted AS volume_types_1_deleted, volume_types_1.id AS volume_types_1_id, volume_types_1.name AS volume_types_1_name, volume_types_1.description AS volume_types_1_description, volume_types_1.qos_specs_id AS volume_types_1_qos_specs_id, volume_types_1.is_public AS volume_types_1_is_public FROM (SELECT volumes.created_at AS volumes_created_at, volumes.updated_at AS volumes_updated_at, volumes.deleted_at AS volumes_deleted_at, volumes.deleted AS volumes_deleted, volumes.id AS volumes_id, volumes._name_id AS volumes__name_id, volumes.ec2_id AS volumes_ec2_id, volumes.user_id AS volumes_user_id, volumes.project_id AS volumes_project_id, volumes.snapshot_id AS volumes_snapshot_id, volumes.host AS volumes_host, volumes.size AS volumes_size, volumes.availability_zone AS volumes_availability_zone, volumes.status AS volumes_status, volumes.attach_status AS volumes_attach_status, volumes.migration_status AS volumes_migration_status, volumes.scheduled_at AS volumes_scheduled_at, volumes.launched_at AS volumes_launched_at, volumes.terminated_at AS volumes_terminated_at, volumes.display_name AS volumes_display_name, volumes.display_description AS volumes_display_description, volumes.provider_location AS volumes_provider_location, volumes.provider_auth AS volumes_provider_auth, volumes.provider_geometry AS volumes_provider_geometry, volumes.provider_id AS volumes_provider_id, volumes.volume_type_id AS volumes_volume_type_id, volumes.source_volid AS volumes_source_volid, volumes.encryption_key_id AS volumes_encryption_key_id, volumes.consistencygroup_id AS volumes_consistencygroup_id, volumes.bootable AS volumes_bootable, volumes.multiattach AS volumes_multiattach, volumes.replication_status AS volumes_replication_status, volumes.replication_extended_status AS volumes_replication_extended_status, volumes.replication_driver_data AS volumes_replication_driver_data, volumes.previous_status AS volumes_previous_status FROM volumes WHERE volumes.deleted = false AND (volumes.migration_status IS NULL OR (volumes.migration_status NOT LIKE 'target:%')) AND volumes.project_id = '8083447923734c679b261219b815d3bc' ORDER BY volumes.created_at DESC, volumes.id DESC LIMIT 1000) AS anon_1 LEFT OUTER JOIN consistencygroups AS consistencygroups_1 ON anon_1.volumes_consistencygroup_id = consistencygroups_1.id LEFT OUTER JOIN volume_metadata AS volume_metadata_1 ON volume_metadata_1.volume_id = anon_1.volumes_id AND volume_metadata_1.deleted = false LEFT OUTER JOIN volume_attachment AS volume_attachment_1 ON volume_attachment_1.volume_id = anon_1.volumes_id AND volume_attachment_1.deleted = false LEFT OUTER JOIN volume_admin_metadata AS volume_admin_metadata_1 ON volume_admin_metadata_1.volume_id = anon_1.volumes_id AND volume_admin_metadata_1.deleted = false LEFT OUTER JOIN volume_types AS volume_types_1 ON anon_1.volumes_volume_type_id = volume_types_1.id AND volume_types_1.deleted = false ORDER BY anon_1.volumes_created_at DESC, anon_1.volumes_id DESC"
    },
    {
        "adjusted": true,
        "adjustment": "",
        "comment": "This subnet is mine personally. It's interesting that the query result has information that isn't accessible via any `show` command reated to the subnet or network I'm aware of, but also doesn't include all the information that any of those show or list commands provide... ",
        "db_id": "",
        "options": [
            "What are the details of the network with the ID '388ee748-7b3d-4049-99b4-7e582937bbd4' in the OpenStack database? Include information such as tenant ID, name, status, admin state, MTU, VLAN transparency, availability zone hints, and any associated subnets.\n\n",
            "Can you provide a list of all networks in the OpenStack database along with details of any associated DHCP agents, standard attributes, tags, external networks, QoS policy bindings, security bindings, and DNS domains? Please order the results by network ID.\n\n",
            "Which network in the OpenStack database has the highest load among all networks? Include details such as tenant ID, name, status, admin state, load, and any associated DHCP agents.\n\n",
            "Retrieve the network details from the OpenStack database that has the latest created standard attribute. Include information such as tenant ID, name, status, admin state, standard attribute ID, description, and any associated tags."
        ],
        "question": "",
        "sql": "SELECT networks.tenant_id AS networks_tenant_id, networks.id AS networks_id, networks.name AS networks_name, networks.status AS networks_status, networks.admin_state_up AS networks_admin_state_up, networks.mtu AS networks_mtu, networks.vlan_transparent AS networks_vlan_transparent, networks.availability_zone_hints AS networks_availability_zone_hints, networks.standard_attr_id AS networks_standard_attr_id, anon_1.subnets_network_id AS anon_1_subnets_network_id, agents_1.id AS agents_1_id, agents_1.agent_type AS agents_1_agent_type, agents_1.`binary` AS agents_1_binary, agents_1.topic AS agents_1_topic, agents_1.host AS agents_1_host, agents_1.availability_zone AS agents_1_availability_zone, agents_1.admin_state_up AS agents_1_admin_state_up, agents_1.created_at AS agents_1_created_at, agents_1.started_at AS agents_1_started_at, agents_1.heartbeat_timestamp AS agents_1_heartbeat_timestamp, agents_1.description AS agents_1_description, agents_1.configurations AS agents_1_configurations, agents_1.resource_versions AS agents_1_resource_versions, agents_1.`load` AS agents_1_load, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, externalnetworks_1.network_id AS externalnetworks_1_network_id, externalnetworks_1.is_default AS externalnetworks_1_is_default, qos_network_policy_bindings_1.policy_id AS qos_network_policy_bindings_1_policy_id, qos_network_policy_bindings_1.network_id AS qos_network_policy_bindings_1_network_id, networksecuritybindings_1.network_id AS networksecuritybindings_1_network_id, networksecuritybindings_1.port_security_enabled AS networksecuritybindings_1_port_security_enabled, networkdnsdomains_1.network_id AS networkdnsdomains_1_network_id, networkdnsdomains_1.dns_domain AS networkdnsdomains_1_dns_domain FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('388ee748-7b3d-4049-99b4-7e582937bbd4')) AS anon_1 INNER JOIN networks ON networks.id = anon_1.subnets_network_id LEFT OUTER JOIN (networkdhcpagentbindings AS networkdhcpagentbindings_1 INNER JOIN agents AS agents_1 ON agents_1.id = networkdhcpagentbindings_1.dhcp_agent_id) ON networks.id = networkdhcpagentbindings_1.network_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = networks.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN externalnetworks AS externalnetworks_1 ON networks.id = externalnetworks_1.network_id LEFT OUTER JOIN qos_network_policy_bindings AS qos_network_policy_bindings_1 ON networks.id = qos_network_policy_bindings_1.network_id LEFT OUTER JOIN networksecuritybindings AS networksecuritybindings_1 ON networks.id = networksecuritybindings_1.network_id LEFT OUTER JOIN networkdnsdomains AS networkdnsdomains_1 ON networks.id = networkdnsdomains_1.network_id ORDER BY anon_1.subnets_network_id"
    },
    {
        "adjusted": false,
        "adjustment": "Can you provide a list of distinct network IDs for subnets with IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database, along with their corresponding network RBAC information?\r\n",
        "comment": "curious that it has a list of the same subnet 3x (though it is SELECT DISTINCT from that so presumably something anticipates this possibility)",
        "db_id": "",
        "options": [
            "What are the tenant IDs, IDs, target tenants, actions, object IDs, and IDs of networks associated with network RBACs for subnets with IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database?\n",
            "Can you provide a list of distinct network IDs for subnets with IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database, along with their corresponding network RBAC information?\n",
            "How can I retrieve the tenant IDs, IDs, target tenants, actions, object IDs, and IDs of networks associated with network RBACs for subnets with IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database, ordered by network IDs?\n",
            "Which network RBACs are associated with the subnets having IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database, and what are the corresponding network IDs and other details of these networks?"
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, networks_1.id AS networks_1_id FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9')) AS anon_1 INNER JOIN networks AS networks_1 ON networks_1.id = anon_1.subnets_network_id INNER JOIN networkrbacs ON networks_1.id = networkrbacs.object_id ORDER BY networks_1.id"
    },
    {
        "adjusted": true,
        "adjustment": "",
        "comment": "This network is a TIG network with two subnets `tig-server-subnet` (id e8da8ec5-364b-4a31-afaf-f68a206b7846) and `tig-server-v6` (id 4ec9c5db-8f83-4f66-9de3-45078ba25f41) oddly running the query gives 4 row rather than the expected 2 with the `tig-server-subnet` result shown 3x IDK if this is an oddity of the query or the data",
        "db_id": "",
        "options": [
            "What are the details of the subnets associated with the network ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' including their ID, name, CIDR, gateway IP, and whether DHCP is enabled?\n   \n",
            "Can you provide information about the subnet pools linked to the subnets in the network with ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc', such as the pool ID, IP version, default prefix length, and whether it is shared or the default pool?\n\n",
            "Show the IP allocation details for the subnets within the network 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc', including the first and last IP addresses allocated in each pool.\n\n",
            "Retrieve the DNS server information for the subnets within the network 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc', including the address of each DNS server and their order of preference."
        ],
        "question": "",
        "sql": "SELECT subnets.tenant_id AS subnets_tenant_id, subnets.id AS subnets_id, subnets.name AS subnets_name, subnets.network_id AS subnets_network_id, subnets.subnetpool_id AS subnets_subnetpool_id, subnets.ip_version AS subnets_ip_version, subnets.cidr AS subnets_cidr, subnets.gateway_ip AS subnets_gateway_ip, subnets.enable_dhcp AS subnets_enable_dhcp, subnets.ipv6_ra_mode AS subnets_ipv6_ra_mode, subnets.ipv6_address_mode AS subnets_ipv6_address_mode, subnets.standard_attr_id AS subnets_standard_attr_id, anon_1.networks_id AS anon_1_networks_id, subnetpoolprefixes_1.cidr AS subnetpoolprefixes_1_cidr, subnetpoolprefixes_1.subnetpool_id AS subnetpoolprefixes_1_subnetpool_id, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, subnetpools_1.tenant_id AS subnetpools_1_tenant_id, subnetpools_1.id AS subnetpools_1_id, subnetpools_1.name AS subnetpools_1_name, subnetpools_1.ip_version AS subnetpools_1_ip_version, subnetpools_1.default_prefixlen AS subnetpools_1_default_prefixlen, subnetpools_1.min_prefixlen AS subnetpools_1_min_prefixlen, subnetpools_1.max_prefixlen AS subnetpools_1_max_prefixlen, subnetpools_1.shared AS subnetpools_1_shared, subnetpools_1.is_default AS subnetpools_1_is_default, subnetpools_1.default_quota AS subnetpools_1_default_quota, subnetpools_1.hash AS subnetpools_1_hash, subnetpools_1.address_scope_id AS subnetpools_1_address_scope_id, subnetpools_1.standard_attr_id AS subnetpools_1_standard_attr_id, ipallocationpools_1.id AS ipallocationpools_1_id, ipallocationpools_1.subnet_id AS ipallocationpools_1_subnet_id, ipallocationpools_1.first_ip AS ipallocationpools_1_first_ip, ipallocationpools_1.last_ip AS ipallocationpools_1_last_ip, dnsnameservers_1.address AS dnsnameservers_1_address, dnsnameservers_1.subnet_id AS dnsnameservers_1_subnet_id, dnsnameservers_1.`order` AS dnsnameservers_1_order, subnetroutes_1.destination AS subnetroutes_1_destination, subnetroutes_1.nexthop AS subnetroutes_1_nexthop, subnetroutes_1.subnet_id AS subnetroutes_1_subnet_id, standardattributes_2.created_at AS standardattributes_2_created_at, standardattributes_2.updated_at AS standardattributes_2_updated_at, standardattributes_2.id AS standardattributes_2_id, standardattributes_2.resource_type AS standardattributes_2_resource_type, standardattributes_2.description AS standardattributes_2_description, tags_2.standard_attr_id AS tags_2_standard_attr_id, tags_2.tag AS tags_2_tag FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('b3d6c27a-a9bb-4521-b5de-4d65eb7490dc')) AS anon_1 INNER JOIN subnets ON anon_1.networks_id = subnets.network_id LEFT OUTER JOIN subnetpools AS subnetpools_1 ON subnets.subnetpool_id = subnetpools_1.id LEFT OUTER JOIN subnetpoolprefixes AS subnetpoolprefixes_1 ON subnetpools_1.id = subnetpoolprefixes_1.subnetpool_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = subnetpools_1.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN ipallocationpools AS ipallocationpools_1 ON subnets.id = ipallocationpools_1.subnet_id LEFT OUTER JOIN dnsnameservers AS dnsnameservers_1 ON subnets.id = dnsnameservers_1.subnet_id LEFT OUTER JOIN subnetroutes AS subnetroutes_1 ON subnets.id = subnetroutes_1.subnet_id LEFT OUTER JOIN standardattributes AS standardattributes_2 ON standardattributes_2.id = subnets.standard_attr_id LEFT OUTER JOIN tags AS tags_2 ON standardattributes_2.id = tags_2.standard_attr_id ORDER BY anon_1.networks_id, dnsnameservers_1.`order`"
    },
    {
        "adjusted": false,
        "adjustment": "Which network RBACs are associated with subnets that are part of the network identified by the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database, and what are the corresponding tenant IDs, IDs, target tenants, actions, object IDs, and network IDs?\r\n\r\n",
        "comment": "",
        "db_id": "",
        "options": [
            "What are the tenant IDs, IDs, target tenants, actions, object IDs, and network IDs associated with network RBACs for subnets belonging to the network with the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database?\n   \n",
            "Can you provide a list of network RBACs for subnets that are linked to the network with the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database, including details such as tenant IDs, IDs, target tenants, actions, object IDs, and network IDs?\n\n",
            "Which network RBACs are associated with subnets that are part of the network identified by the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database, and what are the corresponding tenant IDs, IDs, target tenants, actions, object IDs, and network IDs?\n\n",
            "Retrieve the details of network RBACs for subnets that are connected to the network with the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database, including tenant IDs, IDs, target tenants, actions, object IDs, and network IDs, sorted by the network ID of the subnets."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, subnets_1.network_id AS subnets_1_network_id FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('b3d6c27a-a9bb-4521-b5de-4d65eb7490dc')) AS anon_1 INNER JOIN subnets AS subnets_1 ON anon_1.networks_id = subnets_1.network_id INNER JOIN networkrbacs ON subnets_1.network_id = networkrbacs.object_id ORDER BY subnets_1.network_id"
    },
    {
        "adjusted": false,
        "adjustment": "Which networkrbacs entries are associated with the network that has the ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in OpenStack, and what are the corresponding tenant ID, ID, target tenant, action, and object ID values for those entries?\r\n\r\n",
        "comment": "",
        "db_id": "",
        "options": [
            "Can you provide the tenant ID, ID, target tenant, action, object ID, and ID of the network associated with the subnet ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' from the networkrbacs table and networks table in OpenStack?\n   \n",
            "Which networkrbacs entries are associated with the network that has the ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in OpenStack, and what are the corresponding tenant ID, ID, target tenant, action, and object ID values for those entries?\n\n",
            "Retrieve the tenant ID, ID, target tenant, action, object ID, and ID of the network that is linked to the subnet with the ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in OpenStack, sorted by the network ID.\n\n",
            "Show me the details of the networkrbacs entries that are connected to the network with the ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in OpenStack, including the tenant ID, ID, target tenant, action, and object ID, and sort the results by the network ID."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, networks_1.id AS networks_1_id FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('16eaae8c-1920-4b8b-8765-f149dde8a1a6')) AS anon_1 INNER JOIN networks AS networks_1 ON networks_1.id = anon_1.subnets_network_id INNER JOIN networkrbacs ON networks_1.id = networkrbacs.object_id ORDER BY networks_1.id"
    },
    {
        "adjusted": true,
        "adjustment": "",
        "comment": "",
        "db_id": "",
        "options": [
            "Can you provide the tenant ID, ID, target tenant, action, object ID, and networks ID for network RBACs where the networks' IDs are '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' and are associated with external networks?\n   \n",
            "How can I retrieve the tenant ID, ID, target tenant, action, object ID, and networks ID for network RBACs that are linked to networks with the IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' while also considering the case where some networks may not have external network associations?\n\n",
            "What is the SQL query to fetch the tenant ID, ID, target tenant, action, object ID, and networks ID for network RBACs associated with networks having the IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', and how can I ensure the results are ordered by the networks' IDs?\n\n",
            "How can I extract the tenant ID, ID, target tenant, action, object ID, and networks ID for network RBACs where the networks' IDs match '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', and the results are sorted based on the networks' IDs, considering both internal and external network associations?"
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, anon_1.networks_id AS anon_1_networks_id FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d')) AS anon_1 INNER JOIN networkrbacs ON anon_1.networks_id = networkrbacs.object_id ORDER BY anon_1.networks_id"
    },
    {
        "adjusted": false,
        "adjustment": "What is the federated user ID, user ID, IDP ID, protocol ID, unique ID, and display name for the user with the ID '945fa0ad0137481cac5ef83a0b94b1b9' in the OpenStack database?\r\n",
        "comment": "This returns a NULL result if the user is local not federated (all our users are local)\r\n \r\ncorrected query s/USER/user/;\r\n\r\nSELECT federated_user.id AS federated_user_id,        federated_user.user_id AS federated_user_user_id,        federated_user.idp_id AS federated_user_idp_id,        federated_user.protocol_id AS federated_user_protocol_id,        federated_user.unique_id AS federated_user_unique_id,        federated_user.display_name AS federated_user_display_name,        anon_1.user_id AS anon_1_user_id FROM   (SELECT user.id AS user_id    FROM user    WHERE user.id = '945fa0ad0137481cac5ef83a0b94b1b9') AS anon_1 INNER JOIN federated_user ON anon_1.user_id = federated_user.user_id ORDER BY anon_1.user_id;",
        "db_id": "",
        "options": [
            "Can you provide the federated user details (ID, user ID, IDP ID, protocol ID, unique ID, display name) for the user with the ID '945fa0ad0137481cac5ef83a0b94b1b9'?\n",
            "What is the federated user ID, user ID, IDP ID, protocol ID, unique ID, and display name for the user with the ID '945fa0ad0137481cac5ef83a0b94b1b9' in the OpenStack database?\n",
            "How can I retrieve the federated user details (ID, user ID, IDP ID, protocol ID, unique ID, display name) for a specific user with the ID '945fa0ad0137481cac5ef83a0b94b1b9' from the OpenStack database?\n",
            "Which federated user is associated with the user ID '945fa0ad0137481cac5ef83a0b94b1b9' in the OpenStack database, and what are their details (ID, IDP ID, protocol ID, unique ID, display name)?"
        ],
        "question": "",
        "sql": "SELECT federated_user.id AS federated_user_id, federated_user.user_id AS federated_user_user_id, federated_user.idp_id AS federated_user_idp_id, federated_user.protocol_id AS federated_user_protocol_id, federated_user.unique_id AS federated_user_unique_id, federated_user.display_name AS federated_user_display_name, anon_1.user_id AS anon_1_user_id FROM (SELECT user.id AS user_id FROM user WHERE user.id = '945fa0ad0137481cac5ef83a0b94b1b9') AS anon_1 INNER JOIN federated_user ON anon_1.user_id = federated_user.user_id ORDER BY anon_1.user_id"
    },
    {
        "adjusted": false,
        "adjustment": "Can you provide the local user ID, user ID, domain ID, name, and user ID of the user named 'neutron' in the 'default' domain from the OpenStack database, ordered by user ID?\r\n",
        "comment": "corrected query s/USER/user/;\r\n\r\nSELECT local_user.id AS local_user_id,        local_user.user_id AS local_user_user_id,        local_user.domain_id AS local_user_domain_id,        local_user.name AS local_user_name,        anon_1.user_id AS anon_1_user_id FROM   (SELECT user.id AS user_id    FROM user    INNER JOIN local_user ON user.id = local_user.user_id    WHERE local_user.name = 'neutron'      AND local_user.domain_id = 'default') AS anon_1 INNER JOIN local_user ON anon_1.user_id = local_user.user_id ORDER BY anon_1.user_id;",
        "db_id": "",
        "options": [
            "Can you provide the local user ID, user ID, domain ID, name, and user ID of the user named 'neutron' in the 'default' domain from the OpenStack database, ordered by user ID?\n",
            "How can I retrieve the local user ID, user ID, domain ID, name, and user ID of the user named 'neutron' in the 'default' domain from the OpenStack database, sorted by user ID?\n",
            "What is the SQL query to fetch the local user ID, user ID, domain ID, name, and user ID of the user with the name 'neutron' in the 'default' domain from the OpenStack database, with the results ordered by user ID?\n",
            "How can I extract the local user ID, user ID, domain ID, name, and user ID of the user named 'neutron' in the 'default' domain from the OpenStack database, with the results sorted by user ID?"
        ],
        "question": "",
        "sql": "SELECT local_user.id AS local_user_id, local_user.user_id AS local_user_user_id, local_user.domain_id AS local_user_domain_id, local_user.name AS local_user_name, anon_1.user_id AS anon_1_user_id FROM (SELECT user.id AS user_id FROM user INNER JOIN local_user ON user.id = local_user.user_id WHERE local_user.name = 'neutron' AND local_user.domain_id = 'default') AS anon_1 INNER JOIN local_user ON anon_1.user_id = local_user.user_id ORDER BY anon_1.user_id"
    },
    {
        "adjusted": false,
        "adjustment": "What are the details of the subnets associated with the networks having IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' and 'c9e8f307-e1d5-4c06-b464-ef5370ca1d6d' in the OpenStack database? Include information such as subnet ID, name, CIDR, gateway IP, DHCP status, IPv6 RA mode, IPv6 address mode, and DNS nameservers.\r\n\r\n",
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the subnets associated with the networks having IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' and 'c9e8f307-e1d5-4c06-b464-ef5370ca1d6d' in the OpenStack database? Include information such as subnet ID, name, CIDR, gateway IP, DHCP status, IPv6 RA mode, IPv6 address mode, and DNS nameservers.\n\n",
            "Can you provide a list of subnet pools in the OpenStack database along with their details, including pool ID, name, IP version, default prefix length, minimum prefix length, maximum prefix length, shared status, and whether they are set as default pools?\n\n",
            "Retrieve the subnet routes associated with the subnets in the OpenStack database, including details such as destination, next hop, and the corresponding subnet ID.\n\n",
            "Show the IP allocation pools for the subnets in the OpenStack database, including information like pool ID, subnet ID, first IP address, and last IP address."
        ],
        "question": "",
        "sql": "SELECT subnets.tenant_id AS subnets_tenant_id, subnets.id AS subnets_id, subnets.name AS subnets_name, subnets.network_id AS subnets_network_id, subnets.subnetpool_id AS subnets_subnetpool_id, subnets.ip_version AS subnets_ip_version, subnets.cidr AS subnets_cidr, subnets.gateway_ip AS subnets_gateway_ip, subnets.enable_dhcp AS subnets_enable_dhcp, subnets.ipv6_ra_mode AS subnets_ipv6_ra_mode, subnets.ipv6_address_mode AS subnets_ipv6_address_mode, subnets.standard_attr_id AS subnets_standard_attr_id, anon_1.networks_id AS anon_1_networks_id, subnetpoolprefixes_1.cidr AS subnetpoolprefixes_1_cidr, subnetpoolprefixes_1.subnetpool_id AS subnetpoolprefixes_1_subnetpool_id, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, subnetpools_1.tenant_id AS subnetpools_1_tenant_id, subnetpools_1.id AS subnetpools_1_id, subnetpools_1.name AS subnetpools_1_name, subnetpools_1.ip_version AS subnetpools_1_ip_version, subnetpools_1.default_prefixlen AS subnetpools_1_default_prefixlen, subnetpools_1.min_prefixlen AS subnetpools_1_min_prefixlen, subnetpools_1.max_prefixlen AS subnetpools_1_max_prefixlen, subnetpools_1.shared AS subnetpools_1_shared, subnetpools_1.is_default AS subnetpools_1_is_default, subnetpools_1.default_quota AS subnetpools_1_default_quota, subnetpools_1.hash AS subnetpools_1_hash, subnetpools_1.address_scope_id AS subnetpools_1_address_scope_id, subnetpools_1.standard_attr_id AS subnetpools_1_standard_attr_id, ipallocationpools_1.id AS ipallocationpools_1_id, ipallocationpools_1.subnet_id AS ipallocationpools_1_subnet_id, ipallocationpools_1.first_ip AS ipallocationpools_1_first_ip, ipallocationpools_1.last_ip AS ipallocationpools_1_last_ip, dnsnameservers_1.address AS dnsnameservers_1_address, dnsnameservers_1.subnet_id AS dnsnameservers_1_subnet_id, dnsnameservers_1.`order` AS dnsnameservers_1_order, subnetroutes_1.destination AS subnetroutes_1_destination, subnetroutes_1.nexthop AS subnetroutes_1_nexthop, subnetroutes_1.subnet_id AS subnetroutes_1_subnet_id, standardattributes_2.created_at AS standardattributes_2_created_at, standardattributes_2.updated_at AS standardattributes_2_updated_at, standardattributes_2.id AS standardattributes_2_id, standardattributes_2.resource_type AS standardattributes_2_resource_type, standardattributes_2.description AS standardattributes_2_description, tags_2.standard_attr_id AS tags_2_standard_attr_id, tags_2.tag AS tags_2_tag FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', 'c9e8f307-e1d5-4c06-b464-ef5370ca1d6d')) AS anon_1 INNER JOIN subnets ON anon_1.networks_id = subnets.network_id LEFT OUTER JOIN subnetpools AS subnetpools_1 ON subnets.subnetpool_id = subnetpools_1.id LEFT OUTER JOIN subnetpoolprefixes AS subnetpoolprefixes_1 ON subnetpools_1.id = subnetpoolprefixes_1.subnetpool_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = subnetpools_1.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN ipallocationpools AS ipallocationpools_1 ON subnets.id = ipallocationpools_1.subnet_id LEFT OUTER JOIN dnsnameservers AS dnsnameservers_1 ON subnets.id = dnsnameservers_1.subnet_id LEFT OUTER JOIN subnetroutes AS subnetroutes_1 ON subnets.id = subnetroutes_1.subnet_id LEFT OUTER JOIN standardattributes AS standardattributes_2 ON standardattributes_2.id = subnets.standard_attr_id LEFT OUTER JOIN tags AS tags_2 ON standardattributes_2.id = tags_2.standard_attr_id ORDER BY anon_1.networks_id, dnsnameservers_1.`order`"
    },
    {
        "adjusted": true,
        "adjustment": "",
        "comment": "",
        "db_id": "",
        "options": [
            "What are the tenant IDs, IDs, target tenants, actions, object IDs, and network IDs associated with network RBACs for networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database?\n",
            "How can we retrieve the tenant IDs, IDs, target tenants, actions, object IDs, and network IDs for network RBACs that are linked to the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database?\n",
            "Which network RBACs are associated with the networks having IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database, and what are the corresponding tenant IDs, IDs, target tenants, actions, object IDs, and network IDs?\n",
            "How can we list the tenant IDs, IDs, target tenants, actions, object IDs, and network IDs for network RBACs that are connected to the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database, ordered by the network IDs?"
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, anon_1.networks_id AS anon_1_networks_id FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d')) AS anon_1 INNER JOIN networkrbacs ON anon_1.networks_id = networkrbacs.object_id ORDER BY anon_1.networks_id"
    },
    {
        "adjusted": true,
        "adjustment": "",
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the networkrbacs records that are associated with the subnets having the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database?\n",
            "Can you provide the tenant ID, action, and target tenant information for the networkrbacs records that are linked to the subnets with the network IDs retrieved from the subnets table in the OpenStack database?\n",
            "How can we retrieve the networkrbacs records that correspond to the subnets with the network IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database, and what is the network ID associated with these subnets?\n",
            "In the OpenStack database, which networkrbacs entries are connected to the subnets with the network IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9', and what is the order of these subnets based on their network IDs?"
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, anon_1.subnets_network_id AS anon_1_subnets_network_id FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9')) AS anon_1 INNER JOIN networkrbacs ON anon_1.subnets_network_id = networkrbacs.object_id ORDER BY anon_1.subnets_network_id"
    },
    {
        "adjusted": true,
        "adjustment": "",
        "comment": "",
        "db_id": "",
        "options": [
            "Can you provide the password_id, password_local_user_id, password_password, and local_user_1_id for the user with the local_user name 'neutron' and domain_id 'default' from the OpenStack database?\n",
            "How can I retrieve the password information for the user associated with the local_user name 'neutron' and domain_id 'default' in the OpenStack database, including the user's ID and local_user ID?\n",
            "Which SQL query should I use to obtain the password details for the user with the local_user name 'neutron' and domain_id 'default' in the OpenStack database, sorted by the local_user ID?\n",
            "What is the process to fetch the password information, including the password ID, local_user ID, password, and local_user_1 ID, for the user with the local_user name 'neutron' and domain_id 'default' in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT password.id AS password_id, password.local_user_id AS password_local_user_id, password.password AS password_password, local_user_1.id AS local_user_1_id FROM (SELECT user.id AS user_id FROM user INNER JOIN local_user ON user.id = local_user.user_id WHERE local_user.name = 'neutron' AND local_user.domain_id = 'default') AS anon_1 INNER JOIN local_user AS local_user_1 ON anon_1.user_id = local_user_1.user_id INNER JOIN password ON local_user_1.id = password.local_user_id ORDER BY local_user_1.id"
    },
    {
        "adjusted": false,
        "adjustment": "What are the details of the subnets associated with the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database? Include information such as subnet ID, CIDR, gateway IP, DHCP status, IPv6 RA mode, and IPv6 address mode.\r\n\r\n",
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the subnets associated with the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database? Include information such as subnet ID, CIDR, gateway IP, DHCP status, IPv6 RA mode, and IPv6 address mode.\n\n",
            "Can you provide a list of subnet pools in the OpenStack database along with their respective details, including the pool ID, name, IP version, default prefix length, minimum prefix length, maximum prefix length, and whether they are shared or default?\n\n",
            "Show me the IP allocation pools for the subnets in the OpenStack database, including details such as pool ID, subnet ID, first IP address, and last IP address.\n\n",
            "Retrieve the DNS name servers associated with the subnets in the OpenStack database, including details like the address, subnet ID, and order of the DNS servers."
        ],
        "question": "",
        "sql": "SELECT subnets.tenant_id AS subnets_tenant_id, subnets.id AS subnets_id, subnets.name AS subnets_name, subnets.network_id AS subnets_network_id, subnets.subnetpool_id AS subnets_subnetpool_id, subnets.ip_version AS subnets_ip_version, subnets.cidr AS subnets_cidr, subnets.gateway_ip AS subnets_gateway_ip, subnets.enable_dhcp AS subnets_enable_dhcp, subnets.ipv6_ra_mode AS subnets_ipv6_ra_mode, subnets.ipv6_address_mode AS subnets_ipv6_address_mode, subnets.standard_attr_id AS subnets_standard_attr_id, anon_1.networks_id AS anon_1_networks_id, subnetpoolprefixes_1.cidr AS subnetpoolprefixes_1_cidr, subnetpoolprefixes_1.subnetpool_id AS subnetpoolprefixes_1_subnetpool_id, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, subnetpools_1.tenant_id AS subnetpools_1_tenant_id, subnetpools_1.id AS subnetpools_1_id, subnetpools_1.name AS subnetpools_1_name, subnetpools_1.ip_version AS subnetpools_1_ip_version, subnetpools_1.default_prefixlen AS subnetpools_1_default_prefixlen, subnetpools_1.min_prefixlen AS subnetpools_1_min_prefixlen, subnetpools_1.max_prefixlen AS subnetpools_1_max_prefixlen, subnetpools_1.shared AS subnetpools_1_shared, subnetpools_1.is_default AS subnetpools_1_is_default, subnetpools_1.default_quota AS subnetpools_1_default_quota, subnetpools_1.hash AS subnetpools_1_hash, subnetpools_1.address_scope_id AS subnetpools_1_address_scope_id, subnetpools_1.standard_attr_id AS subnetpools_1_standard_attr_id, ipallocationpools_1.id AS ipallocationpools_1_id, ipallocationpools_1.subnet_id AS ipallocationpools_1_subnet_id, ipallocationpools_1.first_ip AS ipallocationpools_1_first_ip, ipallocationpools_1.last_ip AS ipallocationpools_1_last_ip, dnsnameservers_1.address AS dnsnameservers_1_address, dnsnameservers_1.subnet_id AS dnsnameservers_1_subnet_id, dnsnameservers_1.`order` AS dnsnameservers_1_order, subnetroutes_1.destination AS subnetroutes_1_destination, subnetroutes_1.nexthop AS subnetroutes_1_nexthop, subnetroutes_1.subnet_id AS subnetroutes_1_subnet_id, standardattributes_2.created_at AS standardattributes_2_created_at, standardattributes_2.updated_at AS standardattributes_2_updated_at, standardattributes_2.id AS standardattributes_2_id, standardattributes_2.resource_type AS standardattributes_2_resource_type, standardattributes_2.description AS standardattributes_2_description, tags_2.standard_attr_id AS tags_2_standard_attr_id, tags_2.tag AS tags_2_tag FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d')) AS anon_1 INNER JOIN subnets ON anon_1.networks_id = subnets.network_id LEFT OUTER JOIN subnetpools AS subnetpools_1 ON subnets.subnetpool_id = subnetpools_1.id LEFT OUTER JOIN subnetpoolprefixes AS subnetpoolprefixes_1 ON subnetpools_1.id = subnetpoolprefixes_1.subnetpool_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = subnetpools_1.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN ipallocationpools AS ipallocationpools_1 ON subnets.id = ipallocationpools_1.subnet_id LEFT OUTER JOIN dnsnameservers AS dnsnameservers_1 ON subnets.id = dnsnameservers_1.subnet_id LEFT OUTER JOIN subnetroutes AS subnetroutes_1 ON subnets.id = subnetroutes_1.subnet_id LEFT OUTER JOIN standardattributes AS standardattributes_2 ON standardattributes_2.id = subnets.standard_attr_id LEFT OUTER JOIN tags AS tags_2 ON standardattributes_2.id = tags_2.standard_attr_id ORDER BY anon_1.networks_id, dnsnameservers_1.`order`"
    },
    {
        "adjusted": false,
        "adjustment": "What are the details of the networks associated with the subnets having IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database? Include information such as tenant ID, network ID, name, status, admin state, MTU, VLAN transparency, availability zone hints, and standard attribute ID.\r\n\r\n",
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the networks associated with the subnets having IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database? Include information such as tenant ID, network ID, name, status, admin state, MTU, VLAN transparency, availability zone hints, and standard attribute ID.\n\n",
            "Can you provide a list of all the agents and their details that are associated with the networks linked to the subnets with IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database? Include information like agent ID, type, binary, topic, host, availability zone, admin state, creation timestamp, and heartbeat timestamp.\n\n",
            "Show the tags and external network details for the networks connected to the subnets with IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database. Include information such as standard attribute ID, tag, default status of the external network, and any policy bindings associated with the networks.\n\n",
            "Provide a comprehensive overview of the network security and DNS domain information for the networks associated with the subnets having IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database. Include details like port security status, DNS domain, and any security policy bindings related to these networks."
        ],
        "question": "",
        "sql": "SELECT networks.tenant_id AS networks_tenant_id, networks.id AS networks_id, networks.name AS networks_name, networks.status AS networks_status, networks.admin_state_up AS networks_admin_state_up, networks.mtu AS networks_mtu, networks.vlan_transparent AS networks_vlan_transparent, networks.availability_zone_hints AS networks_availability_zone_hints, networks.standard_attr_id AS networks_standard_attr_id, anon_1.subnets_network_id AS anon_1_subnets_network_id, agents_1.id AS agents_1_id, agents_1.agent_type AS agents_1_agent_type, agents_1.`binary` AS agents_1_binary, agents_1.topic AS agents_1_topic, agents_1.host AS agents_1_host, agents_1.availability_zone AS agents_1_availability_zone, agents_1.admin_state_up AS agents_1_admin_state_up, agents_1.created_at AS agents_1_created_at, agents_1.started_at AS agents_1_started_at, agents_1.heartbeat_timestamp AS agents_1_heartbeat_timestamp, agents_1.description AS agents_1_description, agents_1.configurations AS agents_1_configurations, agents_1.resource_versions AS agents_1_resource_versions, agents_1.`load` AS agents_1_load, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, externalnetworks_1.network_id AS externalnetworks_1_network_id, externalnetworks_1.is_default AS externalnetworks_1_is_default, qos_network_policy_bindings_1.policy_id AS qos_network_policy_bindings_1_policy_id, qos_network_policy_bindings_1.network_id AS qos_network_policy_bindings_1_network_id, networksecuritybindings_1.network_id AS networksecuritybindings_1_network_id, networksecuritybindings_1.port_security_enabled AS networksecuritybindings_1_port_security_enabled, networkdnsdomains_1.network_id AS networkdnsdomains_1_network_id, networkdnsdomains_1.dns_domain AS networkdnsdomains_1_dns_domain FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9')) AS anon_1 INNER JOIN networks ON networks.id = anon_1.subnets_network_id LEFT OUTER JOIN (networkdhcpagentbindings AS networkdhcpagentbindings_1 INNER JOIN agents AS agents_1 ON agents_1.id = networkdhcpagentbindings_1.dhcp_agent_id) ON networks.id = networkdhcpagentbindings_1.network_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = networks.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN externalnetworks AS externalnetworks_1 ON networks.id = externalnetworks_1.network_id LEFT OUTER JOIN qos_network_policy_bindings AS qos_network_policy_bindings_1 ON networks.id = qos_network_policy_bindings_1.network_id LEFT OUTER JOIN networksecuritybindings AS networksecuritybindings_1 ON networks.id = networksecuritybindings_1.network_id LEFT OUTER JOIN networkdnsdomains AS networkdnsdomains_1 ON networks.id = networkdnsdomains_1.network_id ORDER BY anon_1.subnets_network_id"
    }
]