[
    {
        "adjusted": true,
        "comment": "This is a much more verbose 'show' than I've seen before...i'm not sure if it is 'everything' but not sure how to distinguish it from other 'show' type invocations.",
        "db_id": "",
        "options": [
            "What are the various attributes such as creation timestamp, update timestamp, deletion timestamp, user ID, project ID, image reference, kernel ID, RAM disk ID, hostname, and key name associated with the instance having the UUID '3d471303-557b-4a65-a5bd-1ca14dc2e445' in the OpenStack database?\n",
            "Can you list the security group details like ID, name, description, user ID, and project ID linked to the instance with the UUID '3d471303-557b-4a65-a5bd-1ca14dc2e445' that are not marked as deleted?\n",
            "What are the rules related to security groups, including protocol, port range, CIDR, and group ID, associated with the instance having the UUID '3d471303-557b-4a65-a5bd-1ca14dc2e445' in the OpenStack database?\n",
            "Could you provide information about the instance's network, flavor, creation timestamp, update timestamp, and deletion timestamp, along with any system metadata, for the instance identified by the UUID '3d471303-557b-4a65-a5bd-1ca14dc2e445' in the OpenStack database?"
        ],
        "question": "Show everything you know about instance with UUID '3d471303-557b-4a65-a5bd-1ca14dc2e445' ",
        "sql": "SELECT anon_1.instances_created_at AS anon_1_instances_created_at, anon_1.instances_updated_at AS anon_1_instances_updated_at, anon_1.instances_deleted_at AS anon_1_instances_deleted_at, anon_1.instances_deleted AS anon_1_instances_deleted, anon_1.instances_id AS anon_1_instances_id, anon_1.instances_user_id AS anon_1_instances_user_id, anon_1.instances_project_id AS anon_1_instances_project_id, anon_1.instances_image_ref AS anon_1_instances_image_ref, anon_1.instances_kernel_id AS anon_1_instances_kernel_id, anon_1.instances_ramdisk_id AS anon_1_instances_ramdisk_id, anon_1.instances_hostname AS anon_1_instances_hostname, anon_1.instances_launch_index AS anon_1_instances_launch_index, anon_1.instances_key_name AS anon_1_instances_key_name, anon_1.instances_key_data AS anon_1_instances_key_data, anon_1.instances_power_state AS anon_1_instances_power_state, anon_1.instances_vm_state AS anon_1_instances_vm_state, anon_1.instances_task_state AS anon_1_instances_task_state, anon_1.instances_memory_mb AS anon_1_instances_memory_mb, anon_1.instances_vcpus AS anon_1_instances_vcpus, anon_1.instances_root_gb AS anon_1_instances_root_gb, anon_1.instances_ephemeral_gb AS anon_1_instances_ephemeral_gb, anon_1.instances_ephemeral_key_uuid AS anon_1_instances_ephemeral_key_uuid, anon_1.instances_host AS anon_1_instances_host, anon_1.instances_node AS anon_1_instances_node, anon_1.instances_instance_type_id AS anon_1_instances_instance_type_id, anon_1.instances_user_data AS anon_1_instances_user_data, anon_1.instances_reservation_id AS anon_1_instances_reservation_id, anon_1.instances_launched_at AS anon_1_instances_launched_at, anon_1.instances_terminated_at AS anon_1_instances_terminated_at, anon_1.instances_availability_zone AS anon_1_instances_availability_zone, anon_1.instances_display_name AS anon_1_instances_display_name, anon_1.instances_display_description AS anon_1_instances_display_description, anon_1.instances_launched_on AS anon_1_instances_launched_on, anon_1.instances_locked AS anon_1_instances_locked, anon_1.instances_locked_by AS anon_1_instances_locked_by, anon_1.instances_os_type AS anon_1_instances_os_type, anon_1.instances_architecture AS anon_1_instances_architecture, anon_1.instances_vm_mode AS anon_1_instances_vm_mode, anon_1.instances_uuid AS anon_1_instances_uuid, anon_1.instances_root_device_name AS anon_1_instances_root_device_name, anon_1.instances_default_ephemeral_device AS anon_1_instances_default_ephemeral_device, anon_1.instances_default_swap_device AS anon_1_instances_default_swap_device, anon_1.instances_config_drive AS anon_1_instances_config_drive, anon_1.instances_access_ip_v4 AS anon_1_instances_access_ip_v4, anon_1.instances_access_ip_v6 AS anon_1_instances_access_ip_v6, anon_1.instances_auto_disk_config AS anon_1_instances_auto_disk_config, anon_1.instances_progress AS anon_1_instances_progress, anon_1.instances_shutdown_terminate AS anon_1_instances_shutdown_terminate, anon_1.instances_disable_terminate AS anon_1_instances_disable_terminate, anon_1.instances_cell_name AS anon_1_instances_cell_name, anon_1.instances_internal_id AS anon_1_instances_internal_id, anon_1.instances_cleaned AS anon_1_instances_cleaned, security_groups_1.created_at AS security_groups_1_created_at, security_groups_1.updated_at AS security_groups_1_updated_at, security_groups_1.deleted_at AS security_groups_1_deleted_at, security_groups_1.deleted AS security_groups_1_deleted, security_groups_1.id AS security_groups_1_id, security_groups_1.name AS security_groups_1_name, security_groups_1.description AS security_groups_1_description, security_groups_1.user_id AS security_groups_1_user_id, security_groups_1.project_id AS security_groups_1_project_id, security_group_rules_1.created_at AS security_group_rules_1_created_at, security_group_rules_1.updated_at AS security_group_rules_1_updated_at, security_group_rules_1.deleted_at AS security_group_rules_1_deleted_at, security_group_rules_1.deleted AS security_group_rules_1_deleted, security_group_rules_1.id AS security_group_rules_1_id, security_group_rules_1.parent_group_id AS security_group_rules_1_parent_group_id, security_group_rules_1.protocol AS security_group_rules_1_protocol, security_group_rules_1.from_port AS security_group_rules_1_from_port, security_group_rules_1.to_port AS security_group_rules_1_to_port, security_group_rules_1.cidr AS security_group_rules_1_cidr, security_group_rules_1.group_id AS security_group_rules_1_group_id, instance_info_caches_1.created_at AS instance_info_caches_1_created_at, instance_info_caches_1.updated_at AS instance_info_caches_1_updated_at, instance_info_caches_1.deleted_at AS instance_info_caches_1_deleted_at, instance_info_caches_1.deleted AS instance_info_caches_1_deleted, instance_info_caches_1.id AS instance_info_caches_1_id, instance_info_caches_1.network_info AS instance_info_caches_1_network_info, instance_info_caches_1.instance_uuid AS instance_info_caches_1_instance_uuid, instance_extra_1.flavor AS instance_extra_1_flavor, instance_extra_1.created_at AS instance_extra_1_created_at, instance_extra_1.updated_at AS instance_extra_1_updated_at, instance_extra_1.deleted_at AS instance_extra_1_deleted_at, instance_extra_1.deleted AS instance_extra_1_deleted, instance_extra_1.id AS instance_extra_1_id, instance_extra_1.instance_uuid AS instance_extra_1_instance_uuid, instance_system_metadata_1.created_at AS instance_system_metadata_1_created_at, instance_system_metadata_1.updated_at AS instance_system_metadata_1_updated_at, instance_system_metadata_1.deleted_at AS instance_system_metadata_1_deleted_at, instance_system_metadata_1.deleted AS instance_system_metadata_1_deleted, instance_system_metadata_1.id AS instance_system_metadata_1_id, instance_system_metadata_1.`key` AS instance_system_metadata_1_key, instance_system_metadata_1.value AS instance_system_metadata_1_value, instance_system_metadata_1.instance_uuid AS instance_system_metadata_1_instance_uuid\nFROM (SELECT instances.created_at AS instances_created_at, instances.updated_at AS instances_updated_at, instances.deleted_at AS instances_deleted_at, instances.deleted AS instances_deleted, instances.id AS instances_id, instances.user_id AS instances_user_id, instances.project_id AS instances_project_id, instances.image_ref AS instances_image_ref, instances.kernel_id AS instances_kernel_id, instances.ramdisk_id AS instances_ramdisk_id, instances.hostname AS instances_hostname, instances.launch_index AS instances_launch_index, instances.key_name AS instances_key_name, instances.key_data AS instances_key_data, instances.power_state AS instances_power_state, instances.vm_state AS instances_vm_state, instances.task_state AS instances_task_state, instances.memory_mb AS instances_memory_mb, instances.vcpus AS instances_vcpus, instances.root_gb AS instances_root_gb, instances.ephemeral_gb AS instances_ephemeral_gb, instances.ephemeral_key_uuid AS instances_ephemeral_key_uuid, instances.host AS instances_host, instances.node AS instances_node, instances.instance_type_id AS instances_instance_type_id, instances.user_data AS instances_user_data, instances.reservation_id AS instances_reservation_id, instances.launched_at AS instances_launched_at, instances.terminated_at AS instances_terminated_at, instances.availability_zone AS instances_availability_zone, instances.display_name AS instances_display_name, instances.display_description AS instances_display_description, instances.launched_on AS instances_launched_on, instances.locked AS instances_locked, instances.locked_by AS instances_locked_by, instances.os_type AS instances_os_type, instances.architecture AS instances_architecture, instances.vm_mode AS instances_vm_mode, instances.uuid AS instances_uuid, instances.root_device_name AS instances_root_device_name, instances.default_ephemeral_device AS instances_default_ephemeral_device, instances.default_swap_device AS instances_default_swap_device, instances.config_drive AS instances_config_drive, instances.access_ip_v4 AS instances_access_ip_v4, instances.access_ip_v6 AS instances_access_ip_v6, instances.auto_disk_config AS instances_auto_disk_config, instances.progress AS instances_progress, instances.shutdown_terminate AS instances_shutdown_terminate, instances.disable_terminate AS instances_disable_terminate, instances.cell_name AS instances_cell_name, instances.internal_id AS instances_internal_id, instances.cleaned AS instances_cleaned\nFROM instances\nWHERE instances.deleted = 0 AND instances.uuid = '3d471303-557b-4a65-a5bd-1ca14dc2e445'\nLIMIT 1) AS anon_1 LEFT OUTER JOIN (security_group_instance_association AS security_group_instance_association_1 INNER JOIN security_groups AS security_groups_1 ON security_groups_1.id = security_group_instance_association_1.security_group_id AND security_group_instance_association_1.deleted = 0 AND security_groups_1.deleted = 0) ON security_group_instance_association_1.instance_uuid = anon_1.instances_uuid AND anon_1.instances_deleted = 0 LEFT OUTER JOIN security_group_rules AS security_group_rules_1 ON security_group_rules_1.parent_group_id = security_groups_1.id AND security_group_rules_1.deleted = 0 LEFT OUTER JOIN instance_info_caches AS instance_info_caches_1 ON instance_info_caches_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_extra AS instance_extra_1 ON instance_extra_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_system_metadata AS instance_system_metadata_1 ON anon_1.instances_uuid = instance_system_metadata_1.instance_uuid"
    },
    {
        "adjusted": false,
        "comment": "I can't see how this model differs from the last I described this way? Haven't diffed them but on just looking at them they seem the same to me?\r\n",
        "db_id": "",
        "options": [
            "What are the various attributes such as creation timestamp, update timestamp, deletion timestamp, user ID, project ID, image reference, and hostname associated with the instance having the UUID '4ed92951-28b6-45bf-8baa-ed939796746e' in the OpenStack database?\n",
            "Can you list the security group details like ID, name, description, user ID, and project ID linked to the instance with the UUID '4ed92951-28b6-45bf-8baa-ed939796746e' in the OpenStack database?\n",
            "What are the rules associated with the security groups, including protocol, port range, CIDR, and group ID, for the instance identified by the UUID '4ed92951-28b6-45bf-8baa-ed939796746e' in the OpenStack database?\n",
            "Could you provide information about the network, instance UUID, creation timestamp, and update timestamp for the instance with the UUID '4ed92951-28b6-45bf-8baa-ed939796746e' in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT anon_1.instances_created_at AS anon_1_instances_created_at, anon_1.instances_updated_at AS anon_1_instances_updated_at, anon_1.instances_deleted_at AS anon_1_instances_deleted_at, anon_1.instances_deleted AS anon_1_instances_deleted, anon_1.instances_id AS anon_1_instances_id, anon_1.instances_user_id AS anon_1_instances_user_id, anon_1.instances_project_id AS anon_1_instances_project_id, anon_1.instances_image_ref AS anon_1_instances_image_ref, anon_1.instances_kernel_id AS anon_1_instances_kernel_id, anon_1.instances_ramdisk_id AS anon_1_instances_ramdisk_id, anon_1.instances_hostname AS anon_1_instances_hostname, anon_1.instances_launch_index AS anon_1_instances_launch_index, anon_1.instances_key_name AS anon_1_instances_key_name, anon_1.instances_key_data AS anon_1_instances_key_data, anon_1.instances_power_state AS anon_1_instances_power_state, anon_1.instances_vm_state AS anon_1_instances_vm_state, anon_1.instances_task_state AS anon_1_instances_task_state, anon_1.instances_memory_mb AS anon_1_instances_memory_mb, anon_1.instances_vcpus AS anon_1_instances_vcpus, anon_1.instances_root_gb AS anon_1_instances_root_gb, anon_1.instances_ephemeral_gb AS anon_1_instances_ephemeral_gb, anon_1.instances_ephemeral_key_uuid AS anon_1_instances_ephemeral_key_uuid, anon_1.instances_host AS anon_1_instances_host, anon_1.instances_node AS anon_1_instances_node, anon_1.instances_instance_type_id AS anon_1_instances_instance_type_id, anon_1.instances_user_data AS anon_1_instances_user_data, anon_1.instances_reservation_id AS anon_1_instances_reservation_id, anon_1.instances_launched_at AS anon_1_instances_launched_at, anon_1.instances_terminated_at AS anon_1_instances_terminated_at, anon_1.instances_availability_zone AS anon_1_instances_availability_zone, anon_1.instances_display_name AS anon_1_instances_display_name, anon_1.instances_display_description AS anon_1_instances_display_description, anon_1.instances_launched_on AS anon_1_instances_launched_on, anon_1.instances_locked AS anon_1_instances_locked, anon_1.instances_locked_by AS anon_1_instances_locked_by, anon_1.instances_os_type AS anon_1_instances_os_type, anon_1.instances_architecture AS anon_1_instances_architecture, anon_1.instances_vm_mode AS anon_1_instances_vm_mode, anon_1.instances_uuid AS anon_1_instances_uuid, anon_1.instances_root_device_name AS anon_1_instances_root_device_name, anon_1.instances_default_ephemeral_device AS anon_1_instances_default_ephemeral_device, anon_1.instances_default_swap_device AS anon_1_instances_default_swap_device, anon_1.instances_config_drive AS anon_1_instances_config_drive, anon_1.instances_access_ip_v4 AS anon_1_instances_access_ip_v4, anon_1.instances_access_ip_v6 AS anon_1_instances_access_ip_v6, anon_1.instances_auto_disk_config AS anon_1_instances_auto_disk_config, anon_1.instances_progress AS anon_1_instances_progress, anon_1.instances_shutdown_terminate AS anon_1_instances_shutdown_terminate, anon_1.instances_disable_terminate AS anon_1_instances_disable_terminate, anon_1.instances_cell_name AS anon_1_instances_cell_name, anon_1.instances_internal_id AS anon_1_instances_internal_id, anon_1.instances_cleaned AS anon_1_instances_cleaned, security_groups_1.created_at AS security_groups_1_created_at, security_groups_1.updated_at AS security_groups_1_updated_at, security_groups_1.deleted_at AS security_groups_1_deleted_at, security_groups_1.deleted AS security_groups_1_deleted, security_groups_1.id AS security_groups_1_id, security_groups_1.name AS security_groups_1_name, security_groups_1.description AS security_groups_1_description, security_groups_1.user_id AS security_groups_1_user_id, security_groups_1.project_id AS security_groups_1_project_id, security_group_rules_1.created_at AS security_group_rules_1_created_at, security_group_rules_1.updated_at AS security_group_rules_1_updated_at, security_group_rules_1.deleted_at AS security_group_rules_1_deleted_at, security_group_rules_1.deleted AS security_group_rules_1_deleted, security_group_rules_1.id AS security_group_rules_1_id, security_group_rules_1.parent_group_id AS security_group_rules_1_parent_group_id, security_group_rules_1.protocol AS security_group_rules_1_protocol, security_group_rules_1.from_port AS security_group_rules_1_from_port, security_group_rules_1.to_port AS security_group_rules_1_to_port, security_group_rules_1.cidr AS security_group_rules_1_cidr, security_group_rules_1.group_id AS security_group_rules_1_group_id, instance_info_caches_1.created_at AS instance_info_caches_1_created_at, instance_info_caches_1.updated_at AS instance_info_caches_1_updated_at, instance_info_caches_1.deleted_at AS instance_info_caches_1_deleted_at, instance_info_caches_1.deleted AS instance_info_caches_1_deleted, instance_info_caches_1.id AS instance_info_caches_1_id, instance_info_caches_1.network_info AS instance_info_caches_1_network_info, instance_info_caches_1.instance_uuid AS instance_info_caches_1_instance_uuid\nFROM (SELECT instances.created_at AS instances_created_at, instances.updated_at AS instances_updated_at, instances.deleted_at AS instances_deleted_at, instances.deleted AS instances_deleted, instances.id AS instances_id, instances.user_id AS instances_user_id, instances.project_id AS instances_project_id, instances.image_ref AS instances_image_ref, instances.kernel_id AS instances_kernel_id, instances.ramdisk_id AS instances_ramdisk_id, instances.hostname AS instances_hostname, instances.launch_index AS instances_launch_index, instances.key_name AS instances_key_name, instances.key_data AS instances_key_data, instances.power_state AS instances_power_state, instances.vm_state AS instances_vm_state, instances.task_state AS instances_task_state, instances.memory_mb AS instances_memory_mb, instances.vcpus AS instances_vcpus, instances.root_gb AS instances_root_gb, instances.ephemeral_gb AS instances_ephemeral_gb, instances.ephemeral_key_uuid AS instances_ephemeral_key_uuid, instances.host AS instances_host, instances.node AS instances_node, instances.instance_type_id AS instances_instance_type_id, instances.user_data AS instances_user_data, instances.reservation_id AS instances_reservation_id, instances.launched_at AS instances_launched_at, instances.terminated_at AS instances_terminated_at, instances.availability_zone AS instances_availability_zone, instances.display_name AS instances_display_name, instances.display_description AS instances_display_description, instances.launched_on AS instances_launched_on, instances.locked AS instances_locked, instances.locked_by AS instances_locked_by, instances.os_type AS instances_os_type, instances.architecture AS instances_architecture, instances.vm_mode AS instances_vm_mode, instances.uuid AS instances_uuid, instances.root_device_name AS instances_root_device_name, instances.default_ephemeral_device AS instances_default_ephemeral_device, instances.default_swap_device AS instances_default_swap_device, instances.config_drive AS instances_config_drive, instances.access_ip_v4 AS instances_access_ip_v4, instances.access_ip_v6 AS instances_access_ip_v6, instances.auto_disk_config AS instances_auto_disk_config, instances.progress AS instances_progress, instances.shutdown_terminate AS instances_shutdown_terminate, instances.disable_terminate AS instances_disable_terminate, instances.cell_name AS instances_cell_name, instances.internal_id AS instances_internal_id, instances.cleaned AS instances_cleaned\nFROM instances\nWHERE instances.deleted = 0 AND instances.uuid = '4ed92951-28b6-45bf-8baa-ed939796746e'\nLIMIT 1) AS anon_1 LEFT OUTER JOIN (security_group_instance_association AS security_group_instance_association_1 INNER JOIN security_groups AS security_groups_1 ON security_groups_1.id = security_group_instance_association_1.security_group_id AND security_group_instance_association_1.deleted = 0 AND security_groups_1.deleted = 0) ON security_group_instance_association_1.instance_uuid = anon_1.instances_uuid AND anon_1.instances_deleted = 0 LEFT OUTER JOIN security_group_rules AS security_group_rules_1 ON security_group_rules_1.parent_group_id = security_groups_1.id AND security_group_rules_1.deleted = 0 LEFT OUTER JOIN instance_info_caches AS instance_info_caches_1 ON instance_info_caches_1.instance_uuid = anon_1.instances_uuid"
    },
    {
        "adjusted": true,
        "comment": "`and have an ID less than 'cee91088-04a9-4fdf-b2af-a5f2f0889056'` is a weird thing, I suspect this is part of a paged response maybe?",
        "db_id": "",
        "options": [
            "What are the details of the images in the OpenStack database that are not deleted, have a status of 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', were created before '2016-11-28 17:25:32', or were created at '2016-11-28 17:25:32' and have an ID less than 'cee91088-04a9-4fdf-b2af-a5f2f0889056', ordered by creation date and ID?\n",
            "Can you list the created at, updated at, deleted at, deleted status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status of the images that meet the specified criteria in the OpenStack database, along with their tags, locations, and properties?\n",
            "Which images in the OpenStack database, that are not deleted and have a status of 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', were created before '2016-11-28 17:25:32', or were created at '2016-11-28 17:25:32' and have an ID less than 'cee91088-04a9-4fdf-b2af-a5f2f0889056', have associated tags, locations, and properties, ordered by creation date and ID?\n",
            "Provide the details of the images in the OpenStack database that are not deleted, have a status of 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', were created before '2016-11-28 17:25:32', or were created at '2016-11-28 17:25:32' and have an ID less than 'cee91088-04a9-4fdf-b2af-a5f2f0889056', including their tags, locations, and properties, sorted by creation date and ID."
        ],
        "question": "Provide the details of the images in the OpenStack database that are not deleted and do not have a status of killed whicg were created at or before '2016-11-28 17:25:32' and have an ID less than 'cee91088-04a9-4fdf-b2af-a5f2f0889056'",
        "sql": "SELECT anon_1.images_created_at AS anon_1_images_created_at, anon_1.images_updated_at AS anon_1_images_updated_at, anon_1.images_deleted_at AS anon_1_images_deleted_at, anon_1.images_deleted AS anon_1_images_deleted, anon_1.images_id AS anon_1_images_id, anon_1.images_name AS anon_1_images_name, anon_1.images_disk_format AS anon_1_images_disk_format, anon_1.images_container_format AS anon_1_images_container_format, anon_1.images_size AS anon_1_images_size, anon_1.images_virtual_size AS anon_1_images_virtual_size, anon_1.images_status AS anon_1_images_status, anon_1.images_is_public AS anon_1_images_is_public, anon_1.images_checksum AS anon_1_images_checksum, anon_1.images_min_disk AS anon_1_images_min_disk, anon_1.images_min_ram AS anon_1_images_min_ram, anon_1.images_owner AS anon_1_images_owner, anon_1.images_protected AS anon_1_images_protected, image_tags_1.created_at AS image_tags_1_created_at, image_tags_1.updated_at AS image_tags_1_updated_at, image_tags_1.deleted_at AS image_tags_1_deleted_at, image_tags_1.deleted AS image_tags_1_deleted, image_tags_1.id AS image_tags_1_id, image_tags_1.image_id AS image_tags_1_image_id, image_tags_1.value AS image_tags_1_value, image_locations_1.created_at AS image_locations_1_created_at, image_locations_1.updated_at AS image_locations_1_updated_at, image_locations_1.deleted_at AS image_locations_1_deleted_at, image_locations_1.deleted AS image_locations_1_deleted, image_locations_1.id AS image_locations_1_id, image_locations_1.image_id AS image_locations_1_image_id, image_locations_1.value AS image_locations_1_value, image_locations_1.meta_data AS image_locations_1_meta_data, image_locations_1.status AS image_locations_1_status, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value\nFROM (SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.virtual_size AS images_virtual_size, images.status AS images_status, images.is_public AS images_is_public, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected\nFROM images\nWHERE images.deleted = false AND images.status IN ('active', 'saving', 'queued', 'pending_delete', 'deleted', 'deactivated') AND (CASE WHEN (images.created_at IS NOT NULL) THEN images.created_at END < '2016-11-28 17:25:32' OR CASE WHEN (images.created_at IS NOT NULL) THEN images.created_at END = '2016-11-28 17:25:32' AND CASE WHEN (images.id IS NOT NULL) THEN images.id ELSE '' END < 'cee91088-04a9-4fdf-b2af-a5f2f0889056') ORDER BY images.created_at DESC, images.id DESC\nLIMIT 200) AS anon_1 LEFT OUTER JOIN image_tags AS image_tags_1 ON anon_1.images_id = image_tags_1.image_id LEFT OUTER JOIN image_locations AS image_locations_1 ON anon_1.images_id = image_locations_1.image_id LEFT OUTER JOIN image_properties AS image_properties_1 ON anon_1.images_id = image_properties_1.image_id ORDER BY anon_1.images_created_at DESC, anon_1.images_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the images, including created at, updated at, deleted at, deleted status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status for the active images in the OpenStack database, ordered by created date and ID?\n",
            "Can you list the image tags, image locations, and image properties associated with the active images in the OpenStack database, sorted by the created date and ID of the images they are linked to?\n",
            "Which images in the OpenStack database have not been deleted, and their status is either 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', along with their corresponding image tags, locations, and properties, ordered by the creation date and ID of the images?\n",
            "Provide the details of the images, such as created at, updated at, deleted at, deleted status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status for the most recent 200 active images in the OpenStack database, including their associated tags, locations, and properties, sorted by the creation date and ID of the images."
        ],
        "question": "",
        "sql": "SELECT anon_1.images_created_at AS anon_1_images_created_at, anon_1.images_updated_at AS anon_1_images_updated_at, anon_1.images_deleted_at AS anon_1_images_deleted_at, anon_1.images_deleted AS anon_1_images_deleted, anon_1.images_id AS anon_1_images_id, anon_1.images_name AS anon_1_images_name, anon_1.images_disk_format AS anon_1_images_disk_format, anon_1.images_container_format AS anon_1_images_container_format, anon_1.images_size AS anon_1_images_size, anon_1.images_virtual_size AS anon_1_images_virtual_size, anon_1.images_status AS anon_1_images_status, anon_1.images_is_public AS anon_1_images_is_public, anon_1.images_checksum AS anon_1_images_checksum, anon_1.images_min_disk AS anon_1_images_min_disk, anon_1.images_min_ram AS anon_1_images_min_ram, anon_1.images_owner AS anon_1_images_owner, anon_1.images_protected AS anon_1_images_protected, image_tags_1.created_at AS image_tags_1_created_at, image_tags_1.updated_at AS image_tags_1_updated_at, image_tags_1.deleted_at AS image_tags_1_deleted_at, image_tags_1.deleted AS image_tags_1_deleted, image_tags_1.id AS image_tags_1_id, image_tags_1.image_id AS image_tags_1_image_id, image_tags_1.value AS image_tags_1_value, image_locations_1.created_at AS image_locations_1_created_at, image_locations_1.updated_at AS image_locations_1_updated_at, image_locations_1.deleted_at AS image_locations_1_deleted_at, image_locations_1.deleted AS image_locations_1_deleted, image_locations_1.id AS image_locations_1_id, image_locations_1.image_id AS image_locations_1_image_id, image_locations_1.value AS image_locations_1_value, image_locations_1.meta_data AS image_locations_1_meta_data, image_locations_1.status AS image_locations_1_status, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value\nFROM (SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.virtual_size AS images_virtual_size, images.status AS images_status, images.is_public AS images_is_public, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected\nFROM images\nWHERE images.deleted = false AND images.status IN ('active', 'saving', 'queued', 'pending_delete', 'deleted', 'deactivated') ORDER BY images.created_at DESC, images.id DESC\nLIMIT 200) AS anon_1 LEFT OUTER JOIN image_tags AS image_tags_1 ON anon_1.images_id = image_tags_1.image_id LEFT OUTER JOIN image_locations AS image_locations_1 ON anon_1.images_id = image_locations_1.image_id LEFT OUTER JOIN image_properties AS image_properties_1 ON anon_1.images_id = image_properties_1.image_id ORDER BY anon_1.images_created_at DESC, anon_1.images_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the images in the OpenStack database that are not deleted, have a status of 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', are public, were created before '2022-06-06 17:12:44', and have an ID less than 'f964c0ae-58d1-49e5-8f2a-67902b86a99c'? \n",
            "Can you list the created date, updated date, deleted date, deletion status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status of the images meeting the specified criteria, ordered by created date and ID in descending order?\n",
            "What are the tags, locations, and properties associated with the images that meet the specified criteria in the OpenStack database?\n",
            "How are the image tags, locations, and properties related to the images that satisfy the conditions specified in the query, ordered by the created date and ID of the images in descending order?"
        ],
        "question": "",
        "sql": "SELECT anon_1.images_created_at AS anon_1_images_created_at, anon_1.images_updated_at AS anon_1_images_updated_at, anon_1.images_deleted_at AS anon_1_images_deleted_at, anon_1.images_deleted AS anon_1_images_deleted, anon_1.images_id AS anon_1_images_id, anon_1.images_name AS anon_1_images_name, anon_1.images_disk_format AS anon_1_images_disk_format, anon_1.images_container_format AS anon_1_images_container_format, anon_1.images_size AS anon_1_images_size, anon_1.images_virtual_size AS anon_1_images_virtual_size, anon_1.images_status AS anon_1_images_status, anon_1.images_is_public AS anon_1_images_is_public, anon_1.images_checksum AS anon_1_images_checksum, anon_1.images_min_disk AS anon_1_images_min_disk, anon_1.images_min_ram AS anon_1_images_min_ram, anon_1.images_owner AS anon_1_images_owner, anon_1.images_protected AS anon_1_images_protected, image_tags_1.created_at AS image_tags_1_created_at, image_tags_1.updated_at AS image_tags_1_updated_at, image_tags_1.deleted_at AS image_tags_1_deleted_at, image_tags_1.deleted AS image_tags_1_deleted, image_tags_1.id AS image_tags_1_id, image_tags_1.image_id AS image_tags_1_image_id, image_tags_1.value AS image_tags_1_value, image_locations_1.created_at AS image_locations_1_created_at, image_locations_1.updated_at AS image_locations_1_updated_at, image_locations_1.deleted_at AS image_locations_1_deleted_at, image_locations_1.deleted AS image_locations_1_deleted, image_locations_1.id AS image_locations_1_id, image_locations_1.image_id AS image_locations_1_image_id, image_locations_1.value AS image_locations_1_value, image_locations_1.meta_data AS image_locations_1_meta_data, image_locations_1.status AS image_locations_1_status, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value\nFROM (SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.virtual_size AS images_virtual_size, images.status AS images_status, images.is_public AS images_is_public, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected\nFROM images\nWHERE images.deleted = false AND images.status IN ('active', 'saving', 'queued', 'pending_delete', 'deleted', 'deactivated') AND images.is_public = true AND (CASE WHEN (images.created_at IS NOT NULL) THEN images.created_at END < '2022-06-06 17:12:44' OR CASE WHEN (images.created_at IS NOT NULL) THEN images.created_at END = '2022-06-06 17:12:44' AND CASE WHEN (images.id IS NOT NULL) THEN images.id ELSE '' END < 'f964c0ae-58d1-49e5-8f2a-67902b86a99c') ORDER BY images.created_at DESC, images.id DESC\nLIMIT 25) AS anon_1 LEFT OUTER JOIN image_tags AS image_tags_1 ON anon_1.images_id = image_tags_1.image_id LEFT OUTER JOIN image_locations AS image_locations_1 ON anon_1.images_id = image_locations_1.image_id LEFT OUTER JOIN image_properties AS image_properties_1 ON anon_1.images_id = image_properties_1.image_id ORDER BY anon_1.images_created_at DESC, anon_1.images_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the various attributes such as creation timestamp, update timestamp, deletion timestamp, user ID, project ID, image reference, and power state of instances that have not been deleted, are not in 'soft-delete' state or NULL state, and belong to the project with the ID 'bfd50153a2e9476f93e33e30e922cd06' in the OpenStack database, ordered by creation timestamp and instance ID in descending order?\n",
            "Can you list the security group details like ID, name, description, user ID, and project ID associated with instances that have not been deleted and are linked to the project with the ID 'bfd50153a2e9476f93e33e30e922cd06' in the OpenStack database?\n",
            "What information is available in the instance info caches, instance extra, and instance metadata tables for instances that have not been deleted and are part of the project with the ID 'bfd50153a2e9476f93e33e30e922cd06' in the OpenStack database?\n",
            "How are the instances sorted based on creation timestamp and instance ID in descending order, and what are the corresponding details from the security groups, instance info caches, instance extra, and instance metadata tables in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT anon_1.instances_created_at AS anon_1_instances_created_at, anon_1.instances_updated_at AS anon_1_instances_updated_at, anon_1.instances_deleted_at AS anon_1_instances_deleted_at, anon_1.instances_deleted AS anon_1_instances_deleted, anon_1.instances_id AS anon_1_instances_id, anon_1.instances_user_id AS anon_1_instances_user_id, anon_1.instances_project_id AS anon_1_instances_project_id, anon_1.instances_image_ref AS anon_1_instances_image_ref, anon_1.instances_kernel_id AS anon_1_instances_kernel_id, anon_1.instances_ramdisk_id AS anon_1_instances_ramdisk_id, anon_1.instances_hostname AS anon_1_instances_hostname, anon_1.instances_launch_index AS anon_1_instances_launch_index, anon_1.instances_key_name AS anon_1_instances_key_name, anon_1.instances_key_data AS anon_1_instances_key_data, anon_1.instances_power_state AS anon_1_instances_power_state, anon_1.instances_vm_state AS anon_1_instances_vm_state, anon_1.instances_task_state AS anon_1_instances_task_state, anon_1.instances_memory_mb AS anon_1_instances_memory_mb, anon_1.instances_vcpus AS anon_1_instances_vcpus, anon_1.instances_root_gb AS anon_1_instances_root_gb, anon_1.instances_ephemeral_gb AS anon_1_instances_ephemeral_gb, anon_1.instances_ephemeral_key_uuid AS anon_1_instances_ephemeral_key_uuid, anon_1.instances_host AS anon_1_instances_host, anon_1.instances_node AS anon_1_instances_node, anon_1.instances_instance_type_id AS anon_1_instances_instance_type_id, anon_1.instances_user_data AS anon_1_instances_user_data, anon_1.instances_reservation_id AS anon_1_instances_reservation_id, anon_1.instances_launched_at AS anon_1_instances_launched_at, anon_1.instances_terminated_at AS anon_1_instances_terminated_at, anon_1.instances_availability_zone AS anon_1_instances_availability_zone, anon_1.instances_display_name AS anon_1_instances_display_name, anon_1.instances_display_description AS anon_1_instances_display_description, anon_1.instances_launched_on AS anon_1_instances_launched_on, anon_1.instances_locked AS anon_1_instances_locked, anon_1.instances_locked_by AS anon_1_instances_locked_by, anon_1.instances_os_type AS anon_1_instances_os_type, anon_1.instances_architecture AS anon_1_instances_architecture, anon_1.instances_vm_mode AS anon_1_instances_vm_mode, anon_1.instances_uuid AS anon_1_instances_uuid, anon_1.instances_root_device_name AS anon_1_instances_root_device_name, anon_1.instances_default_ephemeral_device AS anon_1_instances_default_ephemeral_device, anon_1.instances_default_swap_device AS anon_1_instances_default_swap_device, anon_1.instances_config_drive AS anon_1_instances_config_drive, anon_1.instances_access_ip_v4 AS anon_1_instances_access_ip_v4, anon_1.instances_access_ip_v6 AS anon_1_instances_access_ip_v6, anon_1.instances_auto_disk_config AS anon_1_instances_auto_disk_config, anon_1.instances_progress AS anon_1_instances_progress, anon_1.instances_shutdown_terminate AS anon_1_instances_shutdown_terminate, anon_1.instances_disable_terminate AS anon_1_instances_disable_terminate, anon_1.instances_cell_name AS anon_1_instances_cell_name, anon_1.instances_internal_id AS anon_1_instances_internal_id, anon_1.instances_cleaned AS anon_1_instances_cleaned, security_groups_1.created_at AS security_groups_1_created_at, security_groups_1.updated_at AS security_groups_1_updated_at, security_groups_1.deleted_at AS security_groups_1_deleted_at, security_groups_1.deleted AS security_groups_1_deleted, security_groups_1.id AS security_groups_1_id, security_groups_1.name AS security_groups_1_name, security_groups_1.description AS security_groups_1_description, security_groups_1.user_id AS security_groups_1_user_id, security_groups_1.project_id AS security_groups_1_project_id, instance_info_caches_1.created_at AS instance_info_caches_1_created_at, instance_info_caches_1.updated_at AS instance_info_caches_1_updated_at, instance_info_caches_1.deleted_at AS instance_info_caches_1_deleted_at, instance_info_caches_1.deleted AS instance_info_caches_1_deleted, instance_info_caches_1.id AS instance_info_caches_1_id, instance_info_caches_1.network_info AS instance_info_caches_1_network_info, instance_info_caches_1.instance_uuid AS instance_info_caches_1_instance_uuid, instance_extra_1.flavor AS instance_extra_1_flavor, instance_extra_1.created_at AS instance_extra_1_created_at, instance_extra_1.updated_at AS instance_extra_1_updated_at, instance_extra_1.deleted_at AS instance_extra_1_deleted_at, instance_extra_1.deleted AS instance_extra_1_deleted, instance_extra_1.id AS instance_extra_1_id, instance_extra_1.instance_uuid AS instance_extra_1_instance_uuid, instance_metadata_1.created_at AS instance_metadata_1_created_at, instance_metadata_1.updated_at AS instance_metadata_1_updated_at, instance_metadata_1.deleted_at AS instance_metadata_1_deleted_at, instance_metadata_1.deleted AS instance_metadata_1_deleted, instance_metadata_1.id AS instance_metadata_1_id, instance_metadata_1.`key` AS instance_metadata_1_key, instance_metadata_1.value AS instance_metadata_1_value, instance_metadata_1.instance_uuid AS instance_metadata_1_instance_uuid\nFROM (SELECT instances.created_at AS instances_created_at, instances.updated_at AS instances_updated_at, instances.deleted_at AS instances_deleted_at, instances.deleted AS instances_deleted, instances.id AS instances_id, instances.user_id AS instances_user_id, instances.project_id AS instances_project_id, instances.image_ref AS instances_image_ref, instances.kernel_id AS instances_kernel_id, instances.ramdisk_id AS instances_ramdisk_id, instances.hostname AS instances_hostname, instances.launch_index AS instances_launch_index, instances.key_name AS instances_key_name, instances.key_data AS instances_key_data, instances.power_state AS instances_power_state, instances.vm_state AS instances_vm_state, instances.task_state AS instances_task_state, instances.memory_mb AS instances_memory_mb, instances.vcpus AS instances_vcpus, instances.root_gb AS instances_root_gb, instances.ephemeral_gb AS instances_ephemeral_gb, instances.ephemeral_key_uuid AS instances_ephemeral_key_uuid, instances.host AS instances_host, instances.node AS instances_node, instances.instance_type_id AS instances_instance_type_id, instances.user_data AS instances_user_data, instances.reservation_id AS instances_reservation_id, instances.launched_at AS instances_launched_at, instances.terminated_at AS instances_terminated_at, instances.availability_zone AS instances_availability_zone, instances.display_name AS instances_display_name, instances.display_description AS instances_display_description, instances.launched_on AS instances_launched_on, instances.locked AS instances_locked, instances.locked_by AS instances_locked_by, instances.os_type AS instances_os_type, instances.architecture AS instances_architecture, instances.vm_mode AS instances_vm_mode, instances.uuid AS instances_uuid, instances.root_device_name AS instances_root_device_name, instances.default_ephemeral_device AS instances_default_ephemeral_device, instances.default_swap_device AS instances_default_swap_device, instances.config_drive AS instances_config_drive, instances.access_ip_v4 AS instances_access_ip_v4, instances.access_ip_v6 AS instances_access_ip_v6, instances.auto_disk_config AS instances_auto_disk_config, instances.progress AS instances_progress, instances.shutdown_terminate AS instances_shutdown_terminate, instances.disable_terminate AS instances_disable_terminate, instances.cell_name AS instances_cell_name, instances.internal_id AS instances_internal_id, instances.cleaned AS instances_cleaned\nFROM instances\nWHERE instances.deleted = 0 AND (instances.vm_state != 'soft-delete' OR instances.vm_state IS NULL) AND instances.project_id = 'bfd50153a2e9476f93e33e30e922cd06' ORDER BY instances.created_at DESC, instances.id DESC\nLIMIT 3000) AS anon_1 LEFT OUTER JOIN (security_group_instance_association AS security_group_instance_association_1 INNER JOIN security_groups AS security_groups_1 ON security_groups_1.id = security_group_instance_association_1.security_group_id AND security_group_instance_association_1.deleted = 0 AND security_groups_1.deleted = 0) ON security_group_instance_association_1.instance_uuid = anon_1.instances_uuid AND anon_1.instances_deleted = 0 LEFT OUTER JOIN instance_info_caches AS instance_info_caches_1 ON instance_info_caches_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_extra AS instance_extra_1 ON instance_extra_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_metadata AS instance_metadata_1 ON instance_metadata_1.instance_uuid = anon_1.instances_uuid AND instance_metadata_1.deleted = 0 ORDER BY anon_1.instances_created_at DESC, anon_1.instances_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the instances' creation timestamp, update timestamp, deletion timestamp, deletion status, ID, user ID, project ID, image reference, kernel ID, and RAM disk ID for the instance with the UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database?\n",
            "Can you list the security group's creation timestamp, update timestamp, deletion timestamp, deletion status, ID, name, and description associated with the instance having the UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database?\n",
            "What is the system metadata key, value, and instance UUID for the instance with the UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database?\n",
            "Provide the PCI device's creation timestamp, update timestamp, deletion timestamp, deletion status, ID, compute node ID, address, vendor ID, product ID, device type, device ID, label, status, request ID, extra information, and NUMA node associated with the instance UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT anon_1.instances_created_at AS anon_1_instances_created_at, anon_1.instances_updated_at AS anon_1_instances_updated_at, anon_1.instances_deleted_at AS anon_1_instances_deleted_at, anon_1.instances_deleted AS anon_1_instances_deleted, anon_1.instances_id AS anon_1_instances_id, anon_1.instances_user_id AS anon_1_instances_user_id, anon_1.instances_project_id AS anon_1_instances_project_id, anon_1.instances_image_ref AS anon_1_instances_image_ref, anon_1.instances_kernel_id AS anon_1_instances_kernel_id, anon_1.instances_ramdisk_id AS anon_1_instances_ramdisk_id, anon_1.instances_hostname AS anon_1_instances_hostname, anon_1.instances_launch_index AS anon_1_instances_launch_index, anon_1.instances_key_name AS anon_1_instances_key_name, anon_1.instances_key_data AS anon_1_instances_key_data, anon_1.instances_power_state AS anon_1_instances_power_state, anon_1.instances_vm_state AS anon_1_instances_vm_state, anon_1.instances_task_state AS anon_1_instances_task_state, anon_1.instances_memory_mb AS anon_1_instances_memory_mb, anon_1.instances_vcpus AS anon_1_instances_vcpus, anon_1.instances_root_gb AS anon_1_instances_root_gb, anon_1.instances_ephemeral_gb AS anon_1_instances_ephemeral_gb, anon_1.instances_ephemeral_key_uuid AS anon_1_instances_ephemeral_key_uuid, anon_1.instances_host AS anon_1_instances_host, anon_1.instances_node AS anon_1_instances_node, anon_1.instances_instance_type_id AS anon_1_instances_instance_type_id, anon_1.instances_user_data AS anon_1_instances_user_data, anon_1.instances_reservation_id AS anon_1_instances_reservation_id, anon_1.instances_launched_at AS anon_1_instances_launched_at, anon_1.instances_terminated_at AS anon_1_instances_terminated_at, anon_1.instances_availability_zone AS anon_1_instances_availability_zone, anon_1.instances_display_name AS anon_1_instances_display_name, anon_1.instances_display_description AS anon_1_instances_display_description, anon_1.instances_launched_on AS anon_1_instances_launched_on, anon_1.instances_locked AS anon_1_instances_locked, anon_1.instances_locked_by AS anon_1_instances_locked_by, anon_1.instances_os_type AS anon_1_instances_os_type, anon_1.instances_architecture AS anon_1_instances_architecture, anon_1.instances_vm_mode AS anon_1_instances_vm_mode, anon_1.instances_uuid AS anon_1_instances_uuid, anon_1.instances_root_device_name AS anon_1_instances_root_device_name, anon_1.instances_default_ephemeral_device AS anon_1_instances_default_ephemeral_device, anon_1.instances_default_swap_device AS anon_1_instances_default_swap_device, anon_1.instances_config_drive AS anon_1_instances_config_drive, anon_1.instances_access_ip_v4 AS anon_1_instances_access_ip_v4, anon_1.instances_access_ip_v6 AS anon_1_instances_access_ip_v6, anon_1.instances_auto_disk_config AS anon_1_instances_auto_disk_config, anon_1.instances_progress AS anon_1_instances_progress, anon_1.instances_shutdown_terminate AS anon_1_instances_shutdown_terminate, anon_1.instances_disable_terminate AS anon_1_instances_disable_terminate, anon_1.instances_cell_name AS anon_1_instances_cell_name, anon_1.instances_internal_id AS anon_1_instances_internal_id, anon_1.instances_cleaned AS anon_1_instances_cleaned, security_groups_1.created_at AS security_groups_1_created_at, security_groups_1.updated_at AS security_groups_1_updated_at, security_groups_1.deleted_at AS security_groups_1_deleted_at, security_groups_1.deleted AS security_groups_1_deleted, security_groups_1.id AS security_groups_1_id, security_groups_1.name AS security_groups_1_name, security_groups_1.description AS security_groups_1_description, security_groups_1.user_id AS security_groups_1_user_id, security_groups_1.project_id AS security_groups_1_project_id, security_group_rules_1.created_at AS security_group_rules_1_created_at, security_group_rules_1.updated_at AS security_group_rules_1_updated_at, security_group_rules_1.deleted_at AS security_group_rules_1_deleted_at, security_group_rules_1.deleted AS security_group_rules_1_deleted, security_group_rules_1.id AS security_group_rules_1_id, security_group_rules_1.parent_group_id AS security_group_rules_1_parent_group_id, security_group_rules_1.protocol AS security_group_rules_1_protocol, security_group_rules_1.from_port AS security_group_rules_1_from_port, security_group_rules_1.to_port AS security_group_rules_1_to_port, security_group_rules_1.cidr AS security_group_rules_1_cidr, security_group_rules_1.group_id AS security_group_rules_1_group_id, instance_system_metadata_1.created_at AS instance_system_metadata_1_created_at, instance_system_metadata_1.updated_at AS instance_system_metadata_1_updated_at, instance_system_metadata_1.deleted_at AS instance_system_metadata_1_deleted_at, instance_system_metadata_1.deleted AS instance_system_metadata_1_deleted, instance_system_metadata_1.id AS instance_system_metadata_1_id, instance_system_metadata_1.`key` AS instance_system_metadata_1_key, instance_system_metadata_1.value AS instance_system_metadata_1_value, instance_system_metadata_1.instance_uuid AS instance_system_metadata_1_instance_uuid, instance_info_caches_1.created_at AS instance_info_caches_1_created_at, instance_info_caches_1.updated_at AS instance_info_caches_1_updated_at, instance_info_caches_1.deleted_at AS instance_info_caches_1_deleted_at, instance_info_caches_1.deleted AS instance_info_caches_1_deleted, instance_info_caches_1.id AS instance_info_caches_1_id, instance_info_caches_1.network_info AS instance_info_caches_1_network_info, instance_info_caches_1.instance_uuid AS instance_info_caches_1_instance_uuid, instance_extra_1.numa_topology AS instance_extra_1_numa_topology, instance_extra_1.flavor AS instance_extra_1_flavor, instance_extra_1.created_at AS instance_extra_1_created_at, instance_extra_1.updated_at AS instance_extra_1_updated_at, instance_extra_1.deleted_at AS instance_extra_1_deleted_at, instance_extra_1.deleted AS instance_extra_1_deleted, instance_extra_1.id AS instance_extra_1_id, instance_extra_1.instance_uuid AS instance_extra_1_instance_uuid, instance_metadata_1.created_at AS instance_metadata_1_created_at, instance_metadata_1.updated_at AS instance_metadata_1_updated_at, instance_metadata_1.deleted_at AS instance_metadata_1_deleted_at, instance_metadata_1.deleted AS instance_metadata_1_deleted, instance_metadata_1.id AS instance_metadata_1_id, instance_metadata_1.`key` AS instance_metadata_1_key, instance_metadata_1.value AS instance_metadata_1_value, instance_metadata_1.instance_uuid AS instance_metadata_1_instance_uuid, pci_devices_1.created_at AS pci_devices_1_created_at, pci_devices_1.updated_at AS pci_devices_1_updated_at, pci_devices_1.deleted_at AS pci_devices_1_deleted_at, pci_devices_1.deleted AS pci_devices_1_deleted, pci_devices_1.id AS pci_devices_1_id, pci_devices_1.compute_node_id AS pci_devices_1_compute_node_id, pci_devices_1.address AS pci_devices_1_address, pci_devices_1.vendor_id AS pci_devices_1_vendor_id, pci_devices_1.product_id AS pci_devices_1_product_id, pci_devices_1.dev_type AS pci_devices_1_dev_type, pci_devices_1.dev_id AS pci_devices_1_dev_id, pci_devices_1.label AS pci_devices_1_label, pci_devices_1.status AS pci_devices_1_status, pci_devices_1.request_id AS pci_devices_1_request_id, pci_devices_1.extra_info AS pci_devices_1_extra_info, pci_devices_1.instance_uuid AS pci_devices_1_instance_uuid, pci_devices_1.numa_node AS pci_devices_1_numa_node, pci_devices_1.parent_addr AS pci_devices_1_parent_addr\nFROM (SELECT instances.created_at AS instances_created_at, instances.updated_at AS instances_updated_at, instances.deleted_at AS instances_deleted_at, instances.deleted AS instances_deleted, instances.id AS instances_id, instances.user_id AS instances_user_id, instances.project_id AS instances_project_id, instances.image_ref AS instances_image_ref, instances.kernel_id AS instances_kernel_id, instances.ramdisk_id AS instances_ramdisk_id, instances.hostname AS instances_hostname, instances.launch_index AS instances_launch_index, instances.key_name AS instances_key_name, instances.key_data AS instances_key_data, instances.power_state AS instances_power_state, instances.vm_state AS instances_vm_state, instances.task_state AS instances_task_state, instances.memory_mb AS instances_memory_mb, instances.vcpus AS instances_vcpus, instances.root_gb AS instances_root_gb, instances.ephemeral_gb AS instances_ephemeral_gb, instances.ephemeral_key_uuid AS instances_ephemeral_key_uuid, instances.host AS instances_host, instances.node AS instances_node, instances.instance_type_id AS instances_instance_type_id, instances.user_data AS instances_user_data, instances.reservation_id AS instances_reservation_id, instances.launched_at AS instances_launched_at, instances.terminated_at AS instances_terminated_at, instances.availability_zone AS instances_availability_zone, instances.display_name AS instances_display_name, instances.display_description AS instances_display_description, instances.launched_on AS instances_launched_on, instances.locked AS instances_locked, instances.locked_by AS instances_locked_by, instances.os_type AS instances_os_type, instances.architecture AS instances_architecture, instances.vm_mode AS instances_vm_mode, instances.uuid AS instances_uuid, instances.root_device_name AS instances_root_device_name, instances.default_ephemeral_device AS instances_default_ephemeral_device, instances.default_swap_device AS instances_default_swap_device, instances.config_drive AS instances_config_drive, instances.access_ip_v4 AS instances_access_ip_v4, instances.access_ip_v6 AS instances_access_ip_v6, instances.auto_disk_config AS instances_auto_disk_config, instances.progress AS instances_progress, instances.shutdown_terminate AS instances_shutdown_terminate, instances.disable_terminate AS instances_disable_terminate, instances.cell_name AS instances_cell_name, instances.internal_id AS instances_internal_id, instances.cleaned AS instances_cleaned\nFROM instances\nWHERE instances.deleted = 0 AND instances.project_id = 'bfd50153a2e9476f93e33e30e922cd06' AND instances.uuid = 'd052d786-9b26-4439-ae6b-32a0505fdc12'\nLIMIT 1) AS anon_1 LEFT OUTER JOIN (security_group_instance_association AS security_group_instance_association_1 INNER JOIN security_groups AS security_groups_1 ON security_groups_1.id = security_group_instance_association_1.security_group_id AND security_group_instance_association_1.deleted = 0 AND security_groups_1.deleted = 0) ON security_group_instance_association_1.instance_uuid = anon_1.instances_uuid AND anon_1.instances_deleted = 0 LEFT OUTER JOIN security_group_rules AS security_group_rules_1 ON security_group_rules_1.parent_group_id = security_groups_1.id AND security_group_rules_1.deleted = 0 LEFT OUTER JOIN instance_system_metadata AS instance_system_metadata_1 ON anon_1.instances_uuid = instance_system_metadata_1.instance_uuid LEFT OUTER JOIN instance_info_caches AS instance_info_caches_1 ON instance_info_caches_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_extra AS instance_extra_1 ON instance_extra_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_metadata AS instance_metadata_1 ON instance_metadata_1.instance_uuid = anon_1.instances_uuid AND instance_metadata_1.deleted = 0 LEFT OUTER JOIN pci_devices AS pci_devices_1 ON pci_devices_1.instance_uuid = anon_1.instances_uuid AND pci_devices_1.deleted = 0"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the created at, updated at, deleted at, deleted, ID, name, memory in MB, vCPUs, root disk size in GB, ephemeral disk size in GB, flavor ID, swap size, RX/TX factor, vCPU weight, disabled status, and public status of instance types that are not deleted, not disabled, and either public or associated with a specific project in the OpenStack database, ordered by flavor ID and ID?\n",
            "Can you list the created at, updated at, deleted at, deleted status, ID, name, memory in MB, vCPUs, root disk size in GB, ephemeral disk size in GB, flavor ID, swap size, RX/TX factor, vCPU weight, disabled status, and public status of up to 3000 instance types that are not deleted, not disabled, and either public or associated with a specific project in the OpenStack database, ordered by flavor ID and ID?\n",
            "What are the created at, updated at, deleted at, deleted status, ID, key, and value of extra specifications for instance types that are not deleted and are associated with the instance types retrieved in the previous query from the OpenStack database, ordered by flavor ID and ID?\n",
            "Provide the created at, updated at, deleted at, deleted status, ID, key, and value of extra specifications for instance types that are not deleted and are associated with the instance types retrieved in the previous query from the OpenStack database, ordered by flavor ID and ID."
        ],
        "question": "",
        "sql": "SELECT anon_1.instance_types_created_at AS anon_1_instance_types_created_at, anon_1.instance_types_updated_at AS anon_1_instance_types_updated_at, anon_1.instance_types_deleted_at AS anon_1_instance_types_deleted_at, anon_1.instance_types_deleted AS anon_1_instance_types_deleted, anon_1.instance_types_id AS anon_1_instance_types_id, anon_1.instance_types_name AS anon_1_instance_types_name, anon_1.instance_types_memory_mb AS anon_1_instance_types_memory_mb, anon_1.instance_types_vcpus AS anon_1_instance_types_vcpus, anon_1.instance_types_root_gb AS anon_1_instance_types_root_gb, anon_1.instance_types_ephemeral_gb AS anon_1_instance_types_ephemeral_gb, anon_1.instance_types_flavorid AS anon_1_instance_types_flavorid, anon_1.instance_types_swap AS anon_1_instance_types_swap, anon_1.instance_types_rxtx_factor AS anon_1_instance_types_rxtx_factor, anon_1.instance_types_vcpu_weight AS anon_1_instance_types_vcpu_weight, anon_1.instance_types_disabled AS anon_1_instance_types_disabled, anon_1.instance_types_is_public AS anon_1_instance_types_is_public, instance_type_extra_specs_1.created_at AS instance_type_extra_specs_1_created_at, instance_type_extra_specs_1.updated_at AS instance_type_extra_specs_1_updated_at, instance_type_extra_specs_1.deleted_at AS instance_type_extra_specs_1_deleted_at, instance_type_extra_specs_1.deleted AS instance_type_extra_specs_1_deleted, instance_type_extra_specs_1.id AS instance_type_extra_specs_1_id, instance_type_extra_specs_1.`key` AS instance_type_extra_specs_1_key, instance_type_extra_specs_1.value AS instance_type_extra_specs_1_value, instance_type_extra_specs_1.instance_type_id AS instance_type_extra_specs_1_instance_type_id\nFROM (SELECT instance_types.created_at AS instance_types_created_at, instance_types.updated_at AS instance_types_updated_at, instance_types.deleted_at AS instance_types_deleted_at, instance_types.deleted AS instance_types_deleted, instance_types.id AS instance_types_id, instance_types.name AS instance_types_name, instance_types.memory_mb AS instance_types_memory_mb, instance_types.vcpus AS instance_types_vcpus, instance_types.root_gb AS instance_types_root_gb, instance_types.ephemeral_gb AS instance_types_ephemeral_gb, instance_types.flavorid AS instance_types_flavorid, instance_types.swap AS instance_types_swap, instance_types.rxtx_factor AS instance_types_rxtx_factor, instance_types.vcpu_weight AS instance_types_vcpu_weight, instance_types.disabled AS instance_types_disabled, instance_types.is_public AS instance_types_is_public\nFROM instance_types\nWHERE instance_types.deleted = 0 AND (instance_types.is_public = true OR (EXISTS (SELECT 1\nFROM instance_type_projects\nWHERE instance_type_projects.instance_type_id = instance_types.id AND instance_type_projects.deleted = 0 AND instance_type_projects.project_id = 'bfd50153a2e9476f93e33e30e922cd06'))) AND instance_types.disabled = false AND (instance_types.is_public = true OR (EXISTS (SELECT 1\nFROM instance_type_projects\nWHERE instance_type_projects.instance_type_id = instance_types.id AND instance_type_projects.deleted = 0 AND instance_type_projects.deleted = 0 AND instance_type_projects.project_id = 'bfd50153a2e9476f93e33e30e922cd06'))) ORDER BY instance_types.flavorid ASC, instance_types.id ASC\nLIMIT 3000) AS anon_1 LEFT OUTER JOIN instance_type_extra_specs AS instance_type_extra_specs_1 ON instance_type_extra_specs_1.instance_type_id = anon_1.instance_types_id AND instance_type_extra_specs_1.deleted = 0 ORDER BY anon_1.instance_types_flavorid ASC, anon_1.instance_types_id ASC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the created at, updated at, deleted at, deleted status, ID, UUID, and name of the aggregate with the ID 'default' in the OpenStack database, along with its associated hosts and metadata?\n",
            "Can you list the host, ID, and aggregate ID of the hosts associated with the aggregate named 'default' that are not deleted in the OpenStack database?\n",
            "What are the key, value, ID, and aggregate ID of the metadata associated with the aggregate named 'default' that are not deleted in the OpenStack database?\n",
            "How are the aggregates, aggregate hosts, and aggregate metadata tables joined in the OpenStack database for the aggregate with the ID 'default' that is not deleted?"
        ],
        "question": "",
        "sql": "SELECT anon_1.aggregates_created_at AS anon_1_aggregates_created_at, anon_1.aggregates_updated_at AS anon_1_aggregates_updated_at, anon_1.aggregates_deleted_at AS anon_1_aggregates_deleted_at, anon_1.aggregates_deleted AS anon_1_aggregates_deleted, anon_1.aggregates_id AS anon_1_aggregates_id, anon_1.aggregates_uuid AS anon_1_aggregates_uuid, anon_1.aggregates_name AS anon_1_aggregates_name, aggregate_hosts_1.created_at AS aggregate_hosts_1_created_at, aggregate_hosts_1.updated_at AS aggregate_hosts_1_updated_at, aggregate_hosts_1.deleted_at AS aggregate_hosts_1_deleted_at, aggregate_hosts_1.deleted AS aggregate_hosts_1_deleted, aggregate_hosts_1.id AS aggregate_hosts_1_id, aggregate_hosts_1.host AS aggregate_hosts_1_host, aggregate_hosts_1.aggregate_id AS aggregate_hosts_1_aggregate_id, aggregate_metadata_1.created_at AS aggregate_metadata_1_created_at, aggregate_metadata_1.updated_at AS aggregate_metadata_1_updated_at, aggregate_metadata_1.deleted_at AS aggregate_metadata_1_deleted_at, aggregate_metadata_1.deleted AS aggregate_metadata_1_deleted, aggregate_metadata_1.id AS aggregate_metadata_1_id, aggregate_metadata_1.`key` AS aggregate_metadata_1_key, aggregate_metadata_1.value AS aggregate_metadata_1_value, aggregate_metadata_1.aggregate_id AS aggregate_metadata_1_aggregate_id\nFROM (SELECT aggregates.created_at AS aggregates_created_at, aggregates.updated_at AS aggregates_updated_at, aggregates.deleted_at AS aggregates_deleted_at, aggregates.deleted AS aggregates_deleted, aggregates.id AS aggregates_id, aggregates.uuid AS aggregates_uuid, aggregates.name AS aggregates_name\nFROM aggregates\nWHERE aggregates.deleted = 0 AND aggregates.id = 'default'\nLIMIT 1) AS anon_1 LEFT OUTER JOIN aggregate_hosts AS aggregate_hosts_1 ON anon_1.aggregates_id = aggregate_hosts_1.aggregate_id AND aggregate_hosts_1.deleted = 0 AND anon_1.aggregates_deleted = 0 LEFT OUTER JOIN aggregate_metadata AS aggregate_metadata_1 ON anon_1.aggregates_id = aggregate_metadata_1.aggregate_id AND aggregate_metadata_1.deleted = 0 AND anon_1.aggregates_deleted = 0"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the created at, updated at, deleted at, deleted, ID, name, memory in MB, vCPUs, root disk size in GB, ephemeral disk size in GB, flavor ID, swap size, RX/TX factor, vCPU weight, disabled status, and public status of the instance types that are not deleted in the OpenStack database, ordered by flavor ID and ID, with a limit of 3000 records?\n\n",
            "Can you list the created at, updated at, deleted at, deleted status, ID, name, memory in MB, vCPUs, root disk size in GB, ephemeral disk size in GB, flavor ID, swap size, RX/TX factor, vCPU weight, disabled status, and public status of the instance types that are not deleted in the OpenStack database, along with their extra specifications, ordered by flavor ID and ID?\n\n",
            "What are the created at, updated at, deleted at, deleted status, ID, key, and value of the extra specifications for the instance types that are not deleted in the OpenStack database, where the extra specifications are not deleted, ordered by flavor ID and ID?\n\n",
            "Provide the created at, updated at, deleted at, deleted status, ID, key, and value of the extra specifications for the instance types that are not deleted in the OpenStack database, where the extra specifications are not deleted, ordered by flavor ID and ID, with a limit of 3000 records."
        ],
        "question": "",
        "sql": "SELECT anon_1.instance_types_created_at AS anon_1_instance_types_created_at, anon_1.instance_types_updated_at AS anon_1_instance_types_updated_at, anon_1.instance_types_deleted_at AS anon_1_instance_types_deleted_at, anon_1.instance_types_deleted AS anon_1_instance_types_deleted, anon_1.instance_types_id AS anon_1_instance_types_id, anon_1.instance_types_name AS anon_1_instance_types_name, anon_1.instance_types_memory_mb AS anon_1_instance_types_memory_mb, anon_1.instance_types_vcpus AS anon_1_instance_types_vcpus, anon_1.instance_types_root_gb AS anon_1_instance_types_root_gb, anon_1.instance_types_ephemeral_gb AS anon_1_instance_types_ephemeral_gb, anon_1.instance_types_flavorid AS anon_1_instance_types_flavorid, anon_1.instance_types_swap AS anon_1_instance_types_swap, anon_1.instance_types_rxtx_factor AS anon_1_instance_types_rxtx_factor, anon_1.instance_types_vcpu_weight AS anon_1_instance_types_vcpu_weight, anon_1.instance_types_disabled AS anon_1_instance_types_disabled, anon_1.instance_types_is_public AS anon_1_instance_types_is_public, instance_type_extra_specs_1.created_at AS instance_type_extra_specs_1_created_at, instance_type_extra_specs_1.updated_at AS instance_type_extra_specs_1_updated_at, instance_type_extra_specs_1.deleted_at AS instance_type_extra_specs_1_deleted_at, instance_type_extra_specs_1.deleted AS instance_type_extra_specs_1_deleted, instance_type_extra_specs_1.id AS instance_type_extra_specs_1_id, instance_type_extra_specs_1.`key` AS instance_type_extra_specs_1_key, instance_type_extra_specs_1.value AS instance_type_extra_specs_1_value, instance_type_extra_specs_1.instance_type_id AS instance_type_extra_specs_1_instance_type_id\nFROM (SELECT instance_types.created_at AS instance_types_created_at, instance_types.updated_at AS instance_types_updated_at, instance_types.deleted_at AS instance_types_deleted_at, instance_types.deleted AS instance_types_deleted, instance_types.id AS instance_types_id, instance_types.name AS instance_types_name, instance_types.memory_mb AS instance_types_memory_mb, instance_types.vcpus AS instance_types_vcpus, instance_types.root_gb AS instance_types_root_gb, instance_types.ephemeral_gb AS instance_types_ephemeral_gb, instance_types.flavorid AS instance_types_flavorid, instance_types.swap AS instance_types_swap, instance_types.rxtx_factor AS instance_types_rxtx_factor, instance_types.vcpu_weight AS instance_types_vcpu_weight, instance_types.disabled AS instance_types_disabled, instance_types.is_public AS instance_types_is_public\nFROM instance_types\nWHERE instance_types.deleted = 0 ORDER BY instance_types.flavorid ASC, instance_types.id ASC\nLIMIT 3000) AS anon_1 LEFT OUTER JOIN instance_type_extra_specs AS instance_type_extra_specs_1 ON instance_type_extra_specs_1.instance_type_id = anon_1.instance_types_id AND instance_type_extra_specs_1.deleted = 0 ORDER BY anon_1.instance_types_flavorid ASC, anon_1.instance_types_id ASC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the various attributes such as creation timestamp, update timestamp, deletion timestamp, user ID, project ID, image reference, and hostname of instances that were not deleted, had a VM state other than 'soft-delete' or NULL, belonged to the project with ID 'bfd50153a2e9476f93e33e30e922cd06', and had a display name matching 'kvas' in the OpenStack database, ordered by creation timestamp and instance ID?\n",
            "Can you list the security group details like ID, name, description, user ID, and project ID associated with instances that were not deleted, matched the specified criteria, and had a display name containing 'kvas' in the OpenStack database?\n",
            "What is the network information and instance UUID stored in the instance info caches for instances meeting the specified conditions and having a display name with 'kvas' in the OpenStack database?\n",
            "Provide the power state, VM state, task state, memory size, number of vCPUs, root disk size, ephemeral disk size, and architecture of instances that satisfied the criteria, including not being deleted, having a VM state other than 'soft-delete' or NULL, being part of the specified project, and having a display name containing 'kvas' in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT anon_1.instances_created_at AS anon_1_instances_created_at, anon_1.instances_updated_at AS anon_1_instances_updated_at, anon_1.instances_deleted_at AS anon_1_instances_deleted_at, anon_1.instances_deleted AS anon_1_instances_deleted, anon_1.instances_id AS anon_1_instances_id, anon_1.instances_user_id AS anon_1_instances_user_id, anon_1.instances_project_id AS anon_1_instances_project_id, anon_1.instances_image_ref AS anon_1_instances_image_ref, anon_1.instances_kernel_id AS anon_1_instances_kernel_id, anon_1.instances_ramdisk_id AS anon_1_instances_ramdisk_id, anon_1.instances_hostname AS anon_1_instances_hostname, anon_1.instances_launch_index AS anon_1_instances_launch_index, anon_1.instances_key_name AS anon_1_instances_key_name, anon_1.instances_key_data AS anon_1_instances_key_data, anon_1.instances_power_state AS anon_1_instances_power_state, anon_1.instances_vm_state AS anon_1_instances_vm_state, anon_1.instances_task_state AS anon_1_instances_task_state, anon_1.instances_memory_mb AS anon_1_instances_memory_mb, anon_1.instances_vcpus AS anon_1_instances_vcpus, anon_1.instances_root_gb AS anon_1_instances_root_gb, anon_1.instances_ephemeral_gb AS anon_1_instances_ephemeral_gb, anon_1.instances_ephemeral_key_uuid AS anon_1_instances_ephemeral_key_uuid, anon_1.instances_host AS anon_1_instances_host, anon_1.instances_node AS anon_1_instances_node, anon_1.instances_instance_type_id AS anon_1_instances_instance_type_id, anon_1.instances_user_data AS anon_1_instances_user_data, anon_1.instances_reservation_id AS anon_1_instances_reservation_id, anon_1.instances_launched_at AS anon_1_instances_launched_at, anon_1.instances_terminated_at AS anon_1_instances_terminated_at, anon_1.instances_availability_zone AS anon_1_instances_availability_zone, anon_1.instances_display_name AS anon_1_instances_display_name, anon_1.instances_display_description AS anon_1_instances_display_description, anon_1.instances_launched_on AS anon_1_instances_launched_on, anon_1.instances_locked AS anon_1_instances_locked, anon_1.instances_locked_by AS anon_1_instances_locked_by, anon_1.instances_os_type AS anon_1_instances_os_type, anon_1.instances_architecture AS anon_1_instances_architecture, anon_1.instances_vm_mode AS anon_1_instances_vm_mode, anon_1.instances_uuid AS anon_1_instances_uuid, anon_1.instances_root_device_name AS anon_1_instances_root_device_name, anon_1.instances_default_ephemeral_device AS anon_1_instances_default_ephemeral_device, anon_1.instances_default_swap_device AS anon_1_instances_default_swap_device, anon_1.instances_config_drive AS anon_1_instances_config_drive, anon_1.instances_access_ip_v4 AS anon_1_instances_access_ip_v4, anon_1.instances_access_ip_v6 AS anon_1_instances_access_ip_v6, anon_1.instances_auto_disk_config AS anon_1_instances_auto_disk_config, anon_1.instances_progress AS anon_1_instances_progress, anon_1.instances_shutdown_terminate AS anon_1_instances_shutdown_terminate, anon_1.instances_disable_terminate AS anon_1_instances_disable_terminate, anon_1.instances_cell_name AS anon_1_instances_cell_name, anon_1.instances_internal_id AS anon_1_instances_internal_id, anon_1.instances_cleaned AS anon_1_instances_cleaned, security_groups_1.created_at AS security_groups_1_created_at, security_groups_1.updated_at AS security_groups_1_updated_at, security_groups_1.deleted_at AS security_groups_1_deleted_at, security_groups_1.deleted AS security_groups_1_deleted, security_groups_1.id AS security_groups_1_id, security_groups_1.name AS security_groups_1_name, security_groups_1.description AS security_groups_1_description, security_groups_1.user_id AS security_groups_1_user_id, security_groups_1.project_id AS security_groups_1_project_id, instance_info_caches_1.created_at AS instance_info_caches_1_created_at, instance_info_caches_1.updated_at AS instance_info_caches_1_updated_at, instance_info_caches_1.deleted_at AS instance_info_caches_1_deleted_at, instance_info_caches_1.deleted AS instance_info_caches_1_deleted, instance_info_caches_1.id AS instance_info_caches_1_id, instance_info_caches_1.network_info AS instance_info_caches_1_network_info, instance_info_caches_1.instance_uuid AS instance_info_caches_1_instance_uuid\nFROM (SELECT instances.created_at AS instances_created_at, instances.updated_at AS instances_updated_at, instances.deleted_at AS instances_deleted_at, instances.deleted AS instances_deleted, instances.id AS instances_id, instances.user_id AS instances_user_id, instances.project_id AS instances_project_id, instances.image_ref AS instances_image_ref, instances.kernel_id AS instances_kernel_id, instances.ramdisk_id AS instances_ramdisk_id, instances.hostname AS instances_hostname, instances.launch_index AS instances_launch_index, instances.key_name AS instances_key_name, instances.key_data AS instances_key_data, instances.power_state AS instances_power_state, instances.vm_state AS instances_vm_state, instances.task_state AS instances_task_state, instances.memory_mb AS instances_memory_mb, instances.vcpus AS instances_vcpus, instances.root_gb AS instances_root_gb, instances.ephemeral_gb AS instances_ephemeral_gb, instances.ephemeral_key_uuid AS instances_ephemeral_key_uuid, instances.host AS instances_host, instances.node AS instances_node, instances.instance_type_id AS instances_instance_type_id, instances.user_data AS instances_user_data, instances.reservation_id AS instances_reservation_id, instances.launched_at AS instances_launched_at, instances.terminated_at AS instances_terminated_at, instances.availability_zone AS instances_availability_zone, instances.display_name AS instances_display_name, instances.display_description AS instances_display_description, instances.launched_on AS instances_launched_on, instances.locked AS instances_locked, instances.locked_by AS instances_locked_by, instances.os_type AS instances_os_type, instances.architecture AS instances_architecture, instances.vm_mode AS instances_vm_mode, instances.uuid AS instances_uuid, instances.root_device_name AS instances_root_device_name, instances.default_ephemeral_device AS instances_default_ephemeral_device, instances.default_swap_device AS instances_default_swap_device, instances.config_drive AS instances_config_drive, instances.access_ip_v4 AS instances_access_ip_v4, instances.access_ip_v6 AS instances_access_ip_v6, instances.auto_disk_config AS instances_auto_disk_config, instances.progress AS instances_progress, instances.shutdown_terminate AS instances_shutdown_terminate, instances.disable_terminate AS instances_disable_terminate, instances.cell_name AS instances_cell_name, instances.internal_id AS instances_internal_id, instances.cleaned AS instances_cleaned\nFROM instances\nWHERE instances.deleted = 0 AND (instances.vm_state != 'soft-delete' OR instances.vm_state IS NULL) AND instances.project_id = 'bfd50153a2e9476f93e33e30e922cd06' AND (instances.display_name REGEXP 'kvas') ORDER BY instances.created_at DESC, instances.id DESC\nLIMIT 3000) AS anon_1 LEFT OUTER JOIN (security_group_instance_association AS security_group_instance_association_1 INNER JOIN security_groups AS security_groups_1 ON security_groups_1.id = security_group_instance_association_1.security_group_id AND security_group_instance_association_1.deleted = 0 AND security_groups_1.deleted = 0) ON security_group_instance_association_1.instance_uuid = anon_1.instances_uuid AND anon_1.instances_deleted = 0 LEFT OUTER JOIN instance_info_caches AS instance_info_caches_1 ON instance_info_caches_1.instance_uuid = anon_1.instances_uuid ORDER BY anon_1.instances_created_at DESC, anon_1.instances_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the images that are not deleted, have a status of 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', are public, ordered by creation date and ID, limited to 25 records in the OpenStack database?\n   \n",
            "Can you list the created at, updated at, deleted at, deleted, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status of images that meet specific criteria from the OpenStack database, along with their associated tags, locations, and properties, ordered by creation date and ID?\n\n",
            "Which image tags, locations, and properties are associated with the images that are not deleted, have a status of 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', are public, ordered by creation date and ID, limited to 25 records in the OpenStack database?\n\n",
            "Provide the details of the images, including their tags, locations, and properties, that are not deleted, have a status of 'active', 'saving', 'queued', 'pending_delete', 'deleted', or 'deactivated', are public, ordered by creation date and ID, limited to 25 records in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT anon_1.images_created_at AS anon_1_images_created_at, anon_1.images_updated_at AS anon_1_images_updated_at, anon_1.images_deleted_at AS anon_1_images_deleted_at, anon_1.images_deleted AS anon_1_images_deleted, anon_1.images_id AS anon_1_images_id, anon_1.images_name AS anon_1_images_name, anon_1.images_disk_format AS anon_1_images_disk_format, anon_1.images_container_format AS anon_1_images_container_format, anon_1.images_size AS anon_1_images_size, anon_1.images_virtual_size AS anon_1_images_virtual_size, anon_1.images_status AS anon_1_images_status, anon_1.images_is_public AS anon_1_images_is_public, anon_1.images_checksum AS anon_1_images_checksum, anon_1.images_min_disk AS anon_1_images_min_disk, anon_1.images_min_ram AS anon_1_images_min_ram, anon_1.images_owner AS anon_1_images_owner, anon_1.images_protected AS anon_1_images_protected, image_tags_1.created_at AS image_tags_1_created_at, image_tags_1.updated_at AS image_tags_1_updated_at, image_tags_1.deleted_at AS image_tags_1_deleted_at, image_tags_1.deleted AS image_tags_1_deleted, image_tags_1.id AS image_tags_1_id, image_tags_1.image_id AS image_tags_1_image_id, image_tags_1.value AS image_tags_1_value, image_locations_1.created_at AS image_locations_1_created_at, image_locations_1.updated_at AS image_locations_1_updated_at, image_locations_1.deleted_at AS image_locations_1_deleted_at, image_locations_1.deleted AS image_locations_1_deleted, image_locations_1.id AS image_locations_1_id, image_locations_1.image_id AS image_locations_1_image_id, image_locations_1.value AS image_locations_1_value, image_locations_1.meta_data AS image_locations_1_meta_data, image_locations_1.status AS image_locations_1_status, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value\nFROM (SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.virtual_size AS images_virtual_size, images.status AS images_status, images.is_public AS images_is_public, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected\nFROM images\nWHERE images.deleted = false AND images.status IN ('active', 'saving', 'queued', 'pending_delete', 'deleted', 'deactivated') AND images.is_public = true ORDER BY images.created_at DESC, images.id DESC\nLIMIT 25) AS anon_1 LEFT OUTER JOIN image_tags AS image_tags_1 ON anon_1.images_id = image_tags_1.image_id LEFT OUTER JOIN image_locations AS image_locations_1 ON anon_1.images_id = image_locations_1.image_id LEFT OUTER JOIN image_properties AS image_properties_1 ON anon_1.images_id = image_properties_1.image_id ORDER BY anon_1.images_created_at DESC, anon_1.images_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the images, including created at, updated at, deleted at, deleted status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status, for images that are not deleted, have specific statuses, and are public in the OpenStack database?\n",
            "Can you provide the information about images, such as created at, updated at, deleted at, deleted status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status, for images owned by a specific user that are not deleted and have certain statuses in the OpenStack database?\n",
            "What are the details of images, including created at, updated at, deleted at, deleted status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status, for images that are not deleted, have specific statuses, and are shared with a specific member in the OpenStack database?\n",
            "Could you list the created at, updated at, deleted at, deleted status, ID, name, disk format, container format, size, virtual size, status, public status, checksum, minimum disk, minimum RAM, owner, and protection status of images, along with their tags, locations, and properties, ordered by created at and ID in descending order from the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT anon_1.anon_2_images_created_at AS anon_1_anon_2_images_created_at, anon_1.anon_2_images_updated_at AS anon_1_anon_2_images_updated_at, anon_1.anon_2_images_deleted_at AS anon_1_anon_2_images_deleted_at, anon_1.anon_2_images_deleted AS anon_1_anon_2_images_deleted, anon_1.anon_2_images_id AS anon_1_anon_2_images_id, anon_1.anon_2_images_name AS anon_1_anon_2_images_name, anon_1.anon_2_images_disk_format AS anon_1_anon_2_images_disk_format, anon_1.anon_2_images_container_format AS anon_1_anon_2_images_container_format, anon_1.anon_2_images_size AS anon_1_anon_2_images_size, anon_1.anon_2_images_virtual_size AS anon_1_anon_2_images_virtual_size, anon_1.anon_2_images_status AS anon_1_anon_2_images_status, anon_1.anon_2_images_is_public AS anon_1_anon_2_images_is_public, anon_1.anon_2_images_checksum AS anon_1_anon_2_images_checksum, anon_1.anon_2_images_min_disk AS anon_1_anon_2_images_min_disk, anon_1.anon_2_images_min_ram AS anon_1_anon_2_images_min_ram, anon_1.anon_2_images_owner AS anon_1_anon_2_images_owner, anon_1.anon_2_images_protected AS anon_1_anon_2_images_protected, image_tags_1.created_at AS image_tags_1_created_at, image_tags_1.updated_at AS image_tags_1_updated_at, image_tags_1.deleted_at AS image_tags_1_deleted_at, image_tags_1.deleted AS image_tags_1_deleted, image_tags_1.id AS image_tags_1_id, image_tags_1.image_id AS image_tags_1_image_id, image_tags_1.value AS image_tags_1_value, image_locations_1.created_at AS image_locations_1_created_at, image_locations_1.updated_at AS image_locations_1_updated_at, image_locations_1.deleted_at AS image_locations_1_deleted_at, image_locations_1.deleted AS image_locations_1_deleted, image_locations_1.id AS image_locations_1_id, image_locations_1.image_id AS image_locations_1_image_id, image_locations_1.value AS image_locations_1_value, image_locations_1.meta_data AS image_locations_1_meta_data, image_locations_1.status AS image_locations_1_status, image_properties_1.created_at AS image_properties_1_created_at, image_properties_1.updated_at AS image_properties_1_updated_at, image_properties_1.deleted_at AS image_properties_1_deleted_at, image_properties_1.deleted AS image_properties_1_deleted, image_properties_1.id AS image_properties_1_id, image_properties_1.image_id AS image_properties_1_image_id, image_properties_1.name AS image_properties_1_name, image_properties_1.value AS image_properties_1_value\nFROM (SELECT anon_2.images_created_at AS anon_2_images_created_at, anon_2.images_updated_at AS anon_2_images_updated_at, anon_2.images_deleted_at AS anon_2_images_deleted_at, anon_2.images_deleted AS anon_2_images_deleted, anon_2.images_id AS anon_2_images_id, anon_2.images_name AS anon_2_images_name, anon_2.images_disk_format AS anon_2_images_disk_format, anon_2.images_container_format AS anon_2_images_container_format, anon_2.images_size AS anon_2_images_size, anon_2.images_virtual_size AS anon_2_images_virtual_size, anon_2.images_status AS anon_2_images_status, anon_2.images_is_public AS anon_2_images_is_public, anon_2.images_checksum AS anon_2_images_checksum, anon_2.images_min_disk AS anon_2_images_min_disk, anon_2.images_min_ram AS anon_2_images_min_ram, anon_2.images_owner AS anon_2_images_owner, anon_2.images_protected AS anon_2_images_protected\nFROM (SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.virtual_size AS images_virtual_size, images.status AS images_status, images.is_public AS images_is_public, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected\nFROM images\nWHERE images.deleted = false AND images.status IN ('active', 'saving', 'queued', 'pending_delete', 'deleted', 'deactivated') AND images.is_public = true UNION SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.virtual_size AS images_virtual_size, images.status AS images_status, images.is_public AS images_is_public, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected\nFROM images\nWHERE images.owner = 'bfd50153a2e9476f93e33e30e922cd06' AND images.deleted = false AND images.status IN ('active', 'saving', 'queued', 'pending_delete', 'deleted', 'deactivated') UNION SELECT images.created_at AS images_created_at, images.updated_at AS images_updated_at, images.deleted_at AS images_deleted_at, images.deleted AS images_deleted, images.id AS images_id, images.name AS images_name, images.disk_format AS images_disk_format, images.container_format AS images_container_format, images.size AS images_size, images.virtual_size AS images_virtual_size, images.status AS images_status, images.is_public AS images_is_public, images.checksum AS images_checksum, images.min_disk AS images_min_disk, images.min_ram AS images_min_ram, images.owner AS images_owner, images.protected AS images_protected\nFROM images INNER JOIN image_members ON images.id = image_members.image_id\nWHERE images.deleted = false AND images.status IN ('active', 'saving', 'queued', 'pending_delete', 'deleted', 'deactivated') AND image_members.deleted = false AND image_members.member = 'bfd50153a2e9476f93e33e30e922cd06' AND image_members.status = 'accepted') AS anon_2 ORDER BY anon_2.images_created_at DESC, anon_2.images_id DESC\nLIMIT 200) AS anon_1 LEFT OUTER JOIN image_tags AS image_tags_1 ON anon_1.anon_2_images_id = image_tags_1.image_id LEFT OUTER JOIN image_locations AS image_locations_1 ON anon_1.anon_2_images_id = image_locations_1.image_id LEFT OUTER JOIN image_properties AS image_properties_1 ON anon_1.anon_2_images_id = image_properties_1.image_id ORDER BY anon_1.anon_2_images_created_at DESC, anon_1.anon_2_images_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the instances' details such as creation time, update time, deletion time, ID, user ID, project ID, image reference, kernel ID, and RAM disk ID for the instance with the UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database?\n",
            "Can you list the security group details like ID, name, description, user ID, and project ID associated with the instance having the UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database?\n",
            "What system metadata, network information, and metadata values are linked to the instance identified by the UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database?\n",
            "Provide information about the instance's configuration, access IP addresses, progress, termination settings, and cell name for the instance with the UUID 'd052d786-9b26-4439-ae6b-32a0505fdc12' in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT anon_1.instances_created_at AS anon_1_instances_created_at, anon_1.instances_updated_at AS anon_1_instances_updated_at, anon_1.instances_deleted_at AS anon_1_instances_deleted_at, anon_1.instances_deleted AS anon_1_instances_deleted, anon_1.instances_id AS anon_1_instances_id, anon_1.instances_user_id AS anon_1_instances_user_id, anon_1.instances_project_id AS anon_1_instances_project_id, anon_1.instances_image_ref AS anon_1_instances_image_ref, anon_1.instances_kernel_id AS anon_1_instances_kernel_id, anon_1.instances_ramdisk_id AS anon_1_instances_ramdisk_id, anon_1.instances_hostname AS anon_1_instances_hostname, anon_1.instances_launch_index AS anon_1_instances_launch_index, anon_1.instances_key_name AS anon_1_instances_key_name, anon_1.instances_key_data AS anon_1_instances_key_data, anon_1.instances_power_state AS anon_1_instances_power_state, anon_1.instances_vm_state AS anon_1_instances_vm_state, anon_1.instances_task_state AS anon_1_instances_task_state, anon_1.instances_memory_mb AS anon_1_instances_memory_mb, anon_1.instances_vcpus AS anon_1_instances_vcpus, anon_1.instances_root_gb AS anon_1_instances_root_gb, anon_1.instances_ephemeral_gb AS anon_1_instances_ephemeral_gb, anon_1.instances_ephemeral_key_uuid AS anon_1_instances_ephemeral_key_uuid, anon_1.instances_host AS anon_1_instances_host, anon_1.instances_node AS anon_1_instances_node, anon_1.instances_instance_type_id AS anon_1_instances_instance_type_id, anon_1.instances_user_data AS anon_1_instances_user_data, anon_1.instances_reservation_id AS anon_1_instances_reservation_id, anon_1.instances_launched_at AS anon_1_instances_launched_at, anon_1.instances_terminated_at AS anon_1_instances_terminated_at, anon_1.instances_availability_zone AS anon_1_instances_availability_zone, anon_1.instances_display_name AS anon_1_instances_display_name, anon_1.instances_display_description AS anon_1_instances_display_description, anon_1.instances_launched_on AS anon_1_instances_launched_on, anon_1.instances_locked AS anon_1_instances_locked, anon_1.instances_locked_by AS anon_1_instances_locked_by, anon_1.instances_os_type AS anon_1_instances_os_type, anon_1.instances_architecture AS anon_1_instances_architecture, anon_1.instances_vm_mode AS anon_1_instances_vm_mode, anon_1.instances_uuid AS anon_1_instances_uuid, anon_1.instances_root_device_name AS anon_1_instances_root_device_name, anon_1.instances_default_ephemeral_device AS anon_1_instances_default_ephemeral_device, anon_1.instances_default_swap_device AS anon_1_instances_default_swap_device, anon_1.instances_config_drive AS anon_1_instances_config_drive, anon_1.instances_access_ip_v4 AS anon_1_instances_access_ip_v4, anon_1.instances_access_ip_v6 AS anon_1_instances_access_ip_v6, anon_1.instances_auto_disk_config AS anon_1_instances_auto_disk_config, anon_1.instances_progress AS anon_1_instances_progress, anon_1.instances_shutdown_terminate AS anon_1_instances_shutdown_terminate, anon_1.instances_disable_terminate AS anon_1_instances_disable_terminate, anon_1.instances_cell_name AS anon_1_instances_cell_name, anon_1.instances_internal_id AS anon_1_instances_internal_id, anon_1.instances_cleaned AS anon_1_instances_cleaned, security_groups_1.created_at AS security_groups_1_created_at, security_groups_1.updated_at AS security_groups_1_updated_at, security_groups_1.deleted_at AS security_groups_1_deleted_at, security_groups_1.deleted AS security_groups_1_deleted, security_groups_1.id AS security_groups_1_id, security_groups_1.name AS security_groups_1_name, security_groups_1.description AS security_groups_1_description, security_groups_1.user_id AS security_groups_1_user_id, security_groups_1.project_id AS security_groups_1_project_id, security_group_rules_1.created_at AS security_group_rules_1_created_at, security_group_rules_1.updated_at AS security_group_rules_1_updated_at, security_group_rules_1.deleted_at AS security_group_rules_1_deleted_at, security_group_rules_1.deleted AS security_group_rules_1_deleted, security_group_rules_1.id AS security_group_rules_1_id, security_group_rules_1.parent_group_id AS security_group_rules_1_parent_group_id, security_group_rules_1.protocol AS security_group_rules_1_protocol, security_group_rules_1.from_port AS security_group_rules_1_from_port, security_group_rules_1.to_port AS security_group_rules_1_to_port, security_group_rules_1.cidr AS security_group_rules_1_cidr, security_group_rules_1.group_id AS security_group_rules_1_group_id, instance_system_metadata_1.created_at AS instance_system_metadata_1_created_at, instance_system_metadata_1.updated_at AS instance_system_metadata_1_updated_at, instance_system_metadata_1.deleted_at AS instance_system_metadata_1_deleted_at, instance_system_metadata_1.deleted AS instance_system_metadata_1_deleted, instance_system_metadata_1.id AS instance_system_metadata_1_id, instance_system_metadata_1.`key` AS instance_system_metadata_1_key, instance_system_metadata_1.value AS instance_system_metadata_1_value, instance_system_metadata_1.instance_uuid AS instance_system_metadata_1_instance_uuid, instance_info_caches_1.created_at AS instance_info_caches_1_created_at, instance_info_caches_1.updated_at AS instance_info_caches_1_updated_at, instance_info_caches_1.deleted_at AS instance_info_caches_1_deleted_at, instance_info_caches_1.deleted AS instance_info_caches_1_deleted, instance_info_caches_1.id AS instance_info_caches_1_id, instance_info_caches_1.network_info AS instance_info_caches_1_network_info, instance_info_caches_1.instance_uuid AS instance_info_caches_1_instance_uuid, instance_metadata_1.created_at AS instance_metadata_1_created_at, instance_metadata_1.updated_at AS instance_metadata_1_updated_at, instance_metadata_1.deleted_at AS instance_metadata_1_deleted_at, instance_metadata_1.deleted AS instance_metadata_1_deleted, instance_metadata_1.id AS instance_metadata_1_id, instance_metadata_1.`key` AS instance_metadata_1_key, instance_metadata_1.value AS instance_metadata_1_value, instance_metadata_1.instance_uuid AS instance_metadata_1_instance_uuid\nFROM (SELECT instances.created_at AS instances_created_at, instances.updated_at AS instances_updated_at, instances.deleted_at AS instances_deleted_at, instances.deleted AS instances_deleted, instances.id AS instances_id, instances.user_id AS instances_user_id, instances.project_id AS instances_project_id, instances.image_ref AS instances_image_ref, instances.kernel_id AS instances_kernel_id, instances.ramdisk_id AS instances_ramdisk_id, instances.hostname AS instances_hostname, instances.launch_index AS instances_launch_index, instances.key_name AS instances_key_name, instances.key_data AS instances_key_data, instances.power_state AS instances_power_state, instances.vm_state AS instances_vm_state, instances.task_state AS instances_task_state, instances.memory_mb AS instances_memory_mb, instances.vcpus AS instances_vcpus, instances.root_gb AS instances_root_gb, instances.ephemeral_gb AS instances_ephemeral_gb, instances.ephemeral_key_uuid AS instances_ephemeral_key_uuid, instances.host AS instances_host, instances.node AS instances_node, instances.instance_type_id AS instances_instance_type_id, instances.user_data AS instances_user_data, instances.reservation_id AS instances_reservation_id, instances.launched_at AS instances_launched_at, instances.terminated_at AS instances_terminated_at, instances.availability_zone AS instances_availability_zone, instances.display_name AS instances_display_name, instances.display_description AS instances_display_description, instances.launched_on AS instances_launched_on, instances.locked AS instances_locked, instances.locked_by AS instances_locked_by, instances.os_type AS instances_os_type, instances.architecture AS instances_architecture, instances.vm_mode AS instances_vm_mode, instances.uuid AS instances_uuid, instances.root_device_name AS instances_root_device_name, instances.default_ephemeral_device AS instances_default_ephemeral_device, instances.default_swap_device AS instances_default_swap_device, instances.config_drive AS instances_config_drive, instances.access_ip_v4 AS instances_access_ip_v4, instances.access_ip_v6 AS instances_access_ip_v6, instances.auto_disk_config AS instances_auto_disk_config, instances.progress AS instances_progress, instances.shutdown_terminate AS instances_shutdown_terminate, instances.disable_terminate AS instances_disable_terminate, instances.cell_name AS instances_cell_name, instances.internal_id AS instances_internal_id, instances.cleaned AS instances_cleaned\nFROM instances\nWHERE instances.deleted = 0 AND instances.project_id = 'bfd50153a2e9476f93e33e30e922cd06' AND instances.uuid = 'd052d786-9b26-4439-ae6b-32a0505fdc12'\nLIMIT 1) AS anon_1 LEFT OUTER JOIN (security_group_instance_association AS security_group_instance_association_1 INNER JOIN security_groups AS security_groups_1 ON security_groups_1.id = security_group_instance_association_1.security_group_id AND security_group_instance_association_1.deleted = 0 AND security_groups_1.deleted = 0) ON security_group_instance_association_1.instance_uuid = anon_1.instances_uuid AND anon_1.instances_deleted = 0 LEFT OUTER JOIN security_group_rules AS security_group_rules_1 ON security_group_rules_1.parent_group_id = security_groups_1.id AND security_group_rules_1.deleted = 0 LEFT OUTER JOIN instance_system_metadata AS instance_system_metadata_1 ON anon_1.instances_uuid = instance_system_metadata_1.instance_uuid LEFT OUTER JOIN instance_info_caches AS instance_info_caches_1 ON instance_info_caches_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_metadata AS instance_metadata_1 ON instance_metadata_1.instance_uuid = anon_1.instances_uuid AND instance_metadata_1.deleted = 0"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the creation timestamp, last update timestamp, deletion timestamp, deletion status, ID, service ID, host, UUID, resource allocations (vCPUs, memory, local storage), hypervisor details, current workload, running VMs, and CPU information for compute nodes that have not been deleted in the OpenStack database?\n   \n",
            "Can you list the total memory inventory, reserved memory, memory allocation ratio, used memory, total vCPUs inventory, vCPUs allocation ratio, used vCPUs, total local storage inventory, reserved local storage, and local storage allocation ratio for compute nodes that have not been deleted in the OpenStack database?\n\n",
            "What are the host IP, supported instances, metrics, PCI stats, extra resources, statistics, NUMA topology, RAM allocation ratio, CPU allocation ratio, and disk allocation ratio for compute nodes that are not marked as deleted in the OpenStack database?\n\n",
            "Could you provide the details of the compute nodes, including the total memory inventory, reserved memory, memory allocation ratio, used memory, total vCPUs inventory, vCPUs allocation ratio, used vCPUs, total local storage inventory, reserved local storage, and local storage allocation ratio, for compute nodes that are active and have not been deleted in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT cn.created_at, cn.updated_at, cn.deleted_at, cn.deleted, cn.id, cn.service_id, cn.host, cn.uuid, cn.vcpus, cn.memory_mb, cn.local_gb, cn.vcpus_used, cn.memory_mb_used, cn.local_gb_used, cn.hypervisor_type, cn.hypervisor_version, cn.hypervisor_hostname, cn.free_ram_mb, cn.free_disk_gb, cn.current_workload, cn.running_vms, cn.cpu_info, cn.disk_available_least, cn.host_ip, cn.supported_instances, cn.metrics, cn.pci_stats, cn.extra_resources, cn.stats, cn.numa_topology, cn.ram_allocation_ratio, cn.cpu_allocation_ratio, cn.disk_allocation_ratio, ram_inv.total AS inv_memory_mb, ram_inv.reserved AS inv_memory_mb_reserved, ram_inv.allocation_ratio AS inv_ram_allocation_ratio, ram_usage.used AS inv_memory_mb_used, cpu_inv.total AS inv_vcpus, cpu_inv.allocation_ratio AS inv_cpu_allocation_ratio, cpu_usage.used AS inv_vcpus_used, disk_inv.total AS inv_local_gb, disk_inv.reserved AS inv_local_gb_reserved, disk_inv.allocation_ratio AS inv_disk_allocation_ratio, disk_usage.used AS inv_local_gb_used\nFROM compute_nodes AS cn LEFT OUTER JOIN resource_providers AS rp ON cn.uuid = rp.uuid LEFT OUTER JOIN inventories AS ram_inv ON rp.id = ram_inv.resource_provider_id AND ram_inv.resource_class_id = 1 LEFT OUTER JOIN (SELECT allocations.resource_provider_id AS resource_provider_id, sum(allocations.used) AS used\nFROM allocations\nWHERE allocations.resource_class_id = 1 GROUP BY allocations.resource_provider_id) AS ram_usage ON ram_inv.resource_provider_id = ram_usage.resource_provider_id LEFT OUTER JOIN inventories AS cpu_inv ON rp.id = cpu_inv.resource_provider_id AND cpu_inv.resource_class_id = 0 LEFT OUTER JOIN (SELECT allocations.resource_provider_id AS resource_provider_id, sum(allocations.used) AS used\nFROM allocations\nWHERE allocations.resource_class_id = 0 GROUP BY allocations.resource_provider_id) AS cpu_usage ON cpu_inv.resource_provider_id = cpu_usage.resource_provider_id LEFT OUTER JOIN inventories AS disk_inv ON rp.id = disk_inv.resource_provider_id AND disk_inv.resource_class_id = 2 LEFT OUTER JOIN (SELECT allocations.resource_provider_id AS resource_provider_id, sum(allocations.used) AS used\nFROM allocations\nWHERE allocations.resource_class_id = 2 GROUP BY allocations.resource_provider_id) AS disk_usage ON disk_inv.resource_provider_id = disk_usage.resource_provider_id\nWHERE cn.deleted = 0"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the volumes, including creation date, update date, deletion date, ID, EC2 ID, user ID, project ID, host, size, status, and availability zone for volumes that have not been deleted, do not have migration status starting with 'target:', and belong to the project with the ID 'bfd50153a2e9476f93e33e30e922cd06' in the OpenStack database?\n",
            "Can you list the display name, display description, provider location, provider authentication, provider geometry, provider ID, source volume ID, encryption key ID, consistency group ID, bootable status, multiattach status, replication status, replication extended status, replication driver data, and previous status of the volumes meeting the specified criteria, ordered by creation date and volume ID in descending order?\n",
            "Provide the details of the consistency groups associated with the volumes meeting the criteria, including creation date, update date, deletion date, ID, user ID, project ID, host, availability zone, name, description, and volume type ID, in the OpenStack database.\n",
            "What are the metadata, admin metadata, attachments, and types related to the volumes that have not been deleted, ordered by creation date and volume ID in descending order, for the specified project in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT anon_1.volumes_created_at AS anon_1_volumes_created_at, anon_1.volumes_updated_at AS anon_1_volumes_updated_at, anon_1.volumes_deleted_at AS anon_1_volumes_deleted_at, anon_1.volumes_deleted AS anon_1_volumes_deleted, anon_1.volumes_id AS anon_1_volumes_id, anon_1.volumes__name_id AS anon_1_volumes__name_id, anon_1.volumes_ec2_id AS anon_1_volumes_ec2_id, anon_1.volumes_user_id AS anon_1_volumes_user_id, anon_1.volumes_project_id AS anon_1_volumes_project_id, anon_1.volumes_snapshot_id AS anon_1_volumes_snapshot_id, anon_1.volumes_host AS anon_1_volumes_host, anon_1.volumes_size AS anon_1_volumes_size, anon_1.volumes_availability_zone AS anon_1_volumes_availability_zone, anon_1.volumes_status AS anon_1_volumes_status, anon_1.volumes_attach_status AS anon_1_volumes_attach_status, anon_1.volumes_migration_status AS anon_1_volumes_migration_status, anon_1.volumes_scheduled_at AS anon_1_volumes_scheduled_at, anon_1.volumes_launched_at AS anon_1_volumes_launched_at, anon_1.volumes_terminated_at AS anon_1_volumes_terminated_at, anon_1.volumes_display_name AS anon_1_volumes_display_name, anon_1.volumes_display_description AS anon_1_volumes_display_description, anon_1.volumes_provider_location AS anon_1_volumes_provider_location, anon_1.volumes_provider_auth AS anon_1_volumes_provider_auth, anon_1.volumes_provider_geometry AS anon_1_volumes_provider_geometry, anon_1.volumes_provider_id AS anon_1_volumes_provider_id, anon_1.volumes_volume_type_id AS anon_1_volumes_volume_type_id, anon_1.volumes_source_volid AS anon_1_volumes_source_volid, anon_1.volumes_encryption_key_id AS anon_1_volumes_encryption_key_id, anon_1.volumes_consistencygroup_id AS anon_1_volumes_consistencygroup_id, anon_1.volumes_bootable AS anon_1_volumes_bootable, anon_1.volumes_multiattach AS anon_1_volumes_multiattach, anon_1.volumes_replication_status AS anon_1_volumes_replication_status, anon_1.volumes_replication_extended_status AS anon_1_volumes_replication_extended_status, anon_1.volumes_replication_driver_data AS anon_1_volumes_replication_driver_data, anon_1.volumes_previous_status AS anon_1_volumes_previous_status, consistencygroups_1.created_at AS consistencygroups_1_created_at, consistencygroups_1.updated_at AS consistencygroups_1_updated_at, consistencygroups_1.deleted_at AS consistencygroups_1_deleted_at, consistencygroups_1.deleted AS consistencygroups_1_deleted, consistencygroups_1.id AS consistencygroups_1_id, consistencygroups_1.user_id AS consistencygroups_1_user_id, consistencygroups_1.project_id AS consistencygroups_1_project_id, consistencygroups_1.host AS consistencygroups_1_host, consistencygroups_1.availability_zone AS consistencygroups_1_availability_zone, consistencygroups_1.name AS consistencygroups_1_name, consistencygroups_1.description AS consistencygroups_1_description, consistencygroups_1.volume_type_id AS consistencygroups_1_volume_type_id, consistencygroups_1.status AS consistencygroups_1_status, consistencygroups_1.cgsnapshot_id AS consistencygroups_1_cgsnapshot_id, consistencygroups_1.source_cgid AS consistencygroups_1_source_cgid, volume_metadata_1.created_at AS volume_metadata_1_created_at, volume_metadata_1.updated_at AS volume_metadata_1_updated_at, volume_metadata_1.deleted_at AS volume_metadata_1_deleted_at, volume_metadata_1.deleted AS volume_metadata_1_deleted, volume_metadata_1.id AS volume_metadata_1_id, volume_metadata_1.`key` AS volume_metadata_1_key, volume_metadata_1.value AS volume_metadata_1_value, volume_metadata_1.volume_id AS volume_metadata_1_volume_id, volume_admin_metadata_1.created_at AS volume_admin_metadata_1_created_at, volume_admin_metadata_1.updated_at AS volume_admin_metadata_1_updated_at, volume_admin_metadata_1.deleted_at AS volume_admin_metadata_1_deleted_at, volume_admin_metadata_1.deleted AS volume_admin_metadata_1_deleted, volume_admin_metadata_1.id AS volume_admin_metadata_1_id, volume_admin_metadata_1.`key` AS volume_admin_metadata_1_key, volume_admin_metadata_1.value AS volume_admin_metadata_1_value, volume_admin_metadata_1.volume_id AS volume_admin_metadata_1_volume_id, volume_attachment_1.created_at AS volume_attachment_1_created_at, volume_attachment_1.updated_at AS volume_attachment_1_updated_at, volume_attachment_1.deleted_at AS volume_attachment_1_deleted_at, volume_attachment_1.deleted AS volume_attachment_1_deleted, volume_attachment_1.id AS volume_attachment_1_id, volume_attachment_1.volume_id AS volume_attachment_1_volume_id, volume_attachment_1.instance_uuid AS volume_attachment_1_instance_uuid, volume_attachment_1.attached_host AS volume_attachment_1_attached_host, volume_attachment_1.mountpoint AS volume_attachment_1_mountpoint, volume_attachment_1.attach_time AS volume_attachment_1_attach_time, volume_attachment_1.detach_time AS volume_attachment_1_detach_time, volume_attachment_1.attach_status AS volume_attachment_1_attach_status, volume_attachment_1.attach_mode AS volume_attachment_1_attach_mode, volume_types_1.created_at AS volume_types_1_created_at, volume_types_1.updated_at AS volume_types_1_updated_at, volume_types_1.deleted_at AS volume_types_1_deleted_at, volume_types_1.deleted AS volume_types_1_deleted, volume_types_1.id AS volume_types_1_id, volume_types_1.name AS volume_types_1_name, volume_types_1.description AS volume_types_1_description, volume_types_1.qos_specs_id AS volume_types_1_qos_specs_id, volume_types_1.is_public AS volume_types_1_is_public\nFROM (SELECT volumes.created_at AS volumes_created_at, volumes.updated_at AS volumes_updated_at, volumes.deleted_at AS volumes_deleted_at, volumes.deleted AS volumes_deleted, volumes.id AS volumes_id, volumes._name_id AS volumes__name_id, volumes.ec2_id AS volumes_ec2_id, volumes.user_id AS volumes_user_id, volumes.project_id AS volumes_project_id, volumes.snapshot_id AS volumes_snapshot_id, volumes.host AS volumes_host, volumes.size AS volumes_size, volumes.availability_zone AS volumes_availability_zone, volumes.status AS volumes_status, volumes.attach_status AS volumes_attach_status, volumes.migration_status AS volumes_migration_status, volumes.scheduled_at AS volumes_scheduled_at, volumes.launched_at AS volumes_launched_at, volumes.terminated_at AS volumes_terminated_at, volumes.display_name AS volumes_display_name, volumes.display_description AS volumes_display_description, volumes.provider_location AS volumes_provider_location, volumes.provider_auth AS volumes_provider_auth, volumes.provider_geometry AS volumes_provider_geometry, volumes.provider_id AS volumes_provider_id, volumes.volume_type_id AS volumes_volume_type_id, volumes.source_volid AS volumes_source_volid, volumes.encryption_key_id AS volumes_encryption_key_id, volumes.consistencygroup_id AS volumes_consistencygroup_id, volumes.bootable AS volumes_bootable, volumes.multiattach AS volumes_multiattach, volumes.replication_status AS volumes_replication_status, volumes.replication_extended_status AS volumes_replication_extended_status, volumes.replication_driver_data AS volumes_replication_driver_data, volumes.previous_status AS volumes_previous_status\nFROM volumes\nWHERE volumes.deleted = false AND (volumes.migration_status IS NULL OR (volumes.migration_status NOT LIKE 'target:%')) AND volumes.project_id = 'bfd50153a2e9476f93e33e30e922cd06' ORDER BY volumes.created_at DESC, volumes.id DESC\nLIMIT 1000) AS anon_1 LEFT OUTER JOIN consistencygroups AS consistencygroups_1 ON anon_1.volumes_consistencygroup_id = consistencygroups_1.id LEFT OUTER JOIN volume_metadata AS volume_metadata_1 ON volume_metadata_1.volume_id = anon_1.volumes_id AND volume_metadata_1.deleted = false LEFT OUTER JOIN volume_admin_metadata AS volume_admin_metadata_1 ON volume_admin_metadata_1.volume_id = anon_1.volumes_id AND volume_admin_metadata_1.deleted = false LEFT OUTER JOIN volume_attachment AS volume_attachment_1 ON volume_attachment_1.volume_id = anon_1.volumes_id AND volume_attachment_1.deleted = false LEFT OUTER JOIN volume_types AS volume_types_1 ON anon_1.volumes_volume_type_id = volume_types_1.id AND volume_types_1.deleted = false ORDER BY anon_1.volumes_created_at DESC, anon_1.volumes_id DESC"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the various attributes such as creation timestamp, update timestamp, deletion timestamp, user ID, project ID, image reference, and hostname of instances that were not deleted, had a VM state other than 'soft-delete' or NULL, belonged to the project with ID 'bfd50153a2e9476f93e33e30e922cd06', and had a display name matching the regular expression 'tb' in the OpenStack database?\n",
            "Can you list the security group details like ID, name, description, user ID, and project ID associated with instances that were not deleted, based on the specified conditions, and ordered by creation timestamp and instance ID in descending order?\n",
            "What information is available about the instance caches, extra details, and metadata for instances meeting the criteria of not being deleted, having specific VM states, belonging to a particular project, and having a display name pattern in the OpenStack database?\n",
            "How are the instances filtered based on deletion status, VM state, project ID, and display name pattern, and what are the details of security group associations, instance caches, extra information, and metadata linked to these instances, sorted by creation timestamp and instance ID in descending order?"
        ],
        "question": "",
        "sql": "SELECT anon_1.instances_created_at AS anon_1_instances_created_at, anon_1.instances_updated_at AS anon_1_instances_updated_at, anon_1.instances_deleted_at AS anon_1_instances_deleted_at, anon_1.instances_deleted AS anon_1_instances_deleted, anon_1.instances_id AS anon_1_instances_id, anon_1.instances_user_id AS anon_1_instances_user_id, anon_1.instances_project_id AS anon_1_instances_project_id, anon_1.instances_image_ref AS anon_1_instances_image_ref, anon_1.instances_kernel_id AS anon_1_instances_kernel_id, anon_1.instances_ramdisk_id AS anon_1_instances_ramdisk_id, anon_1.instances_hostname AS anon_1_instances_hostname, anon_1.instances_launch_index AS anon_1_instances_launch_index, anon_1.instances_key_name AS anon_1_instances_key_name, anon_1.instances_key_data AS anon_1_instances_key_data, anon_1.instances_power_state AS anon_1_instances_power_state, anon_1.instances_vm_state AS anon_1_instances_vm_state, anon_1.instances_task_state AS anon_1_instances_task_state, anon_1.instances_memory_mb AS anon_1_instances_memory_mb, anon_1.instances_vcpus AS anon_1_instances_vcpus, anon_1.instances_root_gb AS anon_1_instances_root_gb, anon_1.instances_ephemeral_gb AS anon_1_instances_ephemeral_gb, anon_1.instances_ephemeral_key_uuid AS anon_1_instances_ephemeral_key_uuid, anon_1.instances_host AS anon_1_instances_host, anon_1.instances_node AS anon_1_instances_node, anon_1.instances_instance_type_id AS anon_1_instances_instance_type_id, anon_1.instances_user_data AS anon_1_instances_user_data, anon_1.instances_reservation_id AS anon_1_instances_reservation_id, anon_1.instances_launched_at AS anon_1_instances_launched_at, anon_1.instances_terminated_at AS anon_1_instances_terminated_at, anon_1.instances_availability_zone AS anon_1_instances_availability_zone, anon_1.instances_display_name AS anon_1_instances_display_name, anon_1.instances_display_description AS anon_1_instances_display_description, anon_1.instances_launched_on AS anon_1_instances_launched_on, anon_1.instances_locked AS anon_1_instances_locked, anon_1.instances_locked_by AS anon_1_instances_locked_by, anon_1.instances_os_type AS anon_1_instances_os_type, anon_1.instances_architecture AS anon_1_instances_architecture, anon_1.instances_vm_mode AS anon_1_instances_vm_mode, anon_1.instances_uuid AS anon_1_instances_uuid, anon_1.instances_root_device_name AS anon_1_instances_root_device_name, anon_1.instances_default_ephemeral_device AS anon_1_instances_default_ephemeral_device, anon_1.instances_default_swap_device AS anon_1_instances_default_swap_device, anon_1.instances_config_drive AS anon_1_instances_config_drive, anon_1.instances_access_ip_v4 AS anon_1_instances_access_ip_v4, anon_1.instances_access_ip_v6 AS anon_1_instances_access_ip_v6, anon_1.instances_auto_disk_config AS anon_1_instances_auto_disk_config, anon_1.instances_progress AS anon_1_instances_progress, anon_1.instances_shutdown_terminate AS anon_1_instances_shutdown_terminate, anon_1.instances_disable_terminate AS anon_1_instances_disable_terminate, anon_1.instances_cell_name AS anon_1_instances_cell_name, anon_1.instances_internal_id AS anon_1_instances_internal_id, anon_1.instances_cleaned AS anon_1_instances_cleaned, security_groups_1.created_at AS security_groups_1_created_at, security_groups_1.updated_at AS security_groups_1_updated_at, security_groups_1.deleted_at AS security_groups_1_deleted_at, security_groups_1.deleted AS security_groups_1_deleted, security_groups_1.id AS security_groups_1_id, security_groups_1.name AS security_groups_1_name, security_groups_1.description AS security_groups_1_description, security_groups_1.user_id AS security_groups_1_user_id, security_groups_1.project_id AS security_groups_1_project_id, instance_info_caches_1.created_at AS instance_info_caches_1_created_at, instance_info_caches_1.updated_at AS instance_info_caches_1_updated_at, instance_info_caches_1.deleted_at AS instance_info_caches_1_deleted_at, instance_info_caches_1.deleted AS instance_info_caches_1_deleted, instance_info_caches_1.id AS instance_info_caches_1_id, instance_info_caches_1.network_info AS instance_info_caches_1_network_info, instance_info_caches_1.instance_uuid AS instance_info_caches_1_instance_uuid, instance_extra_1.flavor AS instance_extra_1_flavor, instance_extra_1.created_at AS instance_extra_1_created_at, instance_extra_1.updated_at AS instance_extra_1_updated_at, instance_extra_1.deleted_at AS instance_extra_1_deleted_at, instance_extra_1.deleted AS instance_extra_1_deleted, instance_extra_1.id AS instance_extra_1_id, instance_extra_1.instance_uuid AS instance_extra_1_instance_uuid, instance_metadata_1.created_at AS instance_metadata_1_created_at, instance_metadata_1.updated_at AS instance_metadata_1_updated_at, instance_metadata_1.deleted_at AS instance_metadata_1_deleted_at, instance_metadata_1.deleted AS instance_metadata_1_deleted, instance_metadata_1.id AS instance_metadata_1_id, instance_metadata_1.`key` AS instance_metadata_1_key, instance_metadata_1.value AS instance_metadata_1_value, instance_metadata_1.instance_uuid AS instance_metadata_1_instance_uuid\nFROM (SELECT instances.created_at AS instances_created_at, instances.updated_at AS instances_updated_at, instances.deleted_at AS instances_deleted_at, instances.deleted AS instances_deleted, instances.id AS instances_id, instances.user_id AS instances_user_id, instances.project_id AS instances_project_id, instances.image_ref AS instances_image_ref, instances.kernel_id AS instances_kernel_id, instances.ramdisk_id AS instances_ramdisk_id, instances.hostname AS instances_hostname, instances.launch_index AS instances_launch_index, instances.key_name AS instances_key_name, instances.key_data AS instances_key_data, instances.power_state AS instances_power_state, instances.vm_state AS instances_vm_state, instances.task_state AS instances_task_state, instances.memory_mb AS instances_memory_mb, instances.vcpus AS instances_vcpus, instances.root_gb AS instances_root_gb, instances.ephemeral_gb AS instances_ephemeral_gb, instances.ephemeral_key_uuid AS instances_ephemeral_key_uuid, instances.host AS instances_host, instances.node AS instances_node, instances.instance_type_id AS instances_instance_type_id, instances.user_data AS instances_user_data, instances.reservation_id AS instances_reservation_id, instances.launched_at AS instances_launched_at, instances.terminated_at AS instances_terminated_at, instances.availability_zone AS instances_availability_zone, instances.display_name AS instances_display_name, instances.display_description AS instances_display_description, instances.launched_on AS instances_launched_on, instances.locked AS instances_locked, instances.locked_by AS instances_locked_by, instances.os_type AS instances_os_type, instances.architecture AS instances_architecture, instances.vm_mode AS instances_vm_mode, instances.uuid AS instances_uuid, instances.root_device_name AS instances_root_device_name, instances.default_ephemeral_device AS instances_default_ephemeral_device, instances.default_swap_device AS instances_default_swap_device, instances.config_drive AS instances_config_drive, instances.access_ip_v4 AS instances_access_ip_v4, instances.access_ip_v6 AS instances_access_ip_v6, instances.auto_disk_config AS instances_auto_disk_config, instances.progress AS instances_progress, instances.shutdown_terminate AS instances_shutdown_terminate, instances.disable_terminate AS instances_disable_terminate, instances.cell_name AS instances_cell_name, instances.internal_id AS instances_internal_id, instances.cleaned AS instances_cleaned\nFROM instances\nWHERE instances.deleted = 0 AND (instances.vm_state != 'soft-delete' OR instances.vm_state IS NULL) AND instances.project_id = 'bfd50153a2e9476f93e33e30e922cd06' AND (instances.display_name REGEXP 'tb') ORDER BY instances.created_at DESC, instances.id DESC\nLIMIT 3000) AS anon_1 LEFT OUTER JOIN (security_group_instance_association AS security_group_instance_association_1 INNER JOIN security_groups AS security_groups_1 ON security_groups_1.id = security_group_instance_association_1.security_group_id AND security_group_instance_association_1.deleted = 0 AND security_groups_1.deleted = 0) ON security_group_instance_association_1.instance_uuid = anon_1.instances_uuid AND anon_1.instances_deleted = 0 LEFT OUTER JOIN instance_info_caches AS instance_info_caches_1 ON instance_info_caches_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_extra AS instance_extra_1 ON instance_extra_1.instance_uuid = anon_1.instances_uuid LEFT OUTER JOIN instance_metadata AS instance_metadata_1 ON instance_metadata_1.instance_uuid = anon_1.instances_uuid AND instance_metadata_1.deleted = 0 ORDER BY anon_1.instances_created_at DESC, anon_1.instances_id DESC"
    },
    {
        "adjusted": false,
        "comment": "note in this deployment '9f13bf11e06e4d81b44c8c3e62d4362b' is a special administrative tenant.  Also generally \"tenant\" and \"project\" are synonymous with \"project\" being the newer term used by people and found in current documentations where as \"tenant\" remains in the database because refactoring that is a lot of work for what is basically aesthetics...",
        "db_id": "csail_stata_neutron",
        "options": [
            "### Questions:\n\n",
            "What information is retrieved for networks, agents, standard attributes, tags, external networks, QoS network policy bindings, network security bindings, and network DNS domains for the tenant with the ID '8333a6a4e59343eda8957cd61da9f0e6' in the OpenStack database?\n   \n",
            "Which networks are associated with the tenant ID '8333a6a4e59343eda8957cd61da9f0e6' but are not included in the networkrbacs table with the action 'access_as_shared' for the target tenant '*' or '9f13bf11e06e4d81b44c8c3e62d4362b' in the OpenStack database?\n\n",
            "Can you list the network ID, name, status, admin state, MTU, VLAN transparency, availability zone hints, and standard attribute ID for the networks belonging to the tenant '8333a6a4e59343eda8957cd61da9f0e6' in the OpenStack database?\n\n",
            "What are the details of the agents, including ID, agent type, binary, topic, host, availability zone, admin state, created at, started at, heartbeat timestamp, description, configurations, resource versions, and load, associated with the networks of the tenant '8333a6a4e59343eda8957cd61da9f0e6' in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT networks.tenant_id AS networks_tenant_id, networks.id AS networks_id, networks.name AS networks_name, networks.status AS networks_status, networks.admin_state_up AS networks_admin_state_up, networks.mtu AS networks_mtu, networks.vlan_transparent AS networks_vlan_transparent, networks.availability_zone_hints AS networks_availability_zone_hints, networks.standard_attr_id AS networks_standard_attr_id, agents_1.id AS agents_1_id, agents_1.agent_type AS agents_1_agent_type, agents_1.`binary` AS agents_1_binary, agents_1.topic AS agents_1_topic, agents_1.host AS agents_1_host, agents_1.availability_zone AS agents_1_availability_zone, agents_1.admin_state_up AS agents_1_admin_state_up, agents_1.created_at AS agents_1_created_at, agents_1.started_at AS agents_1_started_at, agents_1.heartbeat_timestamp AS agents_1_heartbeat_timestamp, agents_1.description AS agents_1_description, agents_1.configurations AS agents_1_configurations, agents_1.resource_versions AS agents_1_resource_versions, agents_1.`load` AS agents_1_load, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, externalnetworks_1.network_id AS externalnetworks_1_network_id, externalnetworks_1.is_default AS externalnetworks_1_is_default, qos_network_policy_bindings_1.policy_id AS qos_network_policy_bindings_1_policy_id, qos_network_policy_bindings_1.network_id AS qos_network_policy_bindings_1_network_id, networksecuritybindings_1.network_id AS networksecuritybindings_1_network_id, networksecuritybindings_1.port_security_enabled AS networksecuritybindings_1_port_security_enabled, networkdnsdomains_1.network_id AS networkdnsdomains_1_network_id, networkdnsdomains_1.dns_domain AS networkdnsdomains_1_dns_domain FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id LEFT OUTER JOIN (networkdhcpagentbindings AS networkdhcpagentbindings_1 INNER JOIN agents AS agents_1 ON agents_1.id = networkdhcpagentbindings_1.dhcp_agent_id) ON networks.id = networkdhcpagentbindings_1.network_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = networks.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN externalnetworks AS externalnetworks_1 ON networks.id = externalnetworks_1.network_id LEFT OUTER JOIN qos_network_policy_bindings AS qos_network_policy_bindings_1 ON networks.id = qos_network_policy_bindings_1.network_id LEFT OUTER JOIN networksecuritybindings AS networksecuritybindings_1 ON networks.id = networksecuritybindings_1.network_id LEFT OUTER JOIN networkdnsdomains AS networkdnsdomains_1 ON networks.id = networkdnsdomains_1.network_id WHERE networks.tenant_id IN ('8333a6a4e59343eda8957cd61da9f0e6') AND networks.id NOT IN (SELECT networkrbacs.object_id AS networkrbacs_object_id FROM networkrbacs WHERE networkrbacs.action = 'access_as_shared' AND (networkrbacs.target_tenant = '*' OR networkrbacs.target_tenant = '9f13bf11e06e4d81b44c8c3e62d4362b'))"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the volumes, including creation date, update date, deletion date, ID, EC2 ID, user ID, project ID, snapshot ID, host, size, availability zone, status, and attachment status for volumes that have not been deleted, do not have migration status starting with 'target:', and belong to the project with the ID '8083447923734c679b261219b815d3bc' in the OpenStack database?\n",
            "Can you list the names and descriptions of the consistency groups associated with the volumes meeting the specified criteria in the OpenStack database?\n",
            "What metadata, including key and value, is associated with the volumes that have not been deleted and are limited to the top 1000 volumes based on creation date and ID, in the OpenStack database?\n",
            "Provide details of volume attachments, such as instance UUID, attached host, mountpoint, attach time, attach status, and attach mode, for volumes that are not deleted and meet the specified criteria in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT anon_1.volumes_created_at AS anon_1_volumes_created_at, anon_1.volumes_updated_at AS anon_1_volumes_updated_at, anon_1.volumes_deleted_at AS anon_1_volumes_deleted_at, anon_1.volumes_deleted AS anon_1_volumes_deleted, anon_1.volumes_id AS anon_1_volumes_id, anon_1.volumes__name_id AS anon_1_volumes__name_id, anon_1.volumes_ec2_id AS anon_1_volumes_ec2_id, anon_1.volumes_user_id AS anon_1_volumes_user_id, anon_1.volumes_project_id AS anon_1_volumes_project_id, anon_1.volumes_snapshot_id AS anon_1_volumes_snapshot_id, anon_1.volumes_host AS anon_1_volumes_host, anon_1.volumes_size AS anon_1_volumes_size, anon_1.volumes_availability_zone AS anon_1_volumes_availability_zone, anon_1.volumes_status AS anon_1_volumes_status, anon_1.volumes_attach_status AS anon_1_volumes_attach_status, anon_1.volumes_migration_status AS anon_1_volumes_migration_status, anon_1.volumes_scheduled_at AS anon_1_volumes_scheduled_at, anon_1.volumes_launched_at AS anon_1_volumes_launched_at, anon_1.volumes_terminated_at AS anon_1_volumes_terminated_at, anon_1.volumes_display_name AS anon_1_volumes_display_name, anon_1.volumes_display_description AS anon_1_volumes_display_description, anon_1.volumes_provider_location AS anon_1_volumes_provider_location, anon_1.volumes_provider_auth AS anon_1_volumes_provider_auth, anon_1.volumes_provider_geometry AS anon_1_volumes_provider_geometry, anon_1.volumes_provider_id AS anon_1_volumes_provider_id, anon_1.volumes_volume_type_id AS anon_1_volumes_volume_type_id, anon_1.volumes_source_volid AS anon_1_volumes_source_volid, anon_1.volumes_encryption_key_id AS anon_1_volumes_encryption_key_id, anon_1.volumes_consistencygroup_id AS anon_1_volumes_consistencygroup_id, anon_1.volumes_bootable AS anon_1_volumes_bootable, anon_1.volumes_multiattach AS anon_1_volumes_multiattach, anon_1.volumes_replication_status AS anon_1_volumes_replication_status, anon_1.volumes_replication_extended_status AS anon_1_volumes_replication_extended_status, anon_1.volumes_replication_driver_data AS anon_1_volumes_replication_driver_data, anon_1.volumes_previous_status AS anon_1_volumes_previous_status, consistencygroups_1.created_at AS consistencygroups_1_created_at, consistencygroups_1.updated_at AS consistencygroups_1_updated_at, consistencygroups_1.deleted_at AS consistencygroups_1_deleted_at, consistencygroups_1.deleted AS consistencygroups_1_deleted, consistencygroups_1.id AS consistencygroups_1_id, consistencygroups_1.user_id AS consistencygroups_1_user_id, consistencygroups_1.project_id AS consistencygroups_1_project_id, consistencygroups_1.host AS consistencygroups_1_host, consistencygroups_1.availability_zone AS consistencygroups_1_availability_zone, consistencygroups_1.name AS consistencygroups_1_name, consistencygroups_1.description AS consistencygroups_1_description, consistencygroups_1.volume_type_id AS consistencygroups_1_volume_type_id, consistencygroups_1.status AS consistencygroups_1_status, consistencygroups_1.cgsnapshot_id AS consistencygroups_1_cgsnapshot_id, consistencygroups_1.source_cgid AS consistencygroups_1_source_cgid, volume_metadata_1.created_at AS volume_metadata_1_created_at, volume_metadata_1.updated_at AS volume_metadata_1_updated_at, volume_metadata_1.deleted_at AS volume_metadata_1_deleted_at, volume_metadata_1.deleted AS volume_metadata_1_deleted, volume_metadata_1.id AS volume_metadata_1_id, volume_metadata_1.`key` AS volume_metadata_1_key, volume_metadata_1.value AS volume_metadata_1_value, volume_metadata_1.volume_id AS volume_metadata_1_volume_id, volume_attachment_1.created_at AS volume_attachment_1_created_at, volume_attachment_1.updated_at AS volume_attachment_1_updated_at, volume_attachment_1.deleted_at AS volume_attachment_1_deleted_at, volume_attachment_1.deleted AS volume_attachment_1_deleted, volume_attachment_1.id AS volume_attachment_1_id, volume_attachment_1.volume_id AS volume_attachment_1_volume_id, volume_attachment_1.instance_uuid AS volume_attachment_1_instance_uuid, volume_attachment_1.attached_host AS volume_attachment_1_attached_host, volume_attachment_1.mountpoint AS volume_attachment_1_mountpoint, volume_attachment_1.attach_time AS volume_attachment_1_attach_time, volume_attachment_1.detach_time AS volume_attachment_1_detach_time, volume_attachment_1.attach_status AS volume_attachment_1_attach_status, volume_attachment_1.attach_mode AS volume_attachment_1_attach_mode, volume_admin_metadata_1.created_at AS volume_admin_metadata_1_created_at, volume_admin_metadata_1.updated_at AS volume_admin_metadata_1_updated_at, volume_admin_metadata_1.deleted_at AS volume_admin_metadata_1_deleted_at, volume_admin_metadata_1.deleted AS volume_admin_metadata_1_deleted, volume_admin_metadata_1.id AS volume_admin_metadata_1_id, volume_admin_metadata_1.`key` AS volume_admin_metadata_1_key, volume_admin_metadata_1.value AS volume_admin_metadata_1_value, volume_admin_metadata_1.volume_id AS volume_admin_metadata_1_volume_id, volume_types_1.created_at AS volume_types_1_created_at, volume_types_1.updated_at AS volume_types_1_updated_at, volume_types_1.deleted_at AS volume_types_1_deleted_at, volume_types_1.deleted AS volume_types_1_deleted, volume_types_1.id AS volume_types_1_id, volume_types_1.name AS volume_types_1_name, volume_types_1.description AS volume_types_1_description, volume_types_1.qos_specs_id AS volume_types_1_qos_specs_id, volume_types_1.is_public AS volume_types_1_is_public FROM (SELECT volumes.created_at AS volumes_created_at, volumes.updated_at AS volumes_updated_at, volumes.deleted_at AS volumes_deleted_at, volumes.deleted AS volumes_deleted, volumes.id AS volumes_id, volumes._name_id AS volumes__name_id, volumes.ec2_id AS volumes_ec2_id, volumes.user_id AS volumes_user_id, volumes.project_id AS volumes_project_id, volumes.snapshot_id AS volumes_snapshot_id, volumes.host AS volumes_host, volumes.size AS volumes_size, volumes.availability_zone AS volumes_availability_zone, volumes.status AS volumes_status, volumes.attach_status AS volumes_attach_status, volumes.migration_status AS volumes_migration_status, volumes.scheduled_at AS volumes_scheduled_at, volumes.launched_at AS volumes_launched_at, volumes.terminated_at AS volumes_terminated_at, volumes.display_name AS volumes_display_name, volumes.display_description AS volumes_display_description, volumes.provider_location AS volumes_provider_location, volumes.provider_auth AS volumes_provider_auth, volumes.provider_geometry AS volumes_provider_geometry, volumes.provider_id AS volumes_provider_id, volumes.volume_type_id AS volumes_volume_type_id, volumes.source_volid AS volumes_source_volid, volumes.encryption_key_id AS volumes_encryption_key_id, volumes.consistencygroup_id AS volumes_consistencygroup_id, volumes.bootable AS volumes_bootable, volumes.multiattach AS volumes_multiattach, volumes.replication_status AS volumes_replication_status, volumes.replication_extended_status AS volumes_replication_extended_status, volumes.replication_driver_data AS volumes_replication_driver_data, volumes.previous_status AS volumes_previous_status FROM volumes WHERE volumes.deleted = false AND (volumes.migration_status IS NULL OR (volumes.migration_status NOT LIKE 'target:%')) AND volumes.project_id = '8083447923734c679b261219b815d3bc' ORDER BY volumes.created_at DESC, volumes.id DESC LIMIT 1000) AS anon_1 LEFT OUTER JOIN consistencygroups AS consistencygroups_1 ON anon_1.volumes_consistencygroup_id = consistencygroups_1.id LEFT OUTER JOIN volume_metadata AS volume_metadata_1 ON volume_metadata_1.volume_id = anon_1.volumes_id AND volume_metadata_1.deleted = false LEFT OUTER JOIN volume_attachment AS volume_attachment_1 ON volume_attachment_1.volume_id = anon_1.volumes_id AND volume_attachment_1.deleted = false LEFT OUTER JOIN volume_admin_metadata AS volume_admin_metadata_1 ON volume_admin_metadata_1.volume_id = anon_1.volumes_id AND volume_admin_metadata_1.deleted = false LEFT OUTER JOIN volume_types AS volume_types_1 ON anon_1.volumes_volume_type_id = volume_types_1.id AND volume_types_1.deleted = false ORDER BY anon_1.volumes_created_at DESC, anon_1.volumes_id DESC"
    },
    {
        "adjusted": false,
        "comment": "This subnet is mine personally. It's interesting that the query result has information that isn't accessible via any `show` command reated to the subnet or network I'm aware of, but also doesn't include all the information that any of those show or list commands provide... ",
        "db_id": "",
        "options": [
            "What are the details of the network, including tenant ID, ID, name, status, admin state, MTU, VLAN transparency, availability zone hints, and standard attributes, for the subnet with the ID '388ee748-7b3d-4049-99b4-7e582937bbd4' in the OpenStack database?\n",
            "Can you list the agent details such as ID, type, binary, topic, host, availability zone, admin state, created at, started at, heartbeat timestamp, description, configurations, resource versions, and load for the network associated with the subnet ID '388ee748-7b3d-4049-99b4-7e582937bbd4'?\n",
            "Provide the information about the standard attributes, including created at, updated at, ID, resource type, and description, for the network linked to the subnet with the ID '388ee748-7b3d-4049-99b4-7e582937bbd4' in the OpenStack database.\n",
            "What are the details of external networks, including network ID and default status, associated with the network that corresponds to the subnet ID '388ee748-7b3d-4049-99b4-7e582937bbd4' in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT networks.tenant_id AS networks_tenant_id, networks.id AS networks_id, networks.name AS networks_name, networks.status AS networks_status, networks.admin_state_up AS networks_admin_state_up, networks.mtu AS networks_mtu, networks.vlan_transparent AS networks_vlan_transparent, networks.availability_zone_hints AS networks_availability_zone_hints, networks.standard_attr_id AS networks_standard_attr_id, anon_1.subnets_network_id AS anon_1_subnets_network_id, agents_1.id AS agents_1_id, agents_1.agent_type AS agents_1_agent_type, agents_1.`binary` AS agents_1_binary, agents_1.topic AS agents_1_topic, agents_1.host AS agents_1_host, agents_1.availability_zone AS agents_1_availability_zone, agents_1.admin_state_up AS agents_1_admin_state_up, agents_1.created_at AS agents_1_created_at, agents_1.started_at AS agents_1_started_at, agents_1.heartbeat_timestamp AS agents_1_heartbeat_timestamp, agents_1.description AS agents_1_description, agents_1.configurations AS agents_1_configurations, agents_1.resource_versions AS agents_1_resource_versions, agents_1.`load` AS agents_1_load, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, externalnetworks_1.network_id AS externalnetworks_1_network_id, externalnetworks_1.is_default AS externalnetworks_1_is_default, qos_network_policy_bindings_1.policy_id AS qos_network_policy_bindings_1_policy_id, qos_network_policy_bindings_1.network_id AS qos_network_policy_bindings_1_network_id, networksecuritybindings_1.network_id AS networksecuritybindings_1_network_id, networksecuritybindings_1.port_security_enabled AS networksecuritybindings_1_port_security_enabled, networkdnsdomains_1.network_id AS networkdnsdomains_1_network_id, networkdnsdomains_1.dns_domain AS networkdnsdomains_1_dns_domain FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('388ee748-7b3d-4049-99b4-7e582937bbd4')) AS anon_1 INNER JOIN networks ON networks.id = anon_1.subnets_network_id LEFT OUTER JOIN (networkdhcpagentbindings AS networkdhcpagentbindings_1 INNER JOIN agents AS agents_1 ON agents_1.id = networkdhcpagentbindings_1.dhcp_agent_id) ON networks.id = networkdhcpagentbindings_1.network_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = networks.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN externalnetworks AS externalnetworks_1 ON networks.id = externalnetworks_1.network_id LEFT OUTER JOIN qos_network_policy_bindings AS qos_network_policy_bindings_1 ON networks.id = qos_network_policy_bindings_1.network_id LEFT OUTER JOIN networksecuritybindings AS networksecuritybindings_1 ON networks.id = networksecuritybindings_1.network_id LEFT OUTER JOIN networkdnsdomains AS networkdnsdomains_1 ON networks.id = networkdnsdomains_1.network_id ORDER BY anon_1.subnets_network_id"
    },
    {
        "adjusted": false,
        "comment": "curious that it has a list of the same subnet 3x (though it is SELECT DISTINCT from that so presumably something anticipates this possibility)",
        "db_id": "",
        "options": [
            "What are the tenant ID, ID, target tenant, action, object ID, and ID of the networks associated with the subnets having the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database?\n",
            "Can you list the tenant ID, ID, target tenant, action, object ID, and ID of the network RBACs associated with the subnets having the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database, ordered by network ID?\n",
            "What is the tenant ID, ID, target tenant, action, object ID, and ID of the networks linked to the subnets with the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database?\n",
            "Provide the tenant ID, ID, target tenant, action, object ID, and ID of the networks that have network RBACs associated with them based on the subnets with the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database, sorted by network ID."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, networks_1.id AS networks_1_id FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9')) AS anon_1 INNER JOIN networks AS networks_1 ON networks_1.id = anon_1.subnets_network_id INNER JOIN networkrbacs ON networks_1.id = networkrbacs.object_id ORDER BY networks_1.id"
    },
    {
        "adjusted": false,
        "comment": "This network is a TIG network with two subnets `tig-server-subnet` (id e8da8ec5-364b-4a31-afaf-f68a206b7846) and `tig-server-v6` (id 4ec9c5db-8f83-4f66-9de3-45078ba25f41) oddly running the query gives 4 row rather than the expected 2 with the `tig-server-subnet` result shown 3x IDK if this is an oddity of the query or the data",
        "db_id": "",
        "options": [
            "What information is retrieved about subnets, including their ID, name, IP version, CIDR, gateway IP, and DHCP status, for networks that are associated with the external network ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database?\n   \n",
            "Can you list the subnet pool details such as ID, name, IP version, default prefix length, and whether it is shared or default, for the subnets that are linked to the network with the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database?\n\n",
            "What are the IP allocation pool details, including the first and last IP addresses, for the subnets associated with the network ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database?\n\n",
            "Provide the DNS name server addresses and their order, as well as the subnet routes' destination and next hop, for the subnets connected to the network with the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT subnets.tenant_id AS subnets_tenant_id, subnets.id AS subnets_id, subnets.name AS subnets_name, subnets.network_id AS subnets_network_id, subnets.subnetpool_id AS subnets_subnetpool_id, subnets.ip_version AS subnets_ip_version, subnets.cidr AS subnets_cidr, subnets.gateway_ip AS subnets_gateway_ip, subnets.enable_dhcp AS subnets_enable_dhcp, subnets.ipv6_ra_mode AS subnets_ipv6_ra_mode, subnets.ipv6_address_mode AS subnets_ipv6_address_mode, subnets.standard_attr_id AS subnets_standard_attr_id, anon_1.networks_id AS anon_1_networks_id, subnetpoolprefixes_1.cidr AS subnetpoolprefixes_1_cidr, subnetpoolprefixes_1.subnetpool_id AS subnetpoolprefixes_1_subnetpool_id, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, subnetpools_1.tenant_id AS subnetpools_1_tenant_id, subnetpools_1.id AS subnetpools_1_id, subnetpools_1.name AS subnetpools_1_name, subnetpools_1.ip_version AS subnetpools_1_ip_version, subnetpools_1.default_prefixlen AS subnetpools_1_default_prefixlen, subnetpools_1.min_prefixlen AS subnetpools_1_min_prefixlen, subnetpools_1.max_prefixlen AS subnetpools_1_max_prefixlen, subnetpools_1.shared AS subnetpools_1_shared, subnetpools_1.is_default AS subnetpools_1_is_default, subnetpools_1.default_quota AS subnetpools_1_default_quota, subnetpools_1.hash AS subnetpools_1_hash, subnetpools_1.address_scope_id AS subnetpools_1_address_scope_id, subnetpools_1.standard_attr_id AS subnetpools_1_standard_attr_id, ipallocationpools_1.id AS ipallocationpools_1_id, ipallocationpools_1.subnet_id AS ipallocationpools_1_subnet_id, ipallocationpools_1.first_ip AS ipallocationpools_1_first_ip, ipallocationpools_1.last_ip AS ipallocationpools_1_last_ip, dnsnameservers_1.address AS dnsnameservers_1_address, dnsnameservers_1.subnet_id AS dnsnameservers_1_subnet_id, dnsnameservers_1.`order` AS dnsnameservers_1_order, subnetroutes_1.destination AS subnetroutes_1_destination, subnetroutes_1.nexthop AS subnetroutes_1_nexthop, subnetroutes_1.subnet_id AS subnetroutes_1_subnet_id, standardattributes_2.created_at AS standardattributes_2_created_at, standardattributes_2.updated_at AS standardattributes_2_updated_at, standardattributes_2.id AS standardattributes_2_id, standardattributes_2.resource_type AS standardattributes_2_resource_type, standardattributes_2.description AS standardattributes_2_description, tags_2.standard_attr_id AS tags_2_standard_attr_id, tags_2.tag AS tags_2_tag FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('b3d6c27a-a9bb-4521-b5de-4d65eb7490dc')) AS anon_1 INNER JOIN subnets ON anon_1.networks_id = subnets.network_id LEFT OUTER JOIN subnetpools AS subnetpools_1 ON subnets.subnetpool_id = subnetpools_1.id LEFT OUTER JOIN subnetpoolprefixes AS subnetpoolprefixes_1 ON subnetpools_1.id = subnetpoolprefixes_1.subnetpool_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = subnetpools_1.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN ipallocationpools AS ipallocationpools_1 ON subnets.id = ipallocationpools_1.subnet_id LEFT OUTER JOIN dnsnameservers AS dnsnameservers_1 ON subnets.id = dnsnameservers_1.subnet_id LEFT OUTER JOIN subnetroutes AS subnetroutes_1 ON subnets.id = subnetroutes_1.subnet_id LEFT OUTER JOIN standardattributes AS standardattributes_2 ON standardattributes_2.id = subnets.standard_attr_id LEFT OUTER JOIN tags AS tags_2 ON standardattributes_2.id = tags_2.standard_attr_id ORDER BY anon_1.networks_id, dnsnameservers_1.`order`"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the tenant ID, ID, target tenant, action, object ID, and network ID associated with the networkrbacs records where the network ID is 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database?\n   \n",
            "Can you list the network ID, tenant ID, ID, target tenant, action, and object ID for the networkrbacs records linked to the network with the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database, ordered by network ID?\n\n",
            "What is the network ID of the subnets, along with the tenant ID, ID, target tenant, action, and object ID of the networkrbacs records associated with the subnets of the network 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database?\n\n",
            "Provide the tenant ID, ID, target tenant, action, object ID, and network ID for the networkrbacs records that are related to the subnets of the network with the ID 'b3d6c27a-a9bb-4521-b5de-4d65eb7490dc' in the OpenStack database, sorted by network ID."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, subnets_1.network_id AS subnets_1_network_id FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('b3d6c27a-a9bb-4521-b5de-4d65eb7490dc')) AS anon_1 INNER JOIN subnets AS subnets_1 ON anon_1.networks_id = subnets_1.network_id INNER JOIN networkrbacs ON subnets_1.network_id = networkrbacs.object_id ORDER BY subnets_1.network_id"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the tenant ID, ID, target tenant, action, object ID, and ID of the networks associated with the subnet ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in the OpenStack database?\n   \n",
            "Can you list the tenant ID, ID, target tenant, action, object ID, and ID of the network RBACs associated with the subnet ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in the OpenStack database, ordered by network ID?\n\n",
            "What is the tenant ID, ID, target tenant, action, object ID, and ID of the networks that have network RBACs associated with the subnet ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in the OpenStack database?\n\n",
            "Provide the tenant ID, ID, target tenant, action, object ID, and ID of the networks along with the network ID that are linked to the subnet ID '16eaae8c-1920-4b8b-8765-f149dde8a1a6' in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, networks_1.id AS networks_1_id FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('16eaae8c-1920-4b8b-8765-f149dde8a1a6')) AS anon_1 INNER JOIN networks AS networks_1 ON networks_1.id = anon_1.subnets_network_id INNER JOIN networkrbacs ON networks_1.id = networkrbacs.object_id ORDER BY networks_1.id"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the tenant ID, ID, target tenant, action, and object ID for the network RBACs associated with the networks having IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database?\n",
            "Can you list the tenant ID, ID, target tenant, action, and object ID for the network RBACs linked to the networks with the specified IDs, ordered by networks ID?\n",
            "Which network RBACs are connected to the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' based on their tenant ID, ID, target tenant, action, and object ID in the OpenStack database?\n",
            "Provide the details of network RBACs, including tenant ID, ID, target tenant, action, and object ID, for the networks identified by the specified IDs, sorted by networks ID."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, anon_1.networks_id AS anon_1_networks_id FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d')) AS anon_1 INNER JOIN networkrbacs ON anon_1.networks_id = networkrbacs.object_id ORDER BY anon_1.networks_id"
    },
    {
        "adjusted": false,
        "comment": "This returns a NULL result if the user is local not federated (all our users are local)\r\n \r\ncorrected query s/USER/user/;\r\n\r\nSELECT federated_user.id AS federated_user_id,     federated_user.user_id AS federated_user_user_id,     federated_user.idp_id AS federated_user_idp_id,     federated_user.protocol_id AS federated_user_protocol_id,     federated_user.unique_id AS federated_user_unique_id,     federated_user.display_name AS federated_user_display_name,     anon_1.user_id AS anon_1_user_id FROM   (SELECT user.id AS user_id    FROM user    WHERE user.id = '945fa0ad0137481cac5ef83a0b94b1b9') AS anon_1 INNER JOIN federated_user ON anon_1.user_id = federated_user.user_id ORDER BY anon_1.user_id;",
        "db_id": "",
        "options": [
            "What are the federated user ID, user ID, IDP ID, protocol ID, unique ID, display name, and user ID for the user with the ID '945fa0ad0137481cac5ef83a0b94b1b9' in the OpenStack database?\n   \n",
            "Can you list the federated user ID, user ID, IDP ID, protocol ID, unique ID, display name, and user ID for the user with the ID '945fa0ad0137481cac5ef83a0b94b1b9' in the OpenStack database, ordered by user ID?\n\n",
            "What is the display name of the federated user with the user ID '945fa0ad0137481cac5ef83a0b94b1b9' in the OpenStack database?\n\n",
            "Provide the unique ID and display name of the federated user with the user ID '945fa0ad0137481cac5ef83a0b94b1b9' in the OpenStack database."
        ],
        "question": "",
        "sql": "SELECT federated_user.id AS federated_user_id, federated_user.user_id AS federated_user_user_id, federated_user.idp_id AS federated_user_idp_id, federated_user.protocol_id AS federated_user_protocol_id, federated_user.unique_id AS federated_user_unique_id, federated_user.display_name AS federated_user_display_name, anon_1.user_id AS anon_1_user_id FROM (SELECT user.id AS user_id FROM user WHERE user.id = '945fa0ad0137481cac5ef83a0b94b1b9') AS anon_1 INNER JOIN federated_user ON anon_1.user_id = federated_user.user_id ORDER BY anon_1.user_id"
    },
    {
        "adjusted": false,
        "comment": "corrected query s/USER/user/;\r\n\r\nSELECT local_user.id AS local_user_id,     local_user.user_id AS local_user_user_id,     local_user.domain_id AS local_user_domain_id,     local_user.name AS local_user_name,     anon_1.user_id AS anon_1_user_id FROM   (SELECT user.id AS user_id    FROM user    INNER JOIN local_user ON user.id = local_user.user_id    WHERE local_user.name = 'neutron'      AND local_user.domain_id = 'default') AS anon_1 INNER JOIN local_user ON anon_1.user_id = local_user.user_id ORDER BY anon_1.user_id;",
        "db_id": "",
        "options": [
            "What are the local user ID, user ID, domain ID, name, and user ID of the user named 'neutron' in the 'default' domain in the OpenStack database, ordered by user ID?\n",
            "Can you list the local user ID, user ID, domain ID, and name of the user named 'neutron' in the 'default' domain from the OpenStack database, ordered by user ID?\n",
            "What is the local user ID, user ID, domain ID, and name for the user named 'neutron' in the 'default' domain in the OpenStack database, ordered by user ID?\n",
            "Provide the local user ID, user ID, domain ID, and name of the user with the name 'neutron' in the 'default' domain from the OpenStack database, ordered by user ID."
        ],
        "question": "",
        "sql": "SELECT local_user.id AS local_user_id, local_user.user_id AS local_user_user_id, local_user.domain_id AS local_user_domain_id, local_user.name AS local_user_name, anon_1.user_id AS anon_1_user_id FROM (SELECT user.id AS user_id FROM user INNER JOIN local_user ON user.id = local_user.user_id WHERE local_user.name = 'neutron' AND local_user.domain_id = 'default') AS anon_1 INNER JOIN local_user ON anon_1.user_id = local_user.user_id ORDER BY anon_1.user_id"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the subnets, including tenant ID, subnet ID, name, network ID, subnet pool ID, IP version, CIDR, gateway IP, and DHCP status, for the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' and 'c9e8f307-e1d5-4c06-b464-ef5370ca1d6d' in the OpenStack database?\n",
            "Can you list the subnet pool details such as ID, name, IP version, default prefix length, minimum prefix length, maximum prefix length, shared status, and default quota for the subnets associated with the specified networks in the OpenStack database?\n",
            "What are the IP allocation pool details, including ID, subnet ID, first IP, and last IP, for the subnets linked to the networks '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' and 'c9e8f307-e1d5-4c06-b464-ef5370ca1d6d' in the OpenStack database?\n",
            "Can you provide the DNS nameservers' details, such as address and order, for the subnets connected to the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' and 'c9e8f307-e1d5-4c06-b464-ef5370ca1d6d' in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT subnets.tenant_id AS subnets_tenant_id, subnets.id AS subnets_id, subnets.name AS subnets_name, subnets.network_id AS subnets_network_id, subnets.subnetpool_id AS subnets_subnetpool_id, subnets.ip_version AS subnets_ip_version, subnets.cidr AS subnets_cidr, subnets.gateway_ip AS subnets_gateway_ip, subnets.enable_dhcp AS subnets_enable_dhcp, subnets.ipv6_ra_mode AS subnets_ipv6_ra_mode, subnets.ipv6_address_mode AS subnets_ipv6_address_mode, subnets.standard_attr_id AS subnets_standard_attr_id, anon_1.networks_id AS anon_1_networks_id, subnetpoolprefixes_1.cidr AS subnetpoolprefixes_1_cidr, subnetpoolprefixes_1.subnetpool_id AS subnetpoolprefixes_1_subnetpool_id, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, subnetpools_1.tenant_id AS subnetpools_1_tenant_id, subnetpools_1.id AS subnetpools_1_id, subnetpools_1.name AS subnetpools_1_name, subnetpools_1.ip_version AS subnetpools_1_ip_version, subnetpools_1.default_prefixlen AS subnetpools_1_default_prefixlen, subnetpools_1.min_prefixlen AS subnetpools_1_min_prefixlen, subnetpools_1.max_prefixlen AS subnetpools_1_max_prefixlen, subnetpools_1.shared AS subnetpools_1_shared, subnetpools_1.is_default AS subnetpools_1_is_default, subnetpools_1.default_quota AS subnetpools_1_default_quota, subnetpools_1.hash AS subnetpools_1_hash, subnetpools_1.address_scope_id AS subnetpools_1_address_scope_id, subnetpools_1.standard_attr_id AS subnetpools_1_standard_attr_id, ipallocationpools_1.id AS ipallocationpools_1_id, ipallocationpools_1.subnet_id AS ipallocationpools_1_subnet_id, ipallocationpools_1.first_ip AS ipallocationpools_1_first_ip, ipallocationpools_1.last_ip AS ipallocationpools_1_last_ip, dnsnameservers_1.address AS dnsnameservers_1_address, dnsnameservers_1.subnet_id AS dnsnameservers_1_subnet_id, dnsnameservers_1.`order` AS dnsnameservers_1_order, subnetroutes_1.destination AS subnetroutes_1_destination, subnetroutes_1.nexthop AS subnetroutes_1_nexthop, subnetroutes_1.subnet_id AS subnetroutes_1_subnet_id, standardattributes_2.created_at AS standardattributes_2_created_at, standardattributes_2.updated_at AS standardattributes_2_updated_at, standardattributes_2.id AS standardattributes_2_id, standardattributes_2.resource_type AS standardattributes_2_resource_type, standardattributes_2.description AS standardattributes_2_description, tags_2.standard_attr_id AS tags_2_standard_attr_id, tags_2.tag AS tags_2_tag FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', 'c9e8f307-e1d5-4c06-b464-ef5370ca1d6d')) AS anon_1 INNER JOIN subnets ON anon_1.networks_id = subnets.network_id LEFT OUTER JOIN subnetpools AS subnetpools_1 ON subnets.subnetpool_id = subnetpools_1.id LEFT OUTER JOIN subnetpoolprefixes AS subnetpoolprefixes_1 ON subnetpools_1.id = subnetpoolprefixes_1.subnetpool_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = subnetpools_1.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN ipallocationpools AS ipallocationpools_1 ON subnets.id = ipallocationpools_1.subnet_id LEFT OUTER JOIN dnsnameservers AS dnsnameservers_1 ON subnets.id = dnsnameservers_1.subnet_id LEFT OUTER JOIN subnetroutes AS subnetroutes_1 ON subnets.id = subnetroutes_1.subnet_id LEFT OUTER JOIN standardattributes AS standardattributes_2 ON standardattributes_2.id = subnets.standard_attr_id LEFT OUTER JOIN tags AS tags_2 ON standardattributes_2.id = tags_2.standard_attr_id ORDER BY anon_1.networks_id, dnsnameservers_1.`order`"
    },
    {
        "adjusted": false,
        "comment": "Duplicate?",
        "db_id": "",
        "options": [
            "What are the tenant ID, ID, target tenant, action, and object ID for the network RBACs associated with the networks having IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database?\n",
            "Can you list the network ID for the networks that are left outer joined with external networks, and then provide the corresponding network RBACs details, ordered by network ID?\n",
            "Which network RBACs are linked to the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', and what are their respective tenant ID, ID, target tenant, action, and object ID in the OpenStack database?\n",
            "Provide the tenant ID, ID, target tenant, action, and object ID for the network RBACs that are associated with the networks having IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', ordered by network ID."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, anon_1.networks_id AS anon_1_networks_id FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d')) AS anon_1 INNER JOIN networkrbacs ON anon_1.networks_id = networkrbacs.object_id ORDER BY anon_1.networks_id"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the tenant ID, ID, target tenant, action, and object ID for the network RBACs associated with the subnets having the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database?\n",
            "Can you list the tenant ID, ID, target tenant, action, and object ID for the network RBACs linked to the subnets with the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9', and order the results by the subnets' network ID?\n",
            "What is the target tenant, action, and object ID for the network RBACs associated with the subnets having the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database?\n",
            "Provide the tenant ID, ID, target tenant, action, and object ID for the network RBACs that correspond to the subnets with the IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9', ordered by the subnets' network ID."
        ],
        "question": "",
        "sql": "SELECT networkrbacs.tenant_id AS networkrbacs_tenant_id, networkrbacs.id AS networkrbacs_id, networkrbacs.target_tenant AS networkrbacs_target_tenant, networkrbacs.action AS networkrbacs_action, networkrbacs.object_id AS networkrbacs_object_id, anon_1.subnets_network_id AS anon_1_subnets_network_id FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9')) AS anon_1 INNER JOIN networkrbacs ON anon_1.subnets_network_id = networkrbacs.object_id ORDER BY anon_1.subnets_network_id"
    },
    {
        "adjusted": false,
        "comment": "corrected query s/USER/user/\r\n\r\nSELECT password.id AS password_id,     password.local_user_id AS password_local_user_id,     password.password AS password_password,     local_user_1.id AS local_user_1_id FROM   (SELECT user.id AS user_id    FROM user    INNER JOIN local_user ON user.id = local_user.user_id    WHERE local_user.name = 'neutron'      AND local_user.domain_id = 'default') AS anon_1 INNER JOIN local_user AS local_user_1 ON anon_1.user_id = local_user_1.user_id INNER JOIN password ON local_user_1.id = password.local_user_id ORDER BY local_user_1.id;",
        "db_id": "",
        "options": [
            "What is the password ID, local user ID, password, and local user ID for the user named 'neutron' in the 'default' domain in the OpenStack database, ordered by local user ID?\n   \n",
            "Can you list the password ID, local user ID, password, and local user ID associated with the user named 'neutron' in the 'default' domain from the OpenStack database?\n   \n",
            "Which password details are stored for the user named 'neutron' in the 'default' domain in the OpenStack database, and how are they ordered?\n   \n",
            "Provide the local user ID, user ID, domain ID, name, and user ID of the user named 'neutron' in the 'default' domain from the OpenStack database, along with their corresponding password details, ordered by local user ID."
        ],
        "question": "",
        "sql": "SELECT password.id AS password_id, password.local_user_id AS password_local_user_id, password.password AS password_password, local_user_1.id AS local_user_1_id FROM (SELECT user.id AS user_id FROM user INNER JOIN local_user ON user.id = local_user.user_id WHERE local_user.name = 'neutron' AND local_user.domain_id = 'default') AS anon_1 INNER JOIN local_user AS local_user_1 ON anon_1.user_id = local_user_1.user_id INNER JOIN password ON local_user_1.id = password.local_user_id ORDER BY local_user_1.id"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What information is retrieved from the OpenStack database regarding subnets, including their tenant ID, ID, name, network ID, subnet pool ID, IP version, CIDR, gateway IP, DHCP status, IPv6 RA mode, IPv6 address mode, and standard attribute ID, for networks with specific IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d'?\n   \n",
            "Can you list the subnet pool details such as ID, name, IP version, default prefix length, minimum prefix length, maximum prefix length, shared status, default quota, hash, and address scope ID for the subnets associated with the networks having IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database?\n\n",
            "What are the details of the IP allocation pools, including ID, subnet ID, first IP, and last IP, for the subnets linked to the networks with IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database?\n\n",
            "How is the retrieved data structured for the subnets, subnet pools, IP allocation pools, DNS name servers, subnet routes, standard attributes, and tags associated with the networks identified by the IDs '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d' in the OpenStack database, ordered by network ID and DNS name server order?"
        ],
        "question": "",
        "sql": "SELECT subnets.tenant_id AS subnets_tenant_id, subnets.id AS subnets_id, subnets.name AS subnets_name, subnets.network_id AS subnets_network_id, subnets.subnetpool_id AS subnets_subnetpool_id, subnets.ip_version AS subnets_ip_version, subnets.cidr AS subnets_cidr, subnets.gateway_ip AS subnets_gateway_ip, subnets.enable_dhcp AS subnets_enable_dhcp, subnets.ipv6_ra_mode AS subnets_ipv6_ra_mode, subnets.ipv6_address_mode AS subnets_ipv6_address_mode, subnets.standard_attr_id AS subnets_standard_attr_id, anon_1.networks_id AS anon_1_networks_id, subnetpoolprefixes_1.cidr AS subnetpoolprefixes_1_cidr, subnetpoolprefixes_1.subnetpool_id AS subnetpoolprefixes_1_subnetpool_id, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, subnetpools_1.tenant_id AS subnetpools_1_tenant_id, subnetpools_1.id AS subnetpools_1_id, subnetpools_1.name AS subnetpools_1_name, subnetpools_1.ip_version AS subnetpools_1_ip_version, subnetpools_1.default_prefixlen AS subnetpools_1_default_prefixlen, subnetpools_1.min_prefixlen AS subnetpools_1_min_prefixlen, subnetpools_1.max_prefixlen AS subnetpools_1_max_prefixlen, subnetpools_1.shared AS subnetpools_1_shared, subnetpools_1.is_default AS subnetpools_1_is_default, subnetpools_1.default_quota AS subnetpools_1_default_quota, subnetpools_1.hash AS subnetpools_1_hash, subnetpools_1.address_scope_id AS subnetpools_1_address_scope_id, subnetpools_1.standard_attr_id AS subnetpools_1_standard_attr_id, ipallocationpools_1.id AS ipallocationpools_1_id, ipallocationpools_1.subnet_id AS ipallocationpools_1_subnet_id, ipallocationpools_1.first_ip AS ipallocationpools_1_first_ip, ipallocationpools_1.last_ip AS ipallocationpools_1_last_ip, dnsnameservers_1.address AS dnsnameservers_1_address, dnsnameservers_1.subnet_id AS dnsnameservers_1_subnet_id, dnsnameservers_1.`order` AS dnsnameservers_1_order, subnetroutes_1.destination AS subnetroutes_1_destination, subnetroutes_1.nexthop AS subnetroutes_1_nexthop, subnetroutes_1.subnet_id AS subnetroutes_1_subnet_id, standardattributes_2.created_at AS standardattributes_2_created_at, standardattributes_2.updated_at AS standardattributes_2_updated_at, standardattributes_2.id AS standardattributes_2_id, standardattributes_2.resource_type AS standardattributes_2_resource_type, standardattributes_2.description AS standardattributes_2_description, tags_2.standard_attr_id AS tags_2_standard_attr_id, tags_2.tag AS tags_2_tag FROM (SELECT networks.id AS networks_id FROM networks LEFT OUTER JOIN externalnetworks ON networks.id = externalnetworks.network_id WHERE networks.id IN ('0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d', '0a1d0a27-cffa-4de3-92c5-9d3fd3f2e74d')) AS anon_1 INNER JOIN subnets ON anon_1.networks_id = subnets.network_id LEFT OUTER JOIN subnetpools AS subnetpools_1 ON subnets.subnetpool_id = subnetpools_1.id LEFT OUTER JOIN subnetpoolprefixes AS subnetpoolprefixes_1 ON subnetpools_1.id = subnetpoolprefixes_1.subnetpool_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = subnetpools_1.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN ipallocationpools AS ipallocationpools_1 ON subnets.id = ipallocationpools_1.subnet_id LEFT OUTER JOIN dnsnameservers AS dnsnameservers_1 ON subnets.id = dnsnameservers_1.subnet_id LEFT OUTER JOIN subnetroutes AS subnetroutes_1 ON subnets.id = subnetroutes_1.subnet_id LEFT OUTER JOIN standardattributes AS standardattributes_2 ON standardattributes_2.id = subnets.standard_attr_id LEFT OUTER JOIN tags AS tags_2 ON standardattributes_2.id = tags_2.standard_attr_id ORDER BY anon_1.networks_id, dnsnameservers_1.`order`"
    },
    {
        "adjusted": false,
        "comment": "",
        "db_id": "",
        "options": [
            "What are the details of the networks, including tenant ID, ID, name, status, admin state, MTU, VLAN transparency, availability zone hints, and standard attribute ID, for the subnets with IDs '76123b94-2ae9-40c4-a4c6-03ee98d081d9' in the OpenStack database?\n",
            "Can you list the agents associated with the networks, including agent ID, type, binary, topic, host, availability zone, admin state, created at, started at, heartbeat timestamp, description, configurations, resource versions, and load, for the specified subnets in the OpenStack database?\n",
            "Provide the details of the standard attributes, such as created at, updated at, ID, resource type, and description, along with the tags and tag IDs associated with the networks for the given subnets in the OpenStack database.\n",
            "What are the network security details, including network ID and port security status, as well as the DNS domain information for the networks associated with the specified subnets in the OpenStack database?"
        ],
        "question": "",
        "sql": "SELECT networks.tenant_id AS networks_tenant_id, networks.id AS networks_id, networks.name AS networks_name, networks.status AS networks_status, networks.admin_state_up AS networks_admin_state_up, networks.mtu AS networks_mtu, networks.vlan_transparent AS networks_vlan_transparent, networks.availability_zone_hints AS networks_availability_zone_hints, networks.standard_attr_id AS networks_standard_attr_id, anon_1.subnets_network_id AS anon_1_subnets_network_id, agents_1.id AS agents_1_id, agents_1.agent_type AS agents_1_agent_type, agents_1.`binary` AS agents_1_binary, agents_1.topic AS agents_1_topic, agents_1.host AS agents_1_host, agents_1.availability_zone AS agents_1_availability_zone, agents_1.admin_state_up AS agents_1_admin_state_up, agents_1.created_at AS agents_1_created_at, agents_1.started_at AS agents_1_started_at, agents_1.heartbeat_timestamp AS agents_1_heartbeat_timestamp, agents_1.description AS agents_1_description, agents_1.configurations AS agents_1_configurations, agents_1.resource_versions AS agents_1_resource_versions, agents_1.`load` AS agents_1_load, standardattributes_1.created_at AS standardattributes_1_created_at, standardattributes_1.updated_at AS standardattributes_1_updated_at, standardattributes_1.id AS standardattributes_1_id, standardattributes_1.resource_type AS standardattributes_1_resource_type, standardattributes_1.description AS standardattributes_1_description, tags_1.standard_attr_id AS tags_1_standard_attr_id, tags_1.tag AS tags_1_tag, externalnetworks_1.network_id AS externalnetworks_1_network_id, externalnetworks_1.is_default AS externalnetworks_1_is_default, qos_network_policy_bindings_1.policy_id AS qos_network_policy_bindings_1_policy_id, qos_network_policy_bindings_1.network_id AS qos_network_policy_bindings_1_network_id, networksecuritybindings_1.network_id AS networksecuritybindings_1_network_id, networksecuritybindings_1.port_security_enabled AS networksecuritybindings_1_port_security_enabled, networkdnsdomains_1.network_id AS networkdnsdomains_1_network_id, networkdnsdomains_1.dns_domain AS networkdnsdomains_1_dns_domain FROM (SELECT DISTINCT subnets.network_id AS subnets_network_id FROM subnets WHERE subnets.id IN ('76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9', '76123b94-2ae9-40c4-a4c6-03ee98d081d9')) AS anon_1 INNER JOIN networks ON networks.id = anon_1.subnets_network_id LEFT OUTER JOIN (networkdhcpagentbindings AS networkdhcpagentbindings_1 INNER JOIN agents AS agents_1 ON agents_1.id = networkdhcpagentbindings_1.dhcp_agent_id) ON networks.id = networkdhcpagentbindings_1.network_id LEFT OUTER JOIN standardattributes AS standardattributes_1 ON standardattributes_1.id = networks.standard_attr_id LEFT OUTER JOIN tags AS tags_1 ON standardattributes_1.id = tags_1.standard_attr_id LEFT OUTER JOIN externalnetworks AS externalnetworks_1 ON networks.id = externalnetworks_1.network_id LEFT OUTER JOIN qos_network_policy_bindings AS qos_network_policy_bindings_1 ON networks.id = qos_network_policy_bindings_1.network_id LEFT OUTER JOIN networksecuritybindings AS networksecuritybindings_1 ON networks.id = networksecuritybindings_1.network_id LEFT OUTER JOIN networkdnsdomains AS networkdnsdomains_1 ON networks.id = networkdnsdomains_1.network_id ORDER BY anon_1.subnets_network_id"
    }
]